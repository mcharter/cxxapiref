<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_c_async_one_shot">
	<apiName>CAsyncOneShot</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassDerivations>
				<cxxClassDerivation>
					<cxxClassDerivationAccessSpecifier value="public"/>
					<cxxClassBaseClass href="class_c_active.xml#class_c_active">CActive</cxxClassBaseClass>
				</cxxClassDerivation>
			</cxxClassDerivations>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="1741"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/e32base.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="1711"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="1751"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>An active object that performs processing that is only performed once.</p>
			<p>The active object is intended to be given a low priority, so that it runs only when no higher-priority active objects are ready to run. In addition, the class ensures that the current thread cannot be closed until the active object is destroyed.</p>
			<p>The class needs to be derived from to make use of its behaviour, in particular, it needs to define and implement a <xref href="class_c_active.xml#class_c_active_1a1562734d9d119b6ff24bc3aec793ce3d">RunL()</xref> function.</p>
			<p>NB: the constructor creates a process-relative handle to the current thread and this is stored within this object. If the thread subsequently dies abnormally, then this handle will not be closed, and the thread will not be destroyed until the process terminates.</p>
			<p>NB: if <xref href="class_c_async_one_shot.xml#class_c_async_one_shot_1a68097a5df9341fa3f6ccb9f976bf82d6">Call()</xref> is called from a different thread (for example, to implement a kind of inter-thread communication), a client-specific mechanism must be used to ensure that the thread that created this object is still alive.</p>
			<p>NB: if the thread that created this object has its own heap and terminates abnormally, then the handle stored within this object is lost.</p>
			<p>
				<xref href="class_c_active.xml#class_c_active_1a1562734d9d119b6ff24bc3aec793ce3d">CActive::RunL</xref> </p>
			<p>
				<xref href="class_c_async_one_shot.xml#class_c_async_one_shot_1a68097a5df9341fa3f6ccb9f976bf82d6">CAsyncOneShot::Call</xref> </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_c_async_one_shot_1a33dd512613954bd8749005b566ab3aa2">
		<apiName>CAsyncOneShot</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CAsyncOneShot</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C CAsyncOneShot(TInt aPriority)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CAsyncOneShot::CAsyncOneShot(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPriority</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1743"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_async_one_shot_1acae82a9cbcca1691731b234711007f17">
		<apiName>DoCancel</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CAsyncOneShot</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C void DoCancel()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CAsyncOneShot::DoCancel()</cxxFunctionNameLookup>
				<cxxFunctionReimplemented href="class_c_active.xml#class_c_active_1abca693565d1f15ef883f32d534fba261">CActive::DoCancel()</cxxFunctionReimplemented>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1744"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Implements cancellation of an outstanding request.</p>
				<p>This function is called as part of the active object&apos;s <xref href="class_c_active.xml#class_c_active_1a97781da8872ba6e86b5b83ad7170eb90">Cancel()</xref>.</p>
				<p>It must call the appropriate cancel function offered by the active object&apos;s asynchronous service provider. The asynchronous service provider&apos;s cancel is expected to act immediately.</p>
				<p>
					<xref href="class_c_async_one_shot.xml#class_c_async_one_shot_1acae82a9cbcca1691731b234711007f17">DoCancel()</xref> must not wait for event completion; this is handled by <xref href="class_c_active.xml#class_c_active_1a97781da8872ba6e86b5b83ad7170eb90">Cancel()</xref>.</p>
				<p>
					<xref href="class_c_active.xml#class_c_active_1a97781da8872ba6e86b5b83ad7170eb90">CActive::Cancel</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_async_one_shot_1a68097a5df9341fa3f6ccb9f976bf82d6">
		<apiName>Call</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CAsyncOneShot</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C void Call()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CAsyncOneShot::Call()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1745"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_async_one_shot_1a16c3aca53c30245326adfc90d2d65d43">
		<apiName>~CAsyncOneShot</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDestructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CAsyncOneShot</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C ~CAsyncOneShot()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CAsyncOneShot::~CAsyncOneShot()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1746"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_async_one_shot_1a6e86bd2ef80e43e4d97f26fbf68765c6">
		<apiName>Thread</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_r_thread.xml#class_r_thread">RThread</apiRelation> &amp;</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CAsyncOneShot</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline RThread &amp; Thread()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CAsyncOneShot::Thread()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1747"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2715"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2721"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets a handle to the current thread.</p>
				<p>The handle to the current thread. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_async_one_shot_1a0055d9e0858fd7ed39a6db49abc98e01">
		<apiName>Setup</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CAsyncOneShot</cxxFunctionScopedName>
				<cxxFunctionPrototype>void Setup()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CAsyncOneShot::Setup()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1749"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_c_async_one_shot_1a354d98a2c28ad380658ee33694a26536">
		<apiName>iThread</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_r_thread.xml#class_r_thread">RThread</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>CAsyncOneShot</cxxVariableScopedName>
				<cxxVariablePrototype>RThread iThread</cxxVariablePrototype>
				<cxxVariableNameLookup>CAsyncOneShot::iThread</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="1750"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxClassInherits>
		<cxxClassInheritsDetail>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1acfaa5bb1a4cda9d586f0ffaf2b0a0eb7">CActive::CActive(TInt)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1a97781da8872ba6e86b5b83ad7170eb90">CActive::Cancel()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1a44f0f5a2867d153feab11ee669d33b8d">CActive::Deque()</cxxClassFunctionInherited>
			<cxxClassEnumeratorInherited href="class_c_async_one_shot.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35ac59ba0db48385ddf49262e21f2a599b3">CActive::EPriorityHigh</cxxClassEnumeratorInherited>
			<cxxClassEnumeratorInherited href="class_c_async_one_shot.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35a5faa05021b83e97f1a5b00917aa34733">CActive::EPriorityIdle</cxxClassEnumeratorInherited>
			<cxxClassEnumeratorInherited href="class_c_async_one_shot.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35ac074efb2a15cd04c06d354fb1fd13f27">CActive::EPriorityLow</cxxClassEnumeratorInherited>
			<cxxClassEnumeratorInherited href="class_c_async_one_shot.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35ad19560103adbae4fa3eeca42c703e00b">CActive::EPriorityStandard</cxxClassEnumeratorInherited>
			<cxxClassEnumeratorInherited href="class_c_async_one_shot.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35ac4fc6edcb2aea0b20ab823f1017d788a">CActive::EPriorityUserInput</cxxClassEnumeratorInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1a098237f668ebdf6e5125a2deac03323d">CActive::Extension_(TUint,TAny *&amp;,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1a6d1d16020878d00c3af277ad2b0866f5">CActive::IsActive()const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1a97d8e693eb6f85ca883dbb385650ca28">CActive::IsAdded()const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1acb9ff1d90fbcb96058e2947c3f05c8e8">CActive::Priority()const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1af7a68e3e7ac05c01a9e22dd81393f834">CActive::RunError(TInt)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1a1562734d9d119b6ff24bc3aec793ce3d">CActive::RunL()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1a511d5a8dc1d43eca953eb5c69b0e022d">CActive::SetActive()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1a0d7c2ce1a5364daadef07b1020c9714f">CActive::SetPriority(TInt)</cxxClassFunctionInherited>
			<cxxClassVariableInherited href="class_c_async_one_shot.xml#class_c_active_1a38314f150856c0f369555b0ef17c3140">CActive::iStatus</cxxClassVariableInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_active_1a81e8cc3a48d5d6f56c502690f9969ef8">CActive::~CActive()</cxxClassFunctionInherited>
			<cxxClassEnumerationInherited href="class_c_async_one_shot.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35">CActive:TPriority</cxxClassEnumerationInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_base_1a240de7932690a4e987d75690b0b6f82b">CBase::CBase()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_base_1ac0a06aeab68b3e01be81f9dd79e011c6">CBase::Delete(CBase *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_base_1af4c4965092a763b0856ccbfa3cf99eaf">CBase::operator new(TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_base_1ab9e5f557dea4db22886189926687ddc1">CBase::operator new(TUint,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_base_1aa464dd21494443ac109084ed03b81f28">CBase::operator new(TUint,TLeave)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_base_1af8429815362d4df6fecd47179e0c5dfe">CBase::operator new(TUint,TLeave,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_base_1a80505bdf8b1b20a2ed102307a78eeeeb">CBase::operator new(TUint,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_async_one_shot.xml#class_c_base_1a1390361b94424be22bb2b1020eb400ea">CBase::~CBase()</cxxClassFunctionInherited>
		</cxxClassInheritsDetail>
	</cxxClassInherits>
</cxxClass>