<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_t_time_interval_micro_seconds">
	<apiName>TTimeIntervalMicroSeconds</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="1529"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="1528"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="1543"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Represents a time interval of a millionth of a second stored as a 64-bit integer.</p>
			<p>It supports the initialisation, setting and getting of an interval and provides standard comparison operations. Objects of this class can be added to and subtracted from <xref href="class_t_time.xml#class_t_time">TTime</xref> objects.</p>
			<p>
				<xref href="class_t_time.xml#class_t_time">TTime</xref> </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_t_time_interval_micro_seconds_1a7e8293d873aba3304fd55374aa3211ef">
		<apiName>TTimeIntervalMicroSeconds</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>TTimeIntervalMicroSeconds</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TTimeIntervalMicroSeconds()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TTimeIntervalMicroSeconds::TTimeIntervalMicroSeconds()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1531"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1321"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1327"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Default constructor.</p>
				<p>Constructs an uninitialised object. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_time_interval_micro_seconds_1aaf23b25895fb3f98e5cf1525d837c2bd">
		<apiName>TTimeIntervalMicroSeconds</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>TTimeIntervalMicroSeconds</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TTimeIntervalMicroSeconds(const TInt64 &amp;aInterval)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TTimeIntervalMicroSeconds::TTimeIntervalMicroSeconds(const TInt64 &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1a05bf37b696038fef93385278ebf8ee16">TInt64</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterval</cxxFunctionParameterDeclarationName>
						<apiDefNote>The 64-bit interval value with which the object is to be initialised. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1532"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1332"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1340"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Constructs the object with the specified 64-bit interval value.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_time_interval_micro_seconds_1a8046958398077a2d4fce46322d63ee34">
		<apiName>operator=</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</apiRelation> &amp;</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TTimeIntervalMicroSeconds</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TTimeIntervalMicroSeconds &amp; operator=(const TInt64 &amp;aInterval)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TTimeIntervalMicroSeconds::operator=(const TInt64 &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1a05bf37b696038fef93385278ebf8ee16">TInt64</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterval</cxxFunctionParameterDeclarationName>
						<apiDefNote>The 64-bit integer interval value to be assigned.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1533"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1345"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1353"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Assigns a 64-bit integer value to this object.</p>
				<p>A reference to this object. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_time_interval_micro_seconds_1a2c9053c93af2f01fcb22f2904cafee48">
		<apiName>operator==</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TTimeIntervalMicroSeconds</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool operator==(const TTimeIntervalMicroSeconds &amp;aInterval) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TTimeIntervalMicroSeconds::operator==(const TTimeIntervalMicroSeconds &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterval</cxxFunctionParameterDeclarationName>
						<apiDefNote>The time interval to be compared with this time interval.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1534"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1358"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1367"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Tests whether this <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object is equal to the specified <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object.</p>
				<p>True if the two time intervals are equal. False otherwise. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_time_interval_micro_seconds_1a281f9131efc4f34c74c9fb2e5e33ba32">
		<apiName>operator!=</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TTimeIntervalMicroSeconds</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool operator!=(const TTimeIntervalMicroSeconds &amp;aInterval) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TTimeIntervalMicroSeconds::operator!=(const TTimeIntervalMicroSeconds &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterval</cxxFunctionParameterDeclarationName>
						<apiDefNote>The time interval to be compared with this time interval.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1535"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1372"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1381"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Tests whether this <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object is not equal to the specified <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object.</p>
				<p>True if the two time intervals are not equal. False otherwise. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_time_interval_micro_seconds_1a90ba377dbce6e72e1bd7c6fe6083c35e">
		<apiName>operator&gt;=</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TTimeIntervalMicroSeconds</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool operator&gt;=(const TTimeIntervalMicroSeconds &amp;aInterval) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TTimeIntervalMicroSeconds::operator&gt;=(const TTimeIntervalMicroSeconds &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterval</cxxFunctionParameterDeclarationName>
						<apiDefNote>The time interval to be compared with this time interval.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1536"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1386"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1396"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Tests whether this <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object is greater than or equal to the specified <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object.</p>
				<p>True if this time interval is greater than or equal to the specified time interval. False otherwise. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_time_interval_micro_seconds_1ab1fbc5a90a25b032b63a232b54ab10c3">
		<apiName>operator&lt;=</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TTimeIntervalMicroSeconds</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool operator&lt;=(const TTimeIntervalMicroSeconds &amp;aInterval) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TTimeIntervalMicroSeconds::operator&lt;=(const TTimeIntervalMicroSeconds &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterval</cxxFunctionParameterDeclarationName>
						<apiDefNote>The time interval to be compared with this time interval.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1537"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1401"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1411"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Tests whether this <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object is less than or equal to the specified <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object.</p>
				<p>True if this time interval is less than or equal to the specified time interval. False otherwise. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_time_interval_micro_seconds_1a70199709c7d08570d70bb1b609869971">
		<apiName>operator&gt;</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TTimeIntervalMicroSeconds</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool operator&gt;(const TTimeIntervalMicroSeconds &amp;aInterval) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TTimeIntervalMicroSeconds::operator&gt;(const TTimeIntervalMicroSeconds &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterval</cxxFunctionParameterDeclarationName>
						<apiDefNote>The time interval to be compared with this time interval.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1538"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1416"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1426"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Tests whether this <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object is greater than the specified <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object.</p>
				<p>True if this time interval is greater than the specified time interval. False otherwise. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_time_interval_micro_seconds_1aad00f359f629b34fa3d93cfce583bbdc">
		<apiName>operator&lt;</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TTimeIntervalMicroSeconds</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool operator&lt;(const TTimeIntervalMicroSeconds &amp;aInterval) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TTimeIntervalMicroSeconds::operator&lt;(const TTimeIntervalMicroSeconds &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterval</cxxFunctionParameterDeclarationName>
						<apiDefNote>The time interval to be compared with this time interval.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1539"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1431"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1441"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Tests whether this <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object is less than the specified <xref href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</xref> object.</p>
				<p>True if this time interval is less than the specified time interval. False otherwise. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_time_interval_micro_seconds_1a2fa983239441f31142d76549d6b02468">
		<apiName>Int64</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>const <apiRelation href="e32def_8h.xml#_1a05bf37b696038fef93385278ebf8ee16">TInt64</apiRelation> &amp;</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TTimeIntervalMicroSeconds</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline const TInt64 &amp; Int64() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TTimeIntervalMicroSeconds::Int64()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1540"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1446"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1452"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the time interval as a 64-bit integer value.</p>
				<p>This 64-bit integer time interval value. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_t_time_interval_micro_seconds_1a744dc0e1d0f9c00141e1c2df7ccc50ff">
		<apiName>iInterval</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a05bf37b696038fef93385278ebf8ee16">TInt64</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TTimeIntervalMicroSeconds</cxxVariableScopedName>
				<cxxVariablePrototype>TInt64 iInterval</cxxVariablePrototype>
				<cxxVariableNameLookup>TTimeIntervalMicroSeconds::iInterval</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="1542"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
</cxxClass>