<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_r_ref_base">
	<apiName>RRefBase</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="4418"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="4417"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="4431"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Base class that provides an implementation for the templated <xref href="class_r_ref.xml#class_r_ref">RRef</xref> class.</p>
			<p>
				<xref href="class_r_ref.xml#class_r_ref">RRef</xref> </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_r_ref_base_1af2583cb6a0f55e901be0286bb8aa1da3">
		<apiName>Free</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RRefBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Free()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RRefBase::Free()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="4420"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_ref_base_1a8ce48a00d6f507e837b75514db4ffef0">
		<apiName>RRefBase</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionInline/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>RRefBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline RRefBase()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RRefBase::RRefBase()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="4422"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="4317"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="4319"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Default constructor. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_ref_base_1aea19cd846a1e72e4c1816d990b4761ef">
		<apiName>RRefBase</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionInline/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>RRefBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline RRefBase(const RRefBase &amp;aRef)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RRefBase::RRefBase(const RRefBase &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_r_ref_base.xml#class_r_ref_base">RRefBase</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRef</cxxFunctionParameterDeclarationName>
						<apiDefNote>A reference to the object to be copied. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="4423"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="4328"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="4329"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Copy constructor.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_ref_base_1a325546e77468c73adb4c117606b0a5cb">
		<apiName>DoAlloc</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RRefBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void DoAlloc(const TAny *aPtr, TInt aSize)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RRefBase::DoAlloc(const TAny *,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPtr</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="4424"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_ref_base_1a78186a3b2a10ad28f1ec30969b2be084">
		<apiName>DoAllocL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RRefBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void DoAllocL(const TAny *aPtr, TInt aSize)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RRefBase::DoAllocL(const TAny *,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPtr</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="4425"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_ref_base_1a4ee2a060489915d7d39d44d740156805">
		<apiName>Copy</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RRefBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Copy(const RRefBase &amp;aRef)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RRefBase::Copy(const RRefBase &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_r_ref_base.xml#class_r_ref_base">RRefBase</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRef</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="4426"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_ref_base_1a1aa97ea1305915e807a52cab90c85c79">
		<apiName>operator=</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RRefBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void operator=(const RRefBase &amp;aRef)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RRefBase::operator=(const RRefBase &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_r_ref_base.xml#class_r_ref_base">RRefBase</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRef</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="4428"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_r_ref_base_1aeefa2895b2f5117b33762b0a1fc1d3a1">
		<apiName>iPtr</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation> *</cxxVariableDeclaredType>
				<cxxVariableScopedName>RRefBase</cxxVariableScopedName>
				<cxxVariablePrototype>TInt * iPtr</cxxVariablePrototype>
				<cxxVariableNameLookup>RRefBase::iPtr</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="4430"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
</cxxClass>