<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_t_key">
	<apiName>TKey</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="869"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="868"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="884"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Defines the characteristics of a key used to access the elements of an array.</p>
			<p>The class is abstract and cannot be instantiated. A derived class must be defined and implemented.</p>
			<p>The classes <xref href="class_t_key_array_fix.xml#class_t_key_array_fix">TKeyArrayFix</xref>, <xref href="class_t_key_array_var.xml#class_t_key_array_var">TKeyArrayVar</xref> and <xref href="class_t_key_array_pak.xml#class_t_key_array_pak">TKeyArrayPak</xref>, derived from <xref href="class_t_key.xml#class_t_key">TKey</xref>, are already supplied to implement keys for the fixed length element, variable length element and packed arrays.</p>
			<p>A derived class would normally be written to define the characteristics of a key for a non standard array.</p>
			<p>
				<xref href="class_t_key_array_fix.xml#class_t_key_array_fix">TKeyArrayFix</xref> </p>
			<p>
				<xref href="class_t_key_array_var.xml#class_t_key_array_var">TKeyArrayVar</xref> </p>
			<p>
				<xref href="class_t_key_array_pak.xml#class_t_key_array_pak">TKeyArrayPak</xref> </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_t_key_1ad1d144b2bd2a7656dc59775f09acddc8">
		<apiName>SetPtr</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TKey</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetPtr(const TAny *aPtr)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TKey::SetPtr(const TAny *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPtr</cxxFunctionParameterDeclarationName>
						<apiDefNote>A pointer to a sample element. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="871"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="1040"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="1055"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the pointer to a sample element whose key is to be used for comparison.</p>
				<p>The element can be in an existing array or it can be located anywhere in addressable memory.</p>
				<p>The <xref href="class_t_key.xml#class_t_key_1a711d6d114092369c5b3c3dd3d81e1f70">At()</xref> member function supplied by a derived class must return a pointer to this sample element&apos;s key when passed an index value of KIndexPtr.</p>
				<p>
					<xref href="class_t_key.xml#class_t_key_1ad1d144b2bd2a7656dc59775f09acddc8">SetPtr()</xref> must be called before calling <xref href="class_user.xml#class_user_1a23f7effa6af5a29635c91f90593e48f3">User::BinarySearch()</xref> because this algorithm uses the key of this sample element as the basis for searching the array.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_key_1a8a984446a49b9f3e50c5147c9c15fbf8">
		<apiName>Compare</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TKey</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C TInt Compare(TInt aLeft, TInt aRight) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TKey::Compare(TInt,TInt)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aLeft</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRight</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="872"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_key_1a711d6d114092369c5b3c3dd3d81e1f70">
		<apiName>At</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TKey</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C TAny * At(TInt anIndex) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TKey::At(TInt)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>anIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="873"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_key_1a0a7792c289bf59c4dc9b6360cf1731d5">
		<apiName>TKey</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TKey</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TKey()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TKey::TKey()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="875"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_key_1a8ffdcd98b08b0beb8762956f49665fdb">
		<apiName>TKey</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TKey</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TKey(TInt aOffset, TKeyCmpText aType)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TKey::TKey(TInt,TKeyCmpText)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOffset</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a446e498855eefce7f182246e22161913">TKeyCmpText</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aType</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="876"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_key_1a40bd24bb23d8fabbf69e9bd1d1c5fe10">
		<apiName>TKey</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TKey</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TKey(TInt aOffset, TKeyCmpText aType, TInt aLength)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TKey::TKey(TInt,TKeyCmpText,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOffset</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a446e498855eefce7f182246e22161913">TKeyCmpText</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aType</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aLength</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="877"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_key_1ab5c0f4b36f3e13de7c4ebdd544829cd6">
		<apiName>TKey</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TKey</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TKey(TInt aOffset, TKeyCmpNumeric aType)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TKey::TKey(TInt,TKeyCmpNumeric)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOffset</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a97493b976a5ff31ab3df05f705783cfd">TKeyCmpNumeric</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aType</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="878"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_t_key_1addc93e8f884957d0706eba12a0f2d5fb">
		<apiName>iKeyOffset</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TKey</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iKeyOffset</cxxVariablePrototype>
				<cxxVariableNameLookup>TKey::iKeyOffset</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="880"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_key_1a6608dc7e80d35d9aef547d829abc7380">
		<apiName>iKeyLength</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TKey</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iKeyLength</cxxVariablePrototype>
				<cxxVariableNameLookup>TKey::iKeyLength</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="881"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_key_1a31e555775e29189d6d83339c83a891b4">
		<apiName>iCmpType</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TKey</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iCmpType</cxxVariablePrototype>
				<cxxVariableNameLookup>TKey::iCmpType</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="882"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_key_1ae3c4895796adb0f475defe328097bc6a">
		<apiName>iPtr</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>const <apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxVariableDeclaredType>
				<cxxVariableScopedName>TKey</cxxVariableScopedName>
				<cxxVariablePrototype>const TAny * iPtr</cxxVariablePrototype>
				<cxxVariableNameLookup>TKey::iPtr</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="883"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
</cxxClass>