<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_e_sock_1_1_t_c_f_selector">
	<apiName>ESock::TCFSelector</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_nodemessages_selector.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="662"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/comms-infras/ss_nodemessages_selector.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="661"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="713"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Message signature template for availability subscription message Message signature for availability status message Message interface for selector nodes Nodes wishing to implement this interface must implement all message protocols in the interface.</p>
		</apiDesc>
	</cxxClassDetail>
	<cxxEnumeration id="class_e_sock_1_1_t_c_f_selector_1a5f91f764ea37b4b7487a34dc3b7845d5">
		<apiName>@88</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="private"/>
				<cxxEnumerationScopedName>ESock::TCFSelector</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>@88</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>ESock::TCFSelector:@88</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="class_e_sock_1_1_t_c_f_selector_1a5f91f764ea37b4b7487a34dc3b7845d5a18600f0947c118bae8d7bb8d7bc07384">
						<apiName>ECFSimpleSelect</apiName>
						<cxxEnumeratorScopedName>ESock::TCFSelector</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>ECFSimpleSelect = 1</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>ESock::TCFSelector::ECFSimpleSelect</cxxEnumeratorNameLookup>
						<cxxEnumeratorInitialiser value="1"/>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_nodemessages_selector.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="666"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc/>
					</cxxEnumerator>
					<cxxEnumerator id="class_e_sock_1_1_t_c_f_selector_1a5f91f764ea37b4b7487a34dc3b7845d5ace788fdd428e6afbfc8dd57119c9643a">
						<apiName>ECFSelect</apiName>
						<cxxEnumeratorScopedName>ESock::TCFSelector</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>ECFSelect = 2</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>ESock::TCFSelector::ECFSelect</cxxEnumeratorNameLookup>
						<cxxEnumeratorInitialiser value="2"/>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_nodemessages_selector.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="667"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc/>
					</cxxEnumerator>
					<cxxEnumerator id="class_e_sock_1_1_t_c_f_selector_1a5f91f764ea37b4b7487a34dc3b7845d5ac1d462f9c778134020bd88137d2db755">
						<apiName>ECFSelectComplete</apiName>
						<cxxEnumeratorScopedName>ESock::TCFSelector</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>ECFSelectComplete = 3</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>ESock::TCFSelector::ECFSelectComplete</cxxEnumeratorNameLookup>
						<cxxEnumeratorInitialiser value="3"/>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_nodemessages_selector.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="669"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc/>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_nodemessages_selector.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="665"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_connectionserv.cpp"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="664"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="669"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc/>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxTypedef id="class_e_sock_1_1_t_c_f_selector_1aa961a17e169fe73dfdd0632e297f95df">
		<apiName>TSimpleSelect</apiName>
		<cxxTypedefDetail>
			<cxxTypedefDefinition>
				<cxxTypedefAccessSpecifier value="public"/>
				<cxxTypedefDeclaredType>
					<apiRelation href="struct_e_sock_1_1_t_message_sig_selection_prefs.xml#struct_e_sock_1_1_t_message_sig_selection_prefs">TMessageSigSelectionPrefs</apiRelation>&lt; ECFSimpleSelect, TCFSelector::ERealmId &gt;</cxxTypedefDeclaredType>
				<cxxTypedefScopedName>ESock::TCFSelector</cxxTypedefScopedName>
				<cxxTypedefPrototype>TMessageSigSelectionPrefs&lt; ECFSimpleSelect, TCFSelector::ERealmId &gt; TSimpleSelect</cxxTypedefPrototype>
				<cxxTypedefNameLookup>ESock::TCFSelector::TSimpleSelect</cxxTypedefNameLookup>
				<cxxTypedefAPIItemLocation>
					<cxxTypedefDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_nodemessages_selector.h"/>
					<cxxTypedefDeclarationFileLine name="lineNumber" value="686"/>
				</cxxTypedefAPIItemLocation>
			</cxxTypedefDefinition>
			<apiDesc>
				<p>Selection request sent to TierManagers (usually by MCPRs). Can only carry one type of selection preferences at a time, and for this reason, using TSelect is preferred. It should be noted however, that multiple nodes may be returned in exchange for this single preference, for example in the case of SNAP preferences.</p>
				<p>This request is completed only after TSelectComplete with a NULL address has been received by the requestor.</p>
				<p>
					<ul>
						<li>
							<p>Type: Request </p>
						</li>
						<li>
							<p>Fallible: Yes</p>
						</li>
					</ul>
				</p>
			</apiDesc>
		</cxxTypedefDetail>
	</cxxTypedef>
	<cxxTypedef id="class_e_sock_1_1_t_c_f_selector_1a30f6b49afed06bcb8dd2a5ec028ed187">
		<apiName>TSelect</apiName>
		<cxxTypedefDetail>
			<cxxTypedefDefinition>
				<cxxTypedefAccessSpecifier value="public"/>
				<cxxTypedefDeclaredType>
					<apiRelation href="struct_e_sock_1_1_t_message_sig_conn_pref_list.xml#struct_e_sock_1_1_t_message_sig_conn_pref_list">TMessageSigConnPrefList</apiRelation>&lt; ECFSelect, TCFSelector::ERealmId &gt;</cxxTypedefDeclaredType>
				<cxxTypedefScopedName>ESock::TCFSelector</cxxTypedefScopedName>
				<cxxTypedefPrototype>TMessageSigConnPrefList&lt; ECFSelect, TCFSelector::ERealmId &gt; TSelect</cxxTypedefPrototype>
				<cxxTypedefNameLookup>ESock::TCFSelector::TSelect</cxxTypedefNameLookup>
				<cxxTypedefAPIItemLocation>
					<cxxTypedefDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_nodemessages_selector.h"/>
					<cxxTypedefDeclarationFileLine name="lineNumber" value="699"/>
				</cxxTypedefAPIItemLocation>
			</cxxTypedefDefinition>
			<apiDesc>
				<p>Selection request sent to Tier Managers (usually by MCPRs or CSR). Carries an <xref href="class_e_sock_1_1_r_conn_pref_list.xml#class_e_sock_1_1_r_conn_pref_list">RConnPrefList</xref> instance, the objects in the list are used during the construction of the stack. Multiple nodes may be returned by the selection activity. This request is completed only after TSelectComplete with a NULL address has been received by the requestor.</p>
				<p>
					<ul>
						<li>
							<p>Type: Request </p>
						</li>
						<li>
							<p>Fallible: Yes</p>
						</li>
					</ul>
				</p>
			</apiDesc>
		</cxxTypedefDetail>
	</cxxTypedef>
	<cxxTypedef id="class_e_sock_1_1_t_c_f_selector_1a4058261dd25df57729b1d71c4b62304e">
		<apiName>TSelectComplete</apiName>
		<cxxTypedefDetail>
			<cxxTypedefDefinition>
				<cxxTypedefAccessSpecifier value="public"/>
				<cxxTypedefDeclaredType>
					<apiRelation href="struct_e_sock_1_1_t_message_sig_select_complete.xml#struct_e_sock_1_1_t_message_sig_select_complete">TMessageSigSelectComplete</apiRelation>&lt; ECFSelectComplete, TCFSelector::ERealmId &gt;</cxxTypedefDeclaredType>
				<cxxTypedefScopedName>ESock::TCFSelector</cxxTypedefScopedName>
				<cxxTypedefPrototype>TMessageSigSelectComplete&lt; ECFSelectComplete, TCFSelector::ERealmId &gt; TSelectComplete</cxxTypedefPrototype>
				<cxxTypedefNameLookup>ESock::TCFSelector::TSelectComplete</cxxTypedefNameLookup>
				<cxxTypedefAPIItemLocation>
					<cxxTypedefDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_nodemessages_selector.h"/>
					<cxxTypedefDeclarationFileLine name="lineNumber" value="712"/>
				</cxxTypedefAPIItemLocation>
			</cxxTypedefDefinition>
			<apiDesc>
				<p>Response to TSelect or TSelectNextLayer. Carries address to selected providers (MCPRs). A selection request is completed only after TSelectComplete with a NULL address has been received by the requestor. This response also carries some additional information about the selected provider.</p>
				<p>
					<ul>
						<li>
							<p>Type: Response to TSimpleSelect or TSelect </p>
						</li>
						<li>
							<p>Fallible: No</p>
						</li>
					</ul>
				</p>
			</apiDesc>
		</cxxTypedefDetail>
	</cxxTypedef>
</cxxClass>