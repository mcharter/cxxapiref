<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxStruct PUBLIC "-//NOKIA//DTD DITA C++ API Struct Reference Type v0.5.0//EN" "dtd/cxxStruct.dtd" >
<cxxStruct id="struct_t_thread_create_info">
	<apiName>TThreadCreateInfo</apiName>
	<cxxStructDetail>
		<cxxStructDefinition>
			<cxxStructAccessSpecifier value="public"/>
			<cxxStructAPIItemLocation>
				<cxxStructDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxStructDeclarationFileLine name="lineNumber" value="3699"/>
				<cxxStructDefinitionFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxStructDefinitionFileLineStart name="lineNumber" value="3698"/>
				<cxxStructDefinitionFileLineEnd name="lineNumber" value="3774"/>
			</cxxStructAPIItemLocation>
		</cxxStructDefinition>
		<apiDesc>
			<p>This structure specifies the type and properties of the thread to be created. It is passed as a parameter to the <xref href="class_r_thread.xml#class_r_thread_1a45d570657d095795975bd6cd3673f74f">RThread::Create()</xref> method.</p>
		</apiDesc>
	</cxxStructDetail>
	<cxxEnumeration id="struct_t_thread_create_info_1a10a01afc054e752fcef9e8b45b21908f">
		<apiName>TThreadCreateVersions</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="public"/>
				<cxxEnumerationScopedName>TThreadCreateInfo</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>TThreadCreateVersions</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>TThreadCreateInfo:TThreadCreateVersions</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="struct_t_thread_create_info_1a10a01afc054e752fcef9e8b45b21908fa2d9c5c8bd13a5fed9a4df6d86579c8ea">
						<apiName>EVersion0</apiName>
						<cxxEnumeratorScopedName>TThreadCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EVersion0</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TThreadCreateInfo::EVersion0</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3707"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc/>
					</cxxEnumerator>
					<cxxEnumerator id="struct_t_thread_create_info_1a10a01afc054e752fcef9e8b45b21908fa2937492a2322f673d48c84c728e53ad7">
						<apiName>ESupportedVersions</apiName>
						<cxxEnumeratorScopedName>TThreadCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>ESupportedVersions</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TThreadCreateInfo::ESupportedVersions</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3708"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc/>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="3706"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="3705"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="3709"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc>
				<p>Currently supported version numbers  </p>
			</apiDesc>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxEnumeration id="struct_t_thread_create_info_1a2ed60c9d58617a7b0fc40738ab25705d">
		<apiName>TThreadPagingAtt</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="public"/>
				<cxxEnumerationScopedName>TThreadCreateInfo</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>TThreadPagingAtt</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>TThreadCreateInfo:TThreadPagingAtt</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="struct_t_thread_create_info_1a2ed60c9d58617a7b0fc40738ab25705da95479421a00dead4dcbe425e5441c688">
						<apiName>EUnspecified</apiName>
						<cxxEnumeratorScopedName>TThreadCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EUnspecified</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TThreadCreateInfo::EUnspecified</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3717"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>The thread will use the creating process&apos;s paging attributes. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="struct_t_thread_create_info_1a2ed60c9d58617a7b0fc40738ab25705daa35f88638bb290be2321e3ab913e77f5">
						<apiName>EPaged</apiName>
						<cxxEnumeratorScopedName>TThreadCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EPaged</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TThreadCreateInfo::EPaged</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3718"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>The thread will data page its stack and heap. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="struct_t_thread_create_info_1a2ed60c9d58617a7b0fc40738ab25705daf6fca6c6786a9ea53af76ea1acbd67ca">
						<apiName>EUnpaged</apiName>
						<cxxEnumeratorScopedName>TThreadCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EUnpaged</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TThreadCreateInfo::EUnpaged</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3719"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>The thread will not data page its stack and heap. </p>
						</apiDesc>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="3716"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="3715"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="3720"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc>
				<p>Attributes that specify whether the stack and heap of the thread to be created are data paged or not. </p>
			</apiDesc>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxFunction id="struct_t_thread_create_info_1a522ea12175ba17e5f39d86c55a5ebd7f">
		<apiName>TThreadCreateInfo</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TThreadCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TThreadCreateInfo(const TDesC &amp;aName, TThreadFunction aFunction, TInt aStackSize, TAny *aPtr)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TThreadCreateInfo::TThreadCreateInfo(const TDesC &amp;,TThreadFunction,TInt,TAny *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32const_8h.xml#_1a34e219fb991035be3dc5356bf197ba1e">TThreadFunction</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFunction</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStackSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPtr</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3725"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_thread_create_info_1a306087d62dfee5da7495d7f569233c26">
		<apiName>SetCreateHeap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TThreadCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetCreateHeap(TInt aHeapMinSize, TInt aHeapMaxSize)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TThreadCreateInfo::SetCreateHeap(TInt,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aHeapMinSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aHeapMaxSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3726"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_thread_create_info_1a86a236dae36c9d0ab6f0b2471feee4e4">
		<apiName>SetUseHeap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TThreadCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetUseHeap(const RAllocator *aHeap)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TThreadCreateInfo::SetUseHeap(const RAllocator *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_r_allocator.xml#class_r_allocator">RAllocator</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aHeap</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3727"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_thread_create_info_1a19275802c36b0b9cc205c5b0ed619ebb">
		<apiName>SetOwner</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TThreadCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetOwner(const TOwnerType aOwner)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TThreadCreateInfo::SetOwner(const TOwnerType)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a68a23fa0195efd67397df339a83a5a86">TOwnerType</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOwner</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3728"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_thread_create_info_1afb3765d842601dbe25658ff8cc98453b">
		<apiName>SetPaging</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TThreadCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetPaging(const TThreadPagingAtt aPaging)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TThreadCreateInfo::SetPaging(const TThreadPagingAtt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_t_thread_create_info.xml#_1a2ed60c9d58617a7b0fc40738ab25705d">TThreadPagingAtt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPaging</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3729"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="struct_t_thread_create_info_1a5520a8687862030196f5925ba58f4bb9">
		<apiName>iVersionNumber</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iVersionNumber</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iVersionNumber</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3735"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The version number of this <xref href="struct_t_chunk_create_info.xml#struct_t_chunk_create_info">TChunkCreateInfo</xref>.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_thread_create_info_1a0178b606cf075563fe39fc26ea6d6515">
		<apiName>iName</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> *</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>const TDesC * iName</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iName</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3739"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The Name to be given to the thread to be created  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_thread_create_info_1a352bf7e333949003e5aa5a6c3bf97039">
		<apiName>iFunction</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32const_8h.xml#_1a34e219fb991035be3dc5356bf197ba1e">TThreadFunction</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TThreadFunction iFunction</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iFunction</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3743"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The function this thread will execute.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_thread_create_info_1a61675a7022148333eec7394f61319db3">
		<apiName>iStackSize</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iStackSize</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iStackSize</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3747"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The size of the stack of the thread to be created.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_thread_create_info_1afa3e65fa321d250778bbc73e43518eef">
		<apiName>iParameter</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TAny * iParameter</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iParameter</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3751"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The parameter to be passed to the function of the thread to be created.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_thread_create_info_1acac471fac722e50aed71a9ec3028ea60">
		<apiName>iOwner</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a68a23fa0195efd67397df339a83a5a86">TOwnerType</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TOwnerType iOwner</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iOwner</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3755"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The owner of the thread to be created.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_thread_create_info_1ac74a75be7725b8f21d3e6e44731bd5f7">
		<apiName>iHeap</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_r_allocator.xml#class_r_allocator">RAllocator</apiRelation> *</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>RAllocator * iHeap</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iHeap</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3760"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The heap for the thread to be created to use. NULL if a new heap is to be created.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_thread_create_info_1a6373062088b75790f990b1cacbffc4f7">
		<apiName>iHeapMinSize</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iHeapMinSize</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iHeapMinSize</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3763"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>Minimum size of any heap to be created for the thread.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_thread_create_info_1a87580b3ea9360fac149e737c1b8fe919">
		<apiName>iHeapMaxSize</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iHeapMaxSize</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iHeapMaxSize</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3767"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>Maximum size of any heap to be created for the thread.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_thread_create_info_1a5f6d14b82121ea2dfdba6ab1a0a6a283">
		<apiName>iAttributes</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iAttributes</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iAttributes</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3771"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The attributes of the thread  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_thread_create_info_1acf6f8cbdcfe7b804ae7adb6a355e157e">
		<apiName>iSpare</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a8240e11f17c80b6b222fc2af50234da4">TUint32</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TThreadCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint32 iSpare[6]</cxxVariablePrototype>
				<cxxVariableNameLookup>TThreadCreateInfo::iSpare</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3773"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
</cxxStruct>