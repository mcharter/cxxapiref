<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_c_parameter_bundle_base">
	<apiName>CParameterBundleBase</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassDerivations>
				<cxxClassDerivation>
					<cxxClassDerivationAccessSpecifier value="public"/>
					<cxxClassBaseClass href="class_c_base.xml#class_c_base">CBase</cxxClassBaseClass>
				</cxxClassDerivation>
			</cxxClassDerivations>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="179"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="171"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="242"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Bundle of (i.e. container for) parameter set containers.</p>
			<p>The basic object shape and base type container manipulators. To be used only by CParameterBundle&lt;PARAMETERSETCONTAINERTYPE,SUBCLASS&gt;</p>
			<p>May contain and 0..N parameter families. </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_c_parameter_bundle_base_1a74e6e56779ab69a82dc5ca5473abd701">
		<apiName>NewL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_c_parameter_bundle_base.xml#class_c_parameter_bundle_base">CParameterBundleBase</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline static CParameterBundleBase * NewL()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::NewL()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="182"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_subconn.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="181"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="184"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1a3064d0667bf8b927f1c94ecd724539d6">
		<apiName>~CParameterBundleBase</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDestructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C ~CParameterBundleBase()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::~CParameterBundleBase()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="186"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="353"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="356"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1a20599a79a1c67946ea74e5a75cbd9232">
		<apiName>Length</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TUint Length() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::Length()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="188"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="363"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="372"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Calculates the length of buffer required to serialise this parameter set bundle. Length of buffer required. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1a43b586d974db0f1a582156475508ff6e">
		<apiName>Store</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt Store(TDes8 &amp;aDes) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::Store(TDes8 &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_des8.xml#class_t_des8">TDes8</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aDes</cxxFunctionParameterDeclarationName>
						<apiDefNote>Buffer to append the serialised object to </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="190"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="383"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="397"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Instructs this sub-connection parameter bundle to create a serilised version of itself and append it to the buffer that has been passed.</p>
				<p>KErrNone if successful, otherwise system wide error (e.g. EKrrOverflow if the descriptor is too small) If unsuccessful, there is no guarantee as to the buffer or data stored in it. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1af4a45162c1fe8c66f58f14912a3bfa6a">
		<apiName>AddParamSetContainerL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void AddParamSetContainerL(CParameterSetContainer &amp;aContainer)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::AddParamSetContainerL(CParameterSetContainer &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aContainer</cxxFunctionParameterDeclarationName>
						<apiDefNote>Container to be added (bundle takes ownership) </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="194"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="405"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="408"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Add a parameter set container to the bundle. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1a841606198e71883a0835d9e1bf558503">
		<apiName>AddParamSetContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt AddParamSetContainer(CParameterSetContainer &amp;aContainer)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::AddParamSetContainer(CParameterSetContainer &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aContainer</cxxFunctionParameterDeclarationName>
						<apiDefNote>Container to be added (bundle takes ownership) </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="195"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="415"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="418"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Add a parameter set container to the bundle. Returns with KErrNoMemory in out of memory conditions </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1a63696b0021623732503819b0fb36ed05">
		<apiName>RemoveParamSetContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C CParameterSetContainer * RemoveParamSetContainer(TInt aIndex)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::RemoveParamSetContainer(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote>index of the container to remove </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="197"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="425"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="430"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Remove a parameter set container from the bundle, returning ownership to the calling method The removed parameter set container </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1a4b9fe0f2c98b1525504d7f13c4aca587">
		<apiName>CountParamSetContainers</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TInt CountParamSetContainers() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::CountParamSetContainers()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="200"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_subconn.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="199"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="202"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1ac5661f437fd16f9dea3859653e8d5f5c">
		<apiName>GetParamSetContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C CParameterSetContainer * GetParamSetContainer(TInt aIndex)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::GetParamSetContainer(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote>index of the container to get </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="204"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="438"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="446"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Pick out the parameter set container at the given index in the bundle. Matching container or NULL pointer if index out of range </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1a89863891886db7e9855a773130955530">
		<apiName>GetParamSetContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>const <apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline const CParameterSetContainer * GetParamSetContainer(TInt aIndex) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::GetParamSetContainer(TInt)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="207"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_subconn.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="206"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="209"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1ae16548e68dc4fdb4c64159cfdb286351">
		<apiName>FindParamSetContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C CParameterSetContainer * FindParamSetContainer(TUint32 aContainerId)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::FindParamSetContainer(TUint32)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a8240e11f17c80b6b222fc2af50234da4">TUint32</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aContainerId</cxxFunctionParameterDeclarationName>
						<apiDefNote>Id of the container to match against </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="211"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="454"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="465"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Search the parameter bundle for a parameter set container Matching container or NULL pointer if not found </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1aa725414ac12dded87f3ee019516ca675">
		<apiName>FindParamSetContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>const <apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline const CParameterSetContainer * FindParamSetContainer(TUint32 aContainerId) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::FindParamSetContainer(TUint32)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a8240e11f17c80b6b222fc2af50234da4">TUint32</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aContainerId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="213"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_subconn.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="212"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="216"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1ae04b2e5ad5e45df96493ea5f2acf86be">
		<apiName>FindParameterSet</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_x_parameter_set_base.xml#class_x_parameter_set_base">XParameterSetBase</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C XParameterSetBase * FindParameterSet(const Meta::STypeId &amp;aTypeId)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::FindParameterSet(const Meta::STypeId &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_meta_1_1_s_type_id.xml#struct_meta_1_1_s_type_id">Meta::STypeId</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aTypeId</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefinitionName>aType</cxxFunctionParameterDefinitionName>
						<apiDefNote>Id of the set type to match against </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="219"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="473"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="485"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Deep search the parameter bundle for a parameter set of given type Matching set or NULL pointer if not found </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1abe91e7a717ce450ba2b37cca051f1457">
		<apiName>FindParameterSet</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>const <apiRelation href="class_x_parameter_set_base.xml#class_x_parameter_set_base">XParameterSetBase</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline const XParameterSetBase * FindParameterSet(const Meta::STypeId &amp;aTypeId) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::FindParameterSet(const Meta::STypeId &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_meta_1_1_s_type_id.xml#struct_meta_1_1_s_type_id">Meta::STypeId</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aTypeId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="221"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_subconn.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="220"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="224"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1a06ae2e249b24c25fa22796562f160d3f">
		<apiName>ReplaceParamSetContainerL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void ReplaceParamSetContainerL(CParameterSetContainer *aOld, CParameterSetContainer *aNew)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::ReplaceParamSetContainerL(CParameterSetContainer *,CParameterSetContainer *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOld</cxxFunctionParameterDeclarationName>
						<apiDefNote>A parameter set container that exists in the parameter bundle </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aNew</cxxFunctionParameterDeclarationName>
						<apiDefNote>The parameter set container that will take the place of the old one </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="228"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="495"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="498"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Replaces a given parameter set container with another. The old parameter set container is deleted, and the parameter bundle takes ownership of the new one </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1a2a6ae4ccf39ce4c6868f9019ed22b630">
		<apiName>ReplaceParamSetContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt ReplaceParamSetContainer(CParameterSetContainer *aOld, CParameterSetContainer *aNew)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::ReplaceParamSetContainer(CParameterSetContainer *,CParameterSetContainer *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOld</cxxFunctionParameterDeclarationName>
						<apiDefNote>A parameter set container that exists in the parameter bundle </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aNew</cxxFunctionParameterDeclarationName>
						<apiDefNote>The parameter set container that will take the place of the old one </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="229"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_parameterbundle.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="507"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="527"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Replaces a given parameter set container with another. The old parameter set container is deleted, and the parameter bundle takes ownership of the new one KErrNotFound if the parameter set container was not found in the bundle, otherwise KErrNone. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1af10a4e8f1aee714adf59e9b85872cbce">
		<apiName>CParameterBundleBase</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionInline/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline CParameterBundleBase()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::CParameterBundleBase()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="233"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_subconn.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="232"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="234"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1a053df1b73120b75767ded7e3f9220953">
		<apiName>CParameterBundleBase</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>CParameterBundleBase(const CParameterBundleBase &amp;aBundle)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::CParameterBundleBase(const CParameterBundleBase &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_c_parameter_bundle_base.xml#class_c_parameter_bundle_base">CParameterBundleBase</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aBundle</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="237"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_parameter_bundle_base_1aa64cff9147c32a388ac9e55d0cb4bb67">
		<apiName>operator=</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_c_parameter_bundle_base.xml#class_c_parameter_bundle_base">CParameterBundleBase</apiRelation> &amp;</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CParameterBundleBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>CParameterBundleBase &amp; operator=(const CParameterBundleBase &amp;aBundle)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CParameterBundleBase::operator=(const CParameterBundleBase &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_c_parameter_bundle_base.xml#class_c_parameter_bundle_base">CParameterBundleBase</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aBundle</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="238"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_c_parameter_bundle_base_1a39fd18854bdce13a4cfeccd0671c19a4">
		<apiName>iSetContainers</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_r_pointer_array.xml#class_r_pointer_array">RPointerArray</apiRelation>&lt; <apiRelation href="class_c_parameter_set_container.xml#class_c_parameter_set_container">CParameterSetContainer</apiRelation> &gt;</cxxVariableDeclaredType>
				<cxxVariableScopedName>CParameterBundleBase</cxxVariableScopedName>
				<cxxVariablePrototype>RPointerArray&lt; CParameterSetContainer &gt; iSetContainers</cxxVariablePrototype>
				<cxxVariableNameLookup>CParameterBundleBase::iSetContainers</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/es_parameterbundle.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="241"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxClassInherits>
		<cxxClassInheritsDetail>
			<cxxClassFunctionInherited href="class_c_parameter_bundle_base.xml#class_c_base_1a240de7932690a4e987d75690b0b6f82b">CBase::CBase()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_parameter_bundle_base.xml#class_c_base_1ac0a06aeab68b3e01be81f9dd79e011c6">CBase::Delete(CBase *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_parameter_bundle_base.xml#class_c_base_1aae681a54d9c9b10c7d42e7e32ff109d5">CBase::Extension_(TUint,TAny *&amp;,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_parameter_bundle_base.xml#class_c_base_1af4c4965092a763b0856ccbfa3cf99eaf">CBase::operator new(TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_parameter_bundle_base.xml#class_c_base_1ab9e5f557dea4db22886189926687ddc1">CBase::operator new(TUint,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_parameter_bundle_base.xml#class_c_base_1aa464dd21494443ac109084ed03b81f28">CBase::operator new(TUint,TLeave)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_parameter_bundle_base.xml#class_c_base_1af8429815362d4df6fecd47179e0c5dfe">CBase::operator new(TUint,TLeave,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_parameter_bundle_base.xml#class_c_base_1a80505bdf8b1b20a2ed102307a78eeeeb">CBase::operator new(TUint,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_parameter_bundle_base.xml#class_c_base_1a1390361b94424be22bb2b1020eb400ea">CBase::~CBase()</cxxClassFunctionInherited>
		</cxxClassInheritsDetail>
	</cxxClassInherits>
</cxxClass>