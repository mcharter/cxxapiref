<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_e_sock_1_1_r_meta_extension_container">
	<apiName>ESock::RMetaExtensionContainer</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassDerivations>
				<cxxClassDerivation>
					<cxxClassDerivationAccessSpecifier value="public"/>
					<cxxClassBaseClass href="class_e_sock_1_1_r_meta_extension_container_c.xml#class_e_sock_1_1_r_meta_extension_container_c">ESock::RMetaExtensionContainerC</cxxClassBaseClass>
				</cxxClassDerivation>
			</cxxClassDerivations>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="133"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="132"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="233"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Represents an appendable meta extension container.   </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1a442f76e037e096fee7099a7d599a31c9">
		<apiName>RMetaExtensionContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C RMetaExtensionContainer()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::RMetaExtensionContainer()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="142"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Default c&apos;tor </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1a33d128674a38594089b9810d24648098">
		<apiName>Open</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Open()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::Open()</cxxFunctionNameLookup>
				<cxxFunctionReimplemented href="class_e_sock_1_1_r_meta_extension_container_c.xml#class_e_sock_1_1_r_meta_extension_container_c_1a2c09079c06452c924a9cacea96ecc1d1">ESock::RMetaExtensionContainerC::Open()</cxxFunctionReimplemented>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="148"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>If the container is already open a reference is added to the container. If the container is not open a new appendable root meta extension container will be created and a reference added. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1aab89cddde2ee9d3e57aef9a78b2b0961">
		<apiName>Open</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Open(const RMetaExtensionContainerC &amp;aBaseContainer)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::Open(const RMetaExtensionContainerC &amp;)</cxxFunctionNameLookup>
				<cxxFunctionReimplemented href="class_e_sock_1_1_r_meta_extension_container_c.xml#class_e_sock_1_1_r_meta_extension_container_c_1a84414441e1d001dc185616e060f0d1ee">ESock::RMetaExtensionContainerC::Open(const RMetaExtensionContainerC &amp;)</cxxFunctionReimplemented>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_e_sock_1_1_r_meta_extension_container_c.xml#class_e_sock_1_1_r_meta_extension_container_c">RMetaExtensionContainerC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aBaseContainer</cxxFunctionParameterDeclarationName>
						<apiDefNote>Container to use as the base meta extension container. A reference will be automatically added to this. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="155"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>A new appendable meta extension container will be created using the supplied container as the base container to build on. The container must not already be open. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1a21929cd9f49c5e531beedeaa2b072735">
		<apiName>Close</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Close()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::Close()</cxxFunctionNameLookup>
				<cxxFunctionReimplemented href="class_e_sock_1_1_r_meta_extension_container_c.xml#class_e_sock_1_1_r_meta_extension_container_c_1af522a8f2c3ed2ccaa7161f433a09401f">ESock::RMetaExtensionContainerC::Close()</cxxFunctionReimplemented>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="160"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Releases a reference to the underlying container implementation </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1a5d044bc556b21070725812b5b9f44dc1">
		<apiName>FindExtension</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C const <apiRelation href="struct_meta_1_1_s_meta_data.xml#struct_meta_1_1_s_meta_data">Meta::SMetaData</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C const Meta::SMetaData * FindExtension(const Meta::STypeId &amp;aTypeId) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::FindExtension(const Meta::STypeId &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionReimplemented href="class_e_sock_1_1_r_meta_extension_container_c.xml#class_e_sock_1_1_r_meta_extension_container_c_1a38cb30754c807ebdd87b54763acf8aa2">ESock::RMetaExtensionContainerC::FindExtension(const Meta::STypeId &amp;)const</cxxFunctionReimplemented>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_meta_1_1_s_type_id.xml#struct_meta_1_1_s_type_id">Meta::STypeId</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aTypeId</cxxFunctionParameterDeclarationName>
						<apiDefNote>The STypeId of the meta extension to find </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="167"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Finds the extension specified within the container A pointer to the meta extension or NULL if it wasn&apos;t found </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1a998f40d8d53ece3c85101bf0467fabbe">
		<apiName>FindExtensionL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C const <apiRelation href="struct_meta_1_1_s_meta_data.xml#struct_meta_1_1_s_meta_data">Meta::SMetaData</apiRelation> &amp;</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C const Meta::SMetaData &amp; FindExtensionL(const Meta::STypeId &amp;aTypeId) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::FindExtensionL(const Meta::STypeId &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionReimplemented href="class_e_sock_1_1_r_meta_extension_container_c.xml#class_e_sock_1_1_r_meta_extension_container_c_1a0ce8a7859cc40943f01e499b2bdba92b">ESock::RMetaExtensionContainerC::FindExtensionL(const Meta::STypeId &amp;)const</cxxFunctionReimplemented>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_meta_1_1_s_type_id.xml#struct_meta_1_1_s_type_id">Meta::STypeId</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aTypeId</cxxFunctionParameterDeclarationName>
						<apiDefNote>The STypeId of the meta extension to find </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="175"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Finds the extension specified within the container A reference to the meta extension </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1a41484633d2b339cfa8bbc8c87360857c">
		<apiName>AppendExtension</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt AppendExtension(const Meta::SMetaData *aExtension)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::AppendExtension(const Meta::SMetaData *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_meta_1_1_s_meta_data.xml#struct_meta_1_1_s_meta_data">Meta::SMetaData</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aExtension</cxxFunctionParameterDeclarationName>
						<apiDefNote>The meta extension to add </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="184"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Adds a meta extension to the container, which will take ownership on success. KErrAlreadyExists If a meta extension of the same type is in the container KErrNone If the meta extension was added successfully Other system-wide error codes </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1a31579efe8e1e2de4aa8b93b5fe52a714">
		<apiName>AppendExtensionL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void AppendExtensionL(const Meta::SMetaData *aExtension)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::AppendExtensionL(const Meta::SMetaData *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_meta_1_1_s_meta_data.xml#struct_meta_1_1_s_meta_data">Meta::SMetaData</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aExtension</cxxFunctionParameterDeclarationName>
						<apiDefNote>The meta extension to add </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="192"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Adds a meta extension to the container, which will take ownership on success. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1ac23231332625c6b6b3bff998a49f8653">
		<apiName>AppendContainerL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void AppendContainerL(const RMetaExtensionContainerC &amp;aBaseContainer)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::AppendContainerL(const RMetaExtensionContainerC &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_e_sock_1_1_r_meta_extension_container_c.xml#class_e_sock_1_1_r_meta_extension_container_c">RMetaExtensionContainerC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aBaseContainer</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="202"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Appends a container to the list of container implementations.  Appends an existing container. Extensions in aBaseContainer container will override any extensions of the same type already present in the container this method is called on. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1a1c8a8d303e16443b271463099bb8f361">
		<apiName>AppendableExtensionContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>CMetaExtensionContainer *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>CMetaExtensionContainer * AppendableExtensionContainer() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::AppendableExtensionContainer()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="209"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Returns an implementation of an appendable extension container instance or NULL if one isn&apos;t available at present </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1acd619839a59b4bbaa03767fea52ccf43">
		<apiName>AppendableContainerArray</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>CMetaExtensionContainerArray *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>CMetaExtensionContainerArray * AppendableContainerArray() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::AppendableContainerArray()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="215"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Returns an implementation of an appendable container array instance or NULL if one isn&apos;t available at present </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1acf87b5cc3c299ea872a43c38c58f9205">
		<apiName>CreateExtensionContainerL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>void CreateExtensionContainerL()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::CreateExtensionContainerL()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="221"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Creates a new container implementations </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_1a4556114bf4b810bf51a44f20b08143a7">
		<apiName>CreateContainerArrayL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>void CreateContainerArrayL()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainer::CreateContainerArrayL()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="227"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Creates a new container implementations </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_e_sock_1_1_r_meta_extension_container_1a7aac16597ef1476136ecd9b168c99ab8">
		<apiName>iIsLazyCreationDone</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>ESock::RMetaExtensionContainer</cxxVariableScopedName>
				<cxxVariablePrototype>TBool iIsLazyCreationDone</cxxVariablePrototype>
				<cxxVariableNameLookup>ESock::RMetaExtensionContainer::iIsLazyCreationDone</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="230"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_e_sock_1_1_r_meta_extension_container_1ae0f9469a4236888333383a19a81593f3">
		<apiName>iIsOpen</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>ESock::RMetaExtensionContainer</cxxVariableScopedName>
				<cxxVariablePrototype>TBool iIsOpen</cxxVariablePrototype>
				<cxxVariableNameLookup>ESock::RMetaExtensionContainer::iIsOpen</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="231"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_e_sock_1_1_r_meta_extension_container_1a0341dcf0f72ac97c3915345a0f2b3257">
		<apiName>iCurrentExtensionContainer</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableStorageClassSpecifierMutable/>
				<cxxVariableDeclaredType>CMetaExtensionContainer *</cxxVariableDeclaredType>
				<cxxVariableScopedName>ESock::RMetaExtensionContainer</cxxVariableScopedName>
				<cxxVariablePrototype>CMetaExtensionContainer * iCurrentExtensionContainer</cxxVariablePrototype>
				<cxxVariableNameLookup>ESock::RMetaExtensionContainer::iCurrentExtensionContainer</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="232"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxClassInherits>
		<cxxClassInheritsDetail>
			<cxxClassFunctionInherited href="class_e_sock_1_1_r_meta_extension_container.xml#class_e_sock_1_1_r_meta_extension_container_c_1a3f069da8431e278ecc3770de357be01f">ESock::RMetaExtensionContainerC::Container()const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_e_sock_1_1_r_meta_extension_container.xml#class_e_sock_1_1_r_meta_extension_container_c_1ae853b2c4414a0288034fdf0181d091e0">ESock::RMetaExtensionContainerC::RMetaExtensionContainerC()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_e_sock_1_1_r_meta_extension_container.xml#class_e_sock_1_1_r_meta_extension_container_c_1a5adb5a6ed9295d9fed17fcfd3bd0a521">ESock::RMetaExtensionContainerC::SetContainer(CMetaExtensionContainerImplBase *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_e_sock_1_1_r_meta_extension_container.xml#class_e_sock_1_1_r_meta_extension_container_c_1ab27ffad4550a56c4f6725042eb25e800">ESock::RMetaExtensionContainerC::~RMetaExtensionContainerC()</cxxClassFunctionInherited>
		</cxxClassInheritsDetail>
	</cxxClassInherits>
</cxxClass>