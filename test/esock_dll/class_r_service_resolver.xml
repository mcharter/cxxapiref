<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_r_service_resolver">
	<apiName>RServiceResolver</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassDerivations>
				<cxxClassDerivation>
					<cxxClassDerivationAccessSpecifier value="public"/>
					<cxxClassBaseClass href="class_r_sub_session_base.xml#class_r_sub_session_base">RSubSessionBase</cxxClassBaseClass>
				</cxxClassDerivation>
			</cxxClassDerivations>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="932"/>
				<cxxClassDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="928"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="946"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Provides an interface to resolver service names and ports.   </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_r_service_resolver_1a664949cc9917f1c2a38651fc980508d1">
		<apiName>Open</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt Open(RSocketServ &amp;aSocketServer, TUint anAddrFamily, TUint sockType, TUint aProtocol)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::Open(RSocketServ &amp;,TUint,TUint,TUint)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_r_socket_serv.xml#class_r_socket_serv">RSocketServ</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSocketServer</cxxFunctionParameterDeclarationName>
						<apiDefNote>The socket server session. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>anAddrFamily</cxxFunctionParameterDeclarationName>
						<apiDefNote>A constant identifying the protocol family. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>sockType</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefinitionName>aSocketType</cxxFunctionParameterDefinitionName>
						<apiDefNote>A constant that identifies the socket type. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aProtocol</cxxFunctionParameterDeclarationName>
						<apiDefNote>A constant that identifies the protocol that provides the service. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="934"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="339"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="355"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>set up the sub session - unlike name resolvers and net databases, services can be socket type specific. Opens a service resolver service.</p>
				<p>Unlike name resolvers (<xref href="class_r_host_resolver.xml#class_r_host_resolver">RHostResolver</xref>) and net databases (<xref href="class_r_net_database.xml#class_r_net_database">RNetDatabase</xref>), services can be socket type specific.</p>
				<p>KErrNone if successful otherwise another of the system-wide error codes. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_service_resolver_1acdca5600102d7853be5a6a1503056c46">
		<apiName>GetByName</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void GetByName(const TDesC &amp;aName, TPortNum &amp;aPort, TRequestStatus &amp;aStatus)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::GetByName(const TDesC &amp;,TPortNum &amp;,TRequestStatus &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote>Name of the service to get. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_pckg_buf.xml#class_t_pckg_buf">TPortNum</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPort</cxxFunctionParameterDeclarationName>
						<apiDefNote>On completion, the port associated with the service. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_request_status.xml#class_t_request_status">TRequestStatus</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStatus</cxxFunctionParameterDeclarationName>
						<apiDefNote>On completion, KErrNone if successful otherwise another of the system-wide error codes. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="935"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="357"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="366"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets a service by name asynchronously.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_service_resolver_1a9def394d0c7425078d4e1045ed190b10">
		<apiName>GetByName</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt GetByName(const TDesC &amp;aName, TPortNum &amp;aPort)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::GetByName(const TDesC &amp;,TPortNum &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote>Name of the service to get. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_pckg_buf.xml#class_t_pckg_buf">TPortNum</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPort</cxxFunctionParameterDeclarationName>
						<apiDefNote>On return, the port associated with the service. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="936"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="368"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="381"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Get a service by name.</p>
				<p>KErrNone if successful otherwise another of the system-wide error codes. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_service_resolver_1ae45db56c4dd424cfff4008dd0b6957e6">
		<apiName>GetByNumber</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void GetByNumber(const TUint aPort, TDes &amp;aName, TRequestStatus &amp;aStatus)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::GetByNumber(const TUint,TDes &amp;,TRequestStatus &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPort</cxxFunctionParameterDeclarationName>
						<apiDefNote>Port of the service. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_des16.xml#class_t_des16">TDes</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote>On completion, the name of the service. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_request_status.xml#class_t_request_status">TRequestStatus</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStatus</cxxFunctionParameterDeclarationName>
						<apiDefNote>On completion, KErrNone if successful otherwise another of the system-wide error codes. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="937"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="383"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="392"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the name of the service asynchronously.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_service_resolver_1a45f935e79c5b51900d401048e18cfa83">
		<apiName>GetByNumber</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt GetByNumber(const TUint aPort, TDes &amp;aName)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::GetByNumber(const TUint,TDes &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPort</cxxFunctionParameterDeclarationName>
						<apiDefNote>Port of the service. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_des16.xml#class_t_des16">TDes</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote>On return, the name of the service. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="938"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="394"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="406"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the name of the service</p>
				<p>KErrNone if successful otherwise another of the system-wide error codes. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_service_resolver_1aa78999b37b1997e29604b666866472e8">
		<apiName>RegisterService</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void RegisterService(const TDesC &amp;aName, const TUint &amp;aPort, TRequestStatus &amp;aStatus)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::RegisterService(const TDesC &amp;,const TUint &amp;,TRequestStatus &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote>Name of the service. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPort</cxxFunctionParameterDeclarationName>
						<apiDefNote>Port of the service. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_request_status.xml#class_t_request_status">TRequestStatus</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStatus</cxxFunctionParameterDeclarationName>
						<apiDefNote>On completion, KErrNone if successful otherwise another of the system-wide error codes. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="939"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="408"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="418"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Registers a new service asynchronously.</p>
				<p>
					<b>capability</b>
				</p>
				<p>NetworkControl To protect against dangerous new services being added, which may steal legimate services resources </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_service_resolver_1a92972c37820c648244f0ace26e0bd816">
		<apiName>RegisterService</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt RegisterService(const TDesC &amp;aName, const TUint &amp;aPort)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::RegisterService(const TDesC &amp;,const TUint &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote>Name of the service. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPort</cxxFunctionParameterDeclarationName>
						<apiDefNote>Port of the service. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="940"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="420"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="433"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Registers a new service.</p>
				<p>KErrNone if successful, otherwise another of the system-wide error codes. </p>
				<p>
					<b>capability</b>
				</p>
				<p>NetworkControl To protect against dangerous new services being added, which may steal legimate services resources </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_service_resolver_1af050c088037c4eba1f4474cc2f404006">
		<apiName>RemoveService</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void RemoveService(const TDesC &amp;aName, const TUint &amp;aPort, TRequestStatus &amp;aStatus)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::RemoveService(const TDesC &amp;,const TUint &amp;,TRequestStatus &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote>Name of the service to remove. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPort</cxxFunctionParameterDeclarationName>
						<apiDefNote>Port of the service to remove. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_request_status.xml#class_t_request_status">TRequestStatus</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStatus</cxxFunctionParameterDeclarationName>
						<apiDefNote>On completion, KErrNone if successful otherwise another of the system-wide error codes. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="941"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="435"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="445"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Removes a service asynchronously.</p>
				<p>
					<b>capability</b>
				</p>
				<p>NetworkControl Ensure that only privileged apps can remove information from the service resolver </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_service_resolver_1a3753fa48ab8f9f86d9548199e16b2664">
		<apiName>RemoveService</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt RemoveService(const TDesC &amp;aName, const TUint &amp;aPort)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::RemoveService(const TDesC &amp;,const TUint &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote>Name of the service. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPort</cxxFunctionParameterDeclarationName>
						<apiDefNote>Port of the service. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="942"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="448"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="461"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Removes a service.</p>
				<p>KErrNone if successful otherwise another of the system-wide error codes. </p>
				<p>
					<b>capability</b>
				</p>
				<p>NetworkControl Ensure that only privileged apps can remove information from the service resolver </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_service_resolver_1a5b19154c8fd0bf49e89b168813065a56">
		<apiName>Close</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Close()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::Close()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="943"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="469"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="479"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Closes a service resolver service</p>
				<p>If a service has been opened using <xref href="class_r_service_resolver.xml#class_r_service_resolver_1a664949cc9917f1c2a38651fc980508d1">Open()</xref>, then it should be closed using <xref href="class_r_service_resolver.xml#class_r_service_resolver_1a5b19154c8fd0bf49e89b168813065a56">Close()</xref>. This will ensure all associated resources are released. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_r_service_resolver_1a3936cf1ff19120dac796c972bdc4cd76">
		<apiName>Cancel</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>RServiceResolver</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Cancel()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>RServiceResolver::Cancel()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="944"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_RSLV.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="463"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="467"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Cancels any pending request. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxClassInherits>
		<cxxClassInheritsDetail>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1af9a75bd9f7400c9439e2f76f8d059d00">RSubSessionBase::CloseSubSession(TInt)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1ae2da2f53114e1af7938db52291b0fecf">RSubSessionBase::CreateAutoCloseSubSession(RSessionBase &amp;,TInt,const TIpcArgs &amp;)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1a50e62f82ea5de8fd858e7a75c21c0930">RSubSessionBase::CreateSubSession(const RSessionBase &amp;,TInt)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1ac1adf58e7adde023baf0525baeb2a0ca">RSubSessionBase::CreateSubSession(const RSessionBase &amp;,TInt,const TIpcArgs &amp;)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1a6ecd5459966453b3a99ac3f99d97e1bc">RSubSessionBase::RSubSessionBase()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1ae855884063702416b6aa73c30263706b">RSubSessionBase::Send(TInt)const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1a1877065a894f19c8e75f076995e2b136">RSubSessionBase::Send(TInt,const TIpcArgs &amp;)const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1a79a9c918d3d693edae2b91069339a6e4">RSubSessionBase::SendReceive(TInt)const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1a31d1b25a10b3cf364677f050ea1b3a10">RSubSessionBase::SendReceive(TInt,TRequestStatus &amp;)const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1abfee930312ede77f6ee1a850be3e7ea5">RSubSessionBase::SendReceive(TInt,const TIpcArgs &amp;)const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1aa2f319884f3ea300a0a61c9788bb5d93">RSubSessionBase::SendReceive(TInt,const TIpcArgs &amp;,TRequestStatus &amp;)const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1a1239f2d6b3c11eed6965602c114886fd">RSubSessionBase::Session()const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_r_service_resolver.xml#class_r_sub_session_base_1aabe5abe9803cadf198a0c429e2aa5f2e">RSubSessionBase::SubSessionHandle()const</cxxClassFunctionInherited>
		</cxxClassInheritsDetail>
	</cxxClassInherits>
</cxxClass>