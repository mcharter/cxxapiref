<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_net_state_machine_1_1_a_core_for">
	<apiName>NetStateMachine::ACoreFor</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassDerivations>
				<cxxClassDerivation>
					<cxxClassDerivationAccessSpecifier value="public"/>
					<cxxClassBaseClass href="class_net_state_machine_1_1_a_core.xml#class_net_state_machine_1_1_a_core">NetStateMachine::ACore</cxxClassBaseClass>
				</cxxClassDerivation>
			</cxxClassDerivations>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/elements/sm_core.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="145"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/elements/sm_core.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="144"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="168"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc/>
	</cxxClassDetail>
	<cxxFunction id="class_net_state_machine_1_1_a_core_for_1a7e4a7daaa202f6bbcb9a7c588c12355d">
		<apiName>ACoreFor</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionInline/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>NetStateMachine::ACoreFor</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline ACoreFor()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>NetStateMachine::ACoreFor::ACoreFor()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/sm_core.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="149"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_connectionserv.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="147"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="150"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_net_state_machine_1_1_a_core_for_1aed5f32f8690b053d84909769056ead21">
		<apiName>Accept</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>NetStateMachine::ACoreFor</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline static TBool Accept(const TStateTriple &amp;aFirst, TAny *aContext, TInt aTransitionTag)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>NetStateMachine::ACoreFor::Accept(const TStateTriple &amp;,TAny *,TInt)</cxxFunctionNameLookup>
				<cxxFunctionReimplemented href="class_net_state_machine_1_1_a_core.xml#class_net_state_machine_1_1_a_core_1aa8ca912850d111f1b035339cb7b9c568">NetStateMachine::ACore::Accept(const TStateTriple &amp;,TAny *,TInt)</cxxFunctionReimplemented>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_net_state_machine_1_1_t_state_triple.xml#struct_net_state_machine_1_1_t_state_triple">TStateTriple</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFirst</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aContext</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aTransitionTag</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/sm_core.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="153"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_connectionserv.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="152"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="155"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_net_state_machine_1_1_a_core_for_1a6fa286197d7c86f3ca86146e8b14648e">
		<apiName>Start</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>NetStateMachine::ACoreFor</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void Start(TCLASS &amp;aContext, const TStateTriple &amp;aFirst)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>NetStateMachine::ACoreFor::Start(TCLASS &amp;,const TStateTriple &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>TCLASS &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aContext</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_net_state_machine_1_1_t_state_triple.xml#struct_net_state_machine_1_1_t_state_triple">TStateTriple</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFirst</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/sm_core.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="157"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_connectionserv.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="156"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="159"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_net_state_machine_1_1_a_core_for_1a356c0c4bcac6c4794f07b33babed2486">
		<apiName>Next</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>NetStateMachine::ACoreFor</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool Next(TCLASS &amp;aContext)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>NetStateMachine::ACoreFor::Next(TCLASS &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>TCLASS &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aContext</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/sm_core.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="161"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_connectionserv.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="160"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="163"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_net_state_machine_1_1_a_core_for_1a20ed1f0d9bf24e76afce5a8e276d3f2a">
		<apiName>Cancel</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>NetStateMachine::ACoreFor</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void Cancel(TCLASS &amp;aContext)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>NetStateMachine::ACoreFor::Cancel(TCLASS &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>TCLASS &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aContext</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/sm_core.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="165"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_connectionserv.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="164"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="167"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxClassInherits>
		<cxxClassInheritsDetail>
			<cxxClassFunctionInherited href="class_net_state_machine_1_1_a_core_for.xml#class_net_state_machine_1_1_a_core_1aaa554ed39dd3cd628cdab28f08872e1b">NetStateMachine::ACore::ACore()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_net_state_machine_1_1_a_core_for.xml#class_net_state_machine_1_1_a_core_1ac6cb783859ba416ac4ec8b765f04a4c9">NetStateMachine::ACore::Cancel(TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_net_state_machine_1_1_a_core_for.xml#class_net_state_machine_1_1_a_core_1a30df60692fdee5b66a3bd11cc605e00d">NetStateMachine::ACore::Do(const TStateTriple &amp;,TAny *,TDes8 &amp;)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_net_state_machine_1_1_a_core_for.xml#class_net_state_machine_1_1_a_core_1ac333d97640148717057caef9715cfe1d">NetStateMachine::ACore::DoCurrent(TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_net_state_machine_1_1_a_core_for.xml#class_net_state_machine_1_1_a_core_1a3e15d6c3c65f5daf0c3fc0aa8d666797">NetStateMachine::ACore::FindNext(const TStateTriple &amp;,TInt)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_net_state_machine_1_1_a_core_for.xml#class_net_state_machine_1_1_a_core_1a5ae6e08000de85a0dc5b44ce0bb67e23">NetStateMachine::ACore::IsIdle()const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_net_state_machine_1_1_a_core_for.xml#class_net_state_machine_1_1_a_core_1a8012451102357853934b414bb3cce173">NetStateMachine::ACore::Next(TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_net_state_machine_1_1_a_core_for.xml#class_net_state_machine_1_1_a_core_1ae91841dc7827965eb7c646a80a2523f6">NetStateMachine::ACore::SetIdle()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_net_state_machine_1_1_a_core_for.xml#class_net_state_machine_1_1_a_core_1a97a5a8116b04bc97b79daf3ad841e72c">NetStateMachine::ACore::Start(TAny *,const TStateTriple &amp;)</cxxClassFunctionInherited>
		</cxxClassInheritsDetail>
	</cxxClassInherits>
</cxxClass>