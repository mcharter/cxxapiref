<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_factories_1_1_c_factory_container">
	<apiName>Factories::CFactoryContainer</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassDerivations>
				<cxxClassDerivation>
					<cxxClassDerivationAccessSpecifier value="public"/>
					<cxxClassBaseClass href="class_c_base.xml#class_c_base">CBase</cxxClassBaseClass>
				</cxxClassDerivation>
			</cxxClassDerivations>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="40"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="34"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="57"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Factory Factory Container class is used to store factory objects of a specific type. It provides basic functionality to find, add and remove factories.</p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_factories_1_1_c_factory_container_1ad6661e371e324b9c50db717d34a81b39">
		<apiName>FindFactory</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_factories_1_1_c_factory_base.xml#class_factories_1_1_c_factory_base">CFactoryBase</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>Factories::CFactoryContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C CFactoryBase * FindFactory(TUid aFactoryUid) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>Factories::CFactoryContainer::FindFactory(TUid)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_uid.xml#class_t_uid">TUid</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFactoryUid</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="44"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_factories_1_1_c_factory_container_1aaa0d0c887d5acc479b19360d37aeb1fd">
		<apiName>~CFactoryContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDestructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>Factories::CFactoryContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C ~CFactoryContainer()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>Factories::CFactoryContainer::~CFactoryContainer()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="45"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_factories_1_1_c_factory_container_1af4cd120c35f99e155a5b4bf236510b23">
		<apiName>RegisterNotifierL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>Factories::CFactoryContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void RegisterNotifierL(TUid aFactoryUid, const IFactoryNotify &amp;aFactoryNotify)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>Factories::CFactoryContainer::RegisterNotifierL(TUid,const IFactoryNotify &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_uid.xml#class_t_uid">TUid</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFactoryUid</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const IFactoryNotify &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFactoryNotify</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="46"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_factories_1_1_c_factory_container_1a8c1cc25d212325b757e3fcb8baffb206">
		<apiName>FetchNodeInterfaceControlL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_net_interfaces_1_1_t_interface_control.xml#class_net_interfaces_1_1_t_interface_control">NetInterfaces::TInterfaceControl</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>Factories::CFactoryContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C NetInterfaces::TInterfaceControl * FetchNodeInterfaceControlL(TInt aInterfaceId)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>Factories::CFactoryContainer::FetchNodeInterfaceControlL(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterfaceId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="47"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_factories_1_1_c_factory_container_1ae0e55209090c61f9e21a7a37f12744e4">
		<apiName>CFactoryContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionExplicit/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>Factories::CFactoryContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C CFactoryContainer()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>Factories::CFactoryContainer::CFactoryContainer()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="50"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_factories_1_1_c_factory_container_1a1aba792386119ea5503cd1a2521f3b3a">
		<apiName>AddL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>Factories::CFactoryContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void AddL(CFactoryBase &amp;aFactory)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>Factories::CFactoryContainer::AddL(CFactoryBase &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_factories_1_1_c_factory_base.xml#class_factories_1_1_c_factory_base">CFactoryBase</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFactory</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="51"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_factories_1_1_c_factory_container_1ae7734c5c206a96a63442791a2b880789">
		<apiName>Factory</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_factories_1_1_c_factory_base.xml#class_factories_1_1_c_factory_base">CFactoryBase</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>Factories::CFactoryContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C CFactoryBase * Factory(TInt aIndex) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>Factories::CFactoryContainer::Factory(TInt)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="52"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_factories_1_1_c_factory_container_1a582e2611c465248d2b7f27a03b8acb26">
		<apiName>FindObject</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_factories_1_1_a_factory_object.xml#class_factories_1_1_a_factory_object">AFactoryObject</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>Factories::CFactoryContainer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C AFactoryObject * FindObject(MFactoryQuery &amp;aQuery) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>Factories::CFactoryContainer::FindObject(MFactoryQuery &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_factories_1_1_m_factory_query.xml#class_factories_1_1_m_factory_query">MFactoryQuery</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aQuery</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="53"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_factories_1_1_c_factory_container_1a6f7043c372e6095e1a8412ddd03ecfb8">
		<apiName>iFactories</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_r_pointer_array.xml#class_r_pointer_array">RPointerArray</apiRelation>&lt; <apiRelation href="class_factories_1_1_c_factory_base.xml#class_factories_1_1_c_factory_base">CFactoryBase</apiRelation> &gt;</cxxVariableDeclaredType>
				<cxxVariableScopedName>Factories::CFactoryContainer</cxxVariableScopedName>
				<cxxVariablePrototype>RPointerArray&lt; CFactoryBase &gt; iFactories</cxxVariablePrototype>
				<cxxVariableNameLookup>Factories::CFactoryContainer::iFactories</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/elements/factory.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="56"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxClassInherits>
		<cxxClassInheritsDetail>
			<cxxClassFunctionInherited href="class_factories_1_1_c_factory_container.xml#class_c_base_1a240de7932690a4e987d75690b0b6f82b">CBase::CBase()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_factories_1_1_c_factory_container.xml#class_c_base_1ac0a06aeab68b3e01be81f9dd79e011c6">CBase::Delete(CBase *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_factories_1_1_c_factory_container.xml#class_c_base_1aae681a54d9c9b10c7d42e7e32ff109d5">CBase::Extension_(TUint,TAny *&amp;,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_factories_1_1_c_factory_container.xml#class_c_base_1af4c4965092a763b0856ccbfa3cf99eaf">CBase::operator new(TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_factories_1_1_c_factory_container.xml#class_c_base_1ab9e5f557dea4db22886189926687ddc1">CBase::operator new(TUint,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_factories_1_1_c_factory_container.xml#class_c_base_1aa464dd21494443ac109084ed03b81f28">CBase::operator new(TUint,TLeave)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_factories_1_1_c_factory_container.xml#class_c_base_1af8429815362d4df6fecd47179e0c5dfe">CBase::operator new(TUint,TLeave,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_factories_1_1_c_factory_container.xml#class_c_base_1a80505bdf8b1b20a2ed102307a78eeeeb">CBase::operator new(TUint,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_factories_1_1_c_factory_container.xml#class_c_base_1a1390361b94424be22bb2b1020eb400ea">CBase::~CBase()</cxxClassFunctionInherited>
		</cxxClassInheritsDetail>
	</cxxClassInherits>
</cxxClass>