<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_c_delta_timer">
	<apiName>CDeltaTimer</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassDerivations>
				<cxxClassDerivation>
					<cxxClassDerivationAccessSpecifier value="public"/>
					<cxxClassBaseClass href="class_c_active.xml#class_c_active">CActive</cxxClassBaseClass>
				</cxxClassDerivation>
			</cxxClassDerivations>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="1852"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/e32base.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="1811"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="1897"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>A queue of timed events.</p>
			<p>A timed event is a callback function encapsulated by a <xref href="class_t_delta_timer_entry.xml#class_t_delta_timer_entry">TDeltaTimerEntry</xref> object, and is intended to be called when the time interval represented by the event expires.</p>
			<p>The queue itself is a <xref href="class_t_delta_que.xml#class_t_delta_que">TDeltaQue</xref> list. A timed event entry is added into a position in the queue that is determined by the time interval specified for that event. Although the time interval for a timed event is specified as an interval from the present moment, when added to the queue the implementation treats each event as having an interval from the previous timed event (or now).</p>
			<p>
				<xref href="class_c_delta_timer.xml#class_c_delta_timer">CDeltaTimer</xref> is an active object, driven by an <xref href="class_r_timer.xml#class_r_timer">RTimer</xref> which is usually set to expire upon completion of the event at the head of the queue. If the time to the next event is too great or an event at the head of the queue has been removed, the timer may be set to expire prior to the event at the head of the queue (if any).</p>
			<p>When the timer completes, the head of the queue is inspected to see whether the timed event at the head of the queue has expired. On expiry, the callback function represented by that timed event is called, and the timed event entry is removed from the queue. The queue then inspects further events for expiry, calling and removing them as necessary until either the queue is empty or there is an event in the future to wait for.</p>
			<p>Note that the tick period is the minimum time interval for an event and the granularity of all timings using the queue. Note that in general, any event may be called back some time after it has expired and that specifically the duration of all events will at least be rounded up to a muliple of the tick period.</p>
			<p>
				<xref href="class_t_delta_timer_entry.xml#class_t_delta_timer_entry">TDeltaTimerEntry</xref> </p>
			<p>
				<xref href="class_t_delta_que.xml#class_t_delta_que">TDeltaQue</xref> </p>
			<p>
				<xref href="class_r_timer.xml#class_r_timer">RTimer</xref> </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_c_delta_timer_1a540c8fa6b61e4ea3970666b8f17f0390">
		<apiName>Queue</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CDeltaTimer</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C void Queue(TTimeIntervalMicroSeconds32 aTimeInMicroSeconds, TDeltaTimerEntry &amp;aEntry)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CDeltaTimer::Queue(TTimeIntervalMicroSeconds32,TDeltaTimerEntry &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_time_interval_micro_seconds32.xml#class_t_time_interval_micro_seconds32">TTimeIntervalMicroSeconds32</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aTimeInMicroSeconds</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_delta_timer_entry.xml#class_t_delta_timer_entry">TDeltaTimerEntry</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aEntry</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1855"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_delta_timer_1aeaa1db45d3e066dd2623003a7f5db851">
		<apiName>Remove</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CDeltaTimer</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C void Remove(TDeltaTimerEntry &amp;aEntry)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CDeltaTimer::Remove(TDeltaTimerEntry &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_delta_timer_entry.xml#class_t_delta_timer_entry">TDeltaTimerEntry</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aEntry</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1856"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_delta_timer_1a26320582875e320bda8e25bbcd157778">
		<apiName>QueueLong</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CDeltaTimer</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt QueueLong(TTimeIntervalMicroSeconds aTimeInMicroSeconds, TDeltaTimerEntry &amp;aEntry)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CDeltaTimer::QueueLong(TTimeIntervalMicroSeconds,TDeltaTimerEntry &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_time_interval_micro_seconds.xml#class_t_time_interval_micro_seconds">TTimeIntervalMicroSeconds</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aTimeInMicroSeconds</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_delta_timer_entry.xml#class_t_delta_timer_entry">TDeltaTimerEntry</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aEntry</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1857"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_delta_timer_1a3effa5d4bd36b51837d9134e1bb4fbc5">
		<apiName>NewL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_c_delta_timer.xml#class_c_delta_timer">CDeltaTimer</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CDeltaTimer</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C CDeltaTimer * NewL(TInt aPriority)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CDeltaTimer::NewL(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPriority</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1860"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_delta_timer_1ad713e9f9f778ff20aa189e993835c8b2">
		<apiName>NewL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_c_delta_timer.xml#class_c_delta_timer">CDeltaTimer</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CDeltaTimer</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C CDeltaTimer * NewL(TInt aPriority, TTimeIntervalMicroSeconds32 aGranularity)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CDeltaTimer::NewL(TInt,TTimeIntervalMicroSeconds32)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPriority</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_time_interval_micro_seconds32.xml#class_t_time_interval_micro_seconds32">TTimeIntervalMicroSeconds32</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aGranularity</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1861"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_delta_timer_1adbe7604a6a9f502d1d8ebd5ff7ac7fe6">
		<apiName>~CDeltaTimer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDestructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>CDeltaTimer</cxxFunctionScopedName>
				<cxxFunctionPrototype>~CDeltaTimer()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CDeltaTimer::~CDeltaTimer()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1864"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_delta_timer_1a9fa9b085ff0e9c827631e4c216306c63">
		<apiName>CDeltaTimer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>CDeltaTimer</cxxFunctionScopedName>
				<cxxFunctionPrototype>CDeltaTimer(TInt aPriority, TInt aTickPeriod)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CDeltaTimer::CDeltaTimer(TInt,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPriority</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aTickPeriod</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1868"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_delta_timer_1a15da99c811826369a6352fb21bb474f3">
		<apiName>DoCancel</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CDeltaTimer</cxxFunctionScopedName>
				<cxxFunctionPrototype>void DoCancel()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CDeltaTimer::DoCancel()</cxxFunctionNameLookup>
				<cxxFunctionReimplemented href="class_c_active.xml#class_c_active_1abca693565d1f15ef883f32d534fba261">CActive::DoCancel()</cxxFunctionReimplemented>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1871"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Implements cancellation of an outstanding request.</p>
				<p>This function is called as part of the active object&apos;s <xref href="class_c_active.xml#class_c_active_1a97781da8872ba6e86b5b83ad7170eb90">Cancel()</xref>.</p>
				<p>It must call the appropriate cancel function offered by the active object&apos;s asynchronous service provider. The asynchronous service provider&apos;s cancel is expected to act immediately.</p>
				<p>
					<xref href="class_c_delta_timer.xml#class_c_delta_timer_1a15da99c811826369a6352fb21bb474f3">DoCancel()</xref> must not wait for event completion; this is handled by <xref href="class_c_active.xml#class_c_active_1a97781da8872ba6e86b5b83ad7170eb90">Cancel()</xref>.</p>
				<p>
					<xref href="class_c_active.xml#class_c_active_1a97781da8872ba6e86b5b83ad7170eb90">CActive::Cancel</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_delta_timer_1aace08c92601519f6315f49f2da9fb8c4">
		<apiName>RunL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CDeltaTimer</cxxFunctionScopedName>
				<cxxFunctionPrototype>void RunL()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CDeltaTimer::RunL()</cxxFunctionNameLookup>
				<cxxFunctionReimplemented href="class_c_active.xml#class_c_active_1a1562734d9d119b6ff24bc3aec793ce3d">CActive::RunL()</cxxFunctionReimplemented>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1872"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Handles an active object&apos;s request completion event.</p>
				<p>A derived class must provide an implementation to handle the completed request. If appropriate, it may issue another request.</p>
				<p>The function is called by the active scheduler when a request completion event occurs, i.e. after the active scheduler&apos;s WaitForAnyRequest() function completes.</p>
				<p>Before calling this active object&apos;s <xref href="class_c_delta_timer.xml#class_c_delta_timer_1aace08c92601519f6315f49f2da9fb8c4">RunL()</xref> function, the active scheduler has:</p>
				<p>1. decided that this is the highest priority active object with a completed request</p>
				<p>2. marked this active object&apos;s request as complete (i.e. the request is no longer outstanding)</p>
				<p>
					<xref href="class_c_delta_timer.xml#class_c_delta_timer_1aace08c92601519f6315f49f2da9fb8c4">RunL()</xref> runs under a trap harness in the active scheduler. If it leaves, then the active scheduler calls <xref href="class_c_active.xml#class_c_active_1af7a68e3e7ac05c01a9e22dd81393f834">RunError()</xref> to handle the leave.</p>
				<p>Note that once the active scheduler&apos;s Start() function has been called, all user code is run under one of the program&apos;s active object&apos;s <xref href="class_c_delta_timer.xml#class_c_delta_timer_1aace08c92601519f6315f49f2da9fb8c4">RunL()</xref> or <xref href="class_c_active.xml#class_c_active_1af7a68e3e7ac05c01a9e22dd81393f834">RunError()</xref> functions.</p>
				<p>
					<xref href="class_c_active_scheduler.xml#class_c_active_scheduler_1a71f4452eae5e178915987c6d1a428972">CActiveScheduler::Start</xref> </p>
				<p>
					<xref href="class_c_active_scheduler.xml#class_c_active_scheduler_1a6d3f55a0772c98d0cd2845a7c074b941">CActiveScheduler::Error</xref> </p>
				<p>
					<xref href="class_c_active_scheduler.xml#class_c_active_scheduler_1af43f6899a3a1a6b6cb040a4f2bbb40f9">CActiveScheduler::WaitForAnyRequest</xref> </p>
				<p>TRAPD </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_delta_timer_1a58505352fdfc5475fea06b4d5466bfd6">
		<apiName>Activate</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CDeltaTimer</cxxFunctionScopedName>
				<cxxFunctionPrototype>void Activate(TBool aRequeueTimer=EFalse)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CDeltaTimer::Activate(TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRequeueTimer</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>EFalse</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1875"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_c_delta_timer_1aafc7ed8df5b5f16f6368fbebb0e183be">
		<apiName>iTimer</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_r_timer.xml#class_r_timer">RTimer</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>CDeltaTimer</cxxVariableScopedName>
				<cxxVariablePrototype>RTimer iTimer</cxxVariablePrototype>
				<cxxVariableNameLookup>CDeltaTimer::iTimer</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="1881"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The asynchronous timer. </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_c_delta_timer_1a88c5981b8150616588a47ecb4924d8c1">
		<apiName>iQueue</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_tick_count_que.xml#class_t_tick_count_que">TTickCountQue</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>CDeltaTimer</cxxVariableScopedName>
				<cxxVariablePrototype>TTickCountQue iQueue</cxxVariablePrototype>
				<cxxVariableNameLookup>CDeltaTimer::iQueue</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="1886"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The list of timed event entries. </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_c_delta_timer_1a5d85abfcaae9b0f7c82aab6695c72356">
		<apiName>iTickPeriod</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>const <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>CDeltaTimer</cxxVariableScopedName>
				<cxxVariablePrototype>const TInt iTickPeriod</cxxVariablePrototype>
				<cxxVariableNameLookup>CDeltaTimer::iTickPeriod</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="1891"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The period of a tick count. </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_c_delta_timer_1ae2095aced2bec9723890860201aecfc6">
		<apiName>iQueueBusy</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>CDeltaTimer</cxxVariableScopedName>
				<cxxVariablePrototype>TBool iQueueBusy</cxxVariablePrototype>
				<cxxVariableNameLookup>CDeltaTimer::iQueueBusy</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="1896"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>Pseudo-lock on the the queue to avoid reentrancy problems </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxClassInherits>
		<cxxClassInheritsDetail>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1acfaa5bb1a4cda9d586f0ffaf2b0a0eb7">CActive::CActive(TInt)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1a97781da8872ba6e86b5b83ad7170eb90">CActive::Cancel()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1a44f0f5a2867d153feab11ee669d33b8d">CActive::Deque()</cxxClassFunctionInherited>
			<cxxClassEnumeratorInherited href="class_c_delta_timer.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35ac59ba0db48385ddf49262e21f2a599b3">CActive::EPriorityHigh</cxxClassEnumeratorInherited>
			<cxxClassEnumeratorInherited href="class_c_delta_timer.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35a5faa05021b83e97f1a5b00917aa34733">CActive::EPriorityIdle</cxxClassEnumeratorInherited>
			<cxxClassEnumeratorInherited href="class_c_delta_timer.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35ac074efb2a15cd04c06d354fb1fd13f27">CActive::EPriorityLow</cxxClassEnumeratorInherited>
			<cxxClassEnumeratorInherited href="class_c_delta_timer.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35ad19560103adbae4fa3eeca42c703e00b">CActive::EPriorityStandard</cxxClassEnumeratorInherited>
			<cxxClassEnumeratorInherited href="class_c_delta_timer.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35ac4fc6edcb2aea0b20ab823f1017d788a">CActive::EPriorityUserInput</cxxClassEnumeratorInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1a098237f668ebdf6e5125a2deac03323d">CActive::Extension_(TUint,TAny *&amp;,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1a6d1d16020878d00c3af277ad2b0866f5">CActive::IsActive()const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1a97d8e693eb6f85ca883dbb385650ca28">CActive::IsAdded()const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1acb9ff1d90fbcb96058e2947c3f05c8e8">CActive::Priority()const</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1af7a68e3e7ac05c01a9e22dd81393f834">CActive::RunError(TInt)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1a511d5a8dc1d43eca953eb5c69b0e022d">CActive::SetActive()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1a0d7c2ce1a5364daadef07b1020c9714f">CActive::SetPriority(TInt)</cxxClassFunctionInherited>
			<cxxClassVariableInherited href="class_c_delta_timer.xml#class_c_active_1a38314f150856c0f369555b0ef17c3140">CActive::iStatus</cxxClassVariableInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_active_1a81e8cc3a48d5d6f56c502690f9969ef8">CActive::~CActive()</cxxClassFunctionInherited>
			<cxxClassEnumerationInherited href="class_c_delta_timer.xml#class_c_active_1a378cd39842666e0a9b5f2fc089375f35">CActive:TPriority</cxxClassEnumerationInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_base_1a240de7932690a4e987d75690b0b6f82b">CBase::CBase()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_base_1ac0a06aeab68b3e01be81f9dd79e011c6">CBase::Delete(CBase *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_base_1af4c4965092a763b0856ccbfa3cf99eaf">CBase::operator new(TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_base_1ab9e5f557dea4db22886189926687ddc1">CBase::operator new(TUint,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_base_1aa464dd21494443ac109084ed03b81f28">CBase::operator new(TUint,TLeave)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_base_1af8429815362d4df6fecd47179e0c5dfe">CBase::operator new(TUint,TLeave,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_base_1a80505bdf8b1b20a2ed102307a78eeeeb">CBase::operator new(TUint,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_delta_timer.xml#class_c_base_1a1390361b94424be22bb2b1020eb400ea">CBase::~CBase()</cxxClassFunctionInherited>
		</cxxClassInheritsDetail>
	</cxxClassInherits>
</cxxClass>