<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_little_endian">
	<apiName>LittleEndian</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="1532"/>
				<cxxClassDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="1528"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="1538"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Inserts and extracts integers in little-endian format.   </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_little_endian_1afa134d012ebc809360cdba59ad17f2a2">
		<apiName>Get32</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1a8240e11f17c80b6b222fc2af50234da4">TUint32</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>LittleEndian</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C TUint32 Get32(const TUint8 *aPtr)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>LittleEndian::Get32(const TUint8 *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1aae4399ce3f10d6c2b5ec96a13bbb5881">TUint8</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPtr</cxxFunctionParameterDeclarationName>
						<apiDefNote>A pointer to a byte stream. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1534"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_NET.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="84"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="91"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets a 32-bit integer value which is in little-endian format from a byte stream.</p>
				<p>A 32-bit long integer value in native machine format. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_little_endian_1ac5751dd6c02987793519740c37c90dd7">
		<apiName>Get16</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1a7c545c7b28f2e5d128d132d2ea1cdb2b">TUint16</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>LittleEndian</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C TUint16 Get16(const TUint8 *aPtr)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>LittleEndian::Get16(const TUint8 *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="e32def_8h.xml#_1aae4399ce3f10d6c2b5ec96a13bbb5881">TUint8</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPtr</cxxFunctionParameterDeclarationName>
						<apiDefNote>A pointer to a byte stream. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1535"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_NET.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="105"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="112"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets a 16-bit value integer which is in little-endian format from a byte stream.</p>
				<p>A 16-bit long in native machine format. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_little_endian_1a1cc1d464e4c7624dbef668bd20b3753a">
		<apiName>Put32</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>LittleEndian</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C void Put32(TUint8 *aPtr, TUint32 aVal)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>LittleEndian::Put32(TUint8 *,TUint32)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1aae4399ce3f10d6c2b5ec96a13bbb5881">TUint8</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPtr</cxxFunctionParameterDeclarationName>
						<apiDefNote>A pointer to a byte stream </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a8240e11f17c80b6b222fc2af50234da4">TUint32</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aVal</cxxFunctionParameterDeclarationName>
						<apiDefNote>A 32-bit long integer value in native machine format. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1536"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_NET.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="93"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="103"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Inserts a 32-bit value into a byte stream in little-endian format.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_little_endian_1ab39440ee9cb958e15da6e91fe210e75a">
		<apiName>Put16</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>LittleEndian</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C void Put16(TUint8 *aPtr, TUint16 aVal)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>LittleEndian::Put16(TUint8 *,TUint16)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1aae4399ce3f10d6c2b5ec96a13bbb5881">TUint8</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPtr</cxxFunctionParameterDeclarationName>
						<apiDefNote>A pointer to a byte stream. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a7c545c7b28f2e5d128d132d2ea1cdb2b">TUint16</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aVal</cxxFunctionParameterDeclarationName>
						<apiDefNote>A 32-bit long integer value in native machine format. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/inc/es_sock.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="1537"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_NET.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="114"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="122"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Inserts a 16-bit value into a byte stream in little-endian format.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
</cxxClass>