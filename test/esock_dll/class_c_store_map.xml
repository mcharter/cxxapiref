<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_c_store_map">
	<apiName>CStoreMap</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassDerivations>
				<cxxClassDerivation>
					<cxxClassDerivationAccessSpecifier value="public"/>
					<cxxClassBaseClass href="class_c_base.xml#class_c_base">CBase</cxxClassBaseClass>
				</cxxClassDerivation>
			</cxxClassDerivations>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="308"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/s32std.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="307"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="338"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Store map used when externalising swizzled in-memory objects.</p>
			<p>It has three main characteristics:</p>
			<p>it acts as an in-memory repository of stream ids and associated swizzles</p>
			<p>it acts as an externaliser for swizzles</p>
			<p>it offers cleanup support </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxClassNested>
		<cxxClassNestedDetail>
			<cxxClassNestedStruct href="struct_c_store_map_1_1_t_entry.xml#struct_c_store_map_1_1_t_entry">CStoreMap::TEntry</cxxClassNestedStruct>
		</cxxClassNestedDetail>
	</cxxClassNested>
	<cxxTypedef id="class_c_store_map_1a608355e29d26649dbb65cc52cc307264">
		<apiName>TIterator</apiName>
		<cxxTypedefDetail>
			<cxxTypedefDefinition>
				<cxxTypedefAccessSpecifier value="public"/>
				<cxxTypedefDeclaredType>const <apiRelation href="struct_c_store_map_1_1_t_entry.xml#struct_c_store_map_1_1_t_entry">TEntry</apiRelation> *</cxxTypedefDeclaredType>
				<cxxTypedefScopedName>CStoreMap</cxxTypedefScopedName>
				<cxxTypedefPrototype>const TEntry * TIterator</cxxTypedefPrototype>
				<cxxTypedefNameLookup>CStoreMap::TIterator</cxxTypedefNameLookup>
				<cxxTypedefAPIItemLocation>
					<cxxTypedefDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxTypedefDeclarationFileLine name="lineNumber" value="315"/>
				</cxxTypedefAPIItemLocation>
			</cxxTypedefDefinition>
			<apiDesc/>
		</cxxTypedefDetail>
	</cxxTypedef>
	<cxxFunction id="class_c_store_map_1ab707b199594efd583e629bfbeb5bc11f">
		<apiName>NewL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_c_store_map.xml#class_c_store_map">CStoreMap</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C CStoreMap * NewL(CStreamStore &amp;aStore)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::NewL(CStreamStore &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>CStreamStore &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStore</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="317"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1a2bec8aaa698d4c83afc02b2fddbdcf2c">
		<apiName>NewLC</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_c_store_map.xml#class_c_store_map">CStoreMap</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C CStoreMap * NewLC(CStreamStore &amp;aStore)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::NewLC(CStreamStore &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>CStreamStore &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStore</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="318"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1a1bfeeebf2875652c9ca4b7d0c0938343">
		<apiName>CStoreMap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C CStoreMap(CStreamStore &amp;aStore)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::CStoreMap(CStreamStore &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>CStreamStore &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStore</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="319"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1acd435826b3852bf317c131ea67fefc87">
		<apiName>~CStoreMap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDestructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C ~CStoreMap()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::~CStoreMap()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="320"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1a622b339d0ac0fa77ac5ef6d2582c4606">
		<apiName>BindL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void BindL(TSwizzleC&lt; TAny &gt; aSwizzle, TStreamId anId)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::BindL(TSwizzleC&lt; TAny &gt;,TStreamId)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_swizzle_c.xml#class_t_swizzle_c">TSwizzleC</apiRelation>&lt; <apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> &gt;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSwizzle</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_stream_id.xml#class_t_stream_id">TStreamId</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>anId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="322"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1aba68851ad085120225a1ae8616633209">
		<apiName>Unbind</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Unbind(TSwizzleC&lt; TAny &gt; aSwizzle)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::Unbind(TSwizzleC&lt; TAny &gt;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_swizzle_c.xml#class_t_swizzle_c">TSwizzleC</apiRelation>&lt; <apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> &gt;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSwizzle</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="323"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1a2e861ac97041f4e66ad2931cfab77632">
		<apiName>Forget</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Forget(TStreamId anId)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::Forget(TStreamId)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_stream_id.xml#class_t_stream_id">TStreamId</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>anId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="324"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1a679d8597df18d1aa0f407dda06eaa157">
		<apiName>Reset</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Reset()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::Reset()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="325"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1a0c0d46e7b1ef16f2ce3014153bfb2643">
		<apiName>ResetAndDestroy</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void ResetAndDestroy()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::ResetAndDestroy()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="326"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1a93190235e650d3dd405781ff111d6361">
		<apiName>At</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_t_stream_id.xml#class_t_stream_id">TStreamId</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TStreamId At(TSwizzleC&lt; TAny &gt; aSwizzle) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::At(TSwizzleC&lt; TAny &gt;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_swizzle_c.xml#class_t_swizzle_c">TSwizzleC</apiRelation>&lt; <apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> &gt;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSwizzle</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="328"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1a15eebf87ae5c4d0915b63fd0aa58f8fa">
		<apiName>Label</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_t_swizzle_c.xml#class_t_swizzle_c">TSwizzleC</apiRelation>&lt; <apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> &gt;</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TSwizzleC&lt; TAny &gt; Label(TStreamId anId) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::Label(TStreamId)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_stream_id.xml#class_t_stream_id">TStreamId</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>anId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="329"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1ae9f30129432baf66c9f352cc0277f3c1">
		<apiName>Begin</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="struct_c_store_map_1_1_t_entry.xml#struct_c_store_map_1_1_t_entry">TIterator</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TIterator Begin() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::Begin()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="330"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1afff82a19a9dcaef927f36d213e76e904">
		<apiName>End</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="struct_c_store_map_1_1_t_entry.xml#struct_c_store_map_1_1_t_entry">TIterator</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TIterator End() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::End()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="331"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_store_map_1a7a68362d2cd9014b61e84324e597dcbd">
		<apiName>ExternalizeL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CStoreMap</cxxFunctionScopedName>
				<cxxFunctionPrototype>void ExternalizeL(const TStreamRef &amp;aRef, RWriteStream &amp;aStream) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CStoreMap::ExternalizeL(const TStreamRef &amp;,RWriteStream &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_stream_ref.xml#class_t_stream_ref">TStreamRef</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRef</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_r_write_stream.xml#class_r_write_stream">RWriteStream</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStream</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="333"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_c_store_map_1a41f56fe702743a8006b1966f07418b3d">
		<apiName>iArray</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_c_array_fix_flat.xml#class_c_array_fix_flat">CArrayFixFlat</apiRelation>&lt; <apiRelation href="struct_c_store_map_1_1_t_entry.xml#struct_c_store_map_1_1_t_entry">TEntry</apiRelation> &gt;</cxxVariableDeclaredType>
				<cxxVariableScopedName>CStoreMap</cxxVariableScopedName>
				<cxxVariablePrototype>CArrayFixFlat&lt; TEntry &gt; iArray</cxxVariablePrototype>
				<cxxVariableNameLookup>CStoreMap::iArray</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="335"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_c_store_map_1ae11ca77ce6ad002fb0b0e198702e396a">
		<apiName>iFree</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_stream_id.xml#class_t_stream_id">TStreamId</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>CStoreMap</cxxVariableScopedName>
				<cxxVariablePrototype>TStreamId iFree</cxxVariablePrototype>
				<cxxVariableNameLookup>CStoreMap::iFree</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="336"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_c_store_map_1a7c6435f079db6a06864283e94d4dcc02">
		<apiName>iStore</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>CStreamStore *</cxxVariableDeclaredType>
				<cxxVariableScopedName>CStoreMap</cxxVariableScopedName>
				<cxxVariablePrototype>CStreamStore * iStore</cxxVariablePrototype>
				<cxxVariableNameLookup>CStoreMap::iStore</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/s32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="337"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxClassInherits>
		<cxxClassInheritsDetail>
			<cxxClassFunctionInherited href="class_c_store_map.xml#class_c_base_1a240de7932690a4e987d75690b0b6f82b">CBase::CBase()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_store_map.xml#class_c_base_1ac0a06aeab68b3e01be81f9dd79e011c6">CBase::Delete(CBase *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_store_map.xml#class_c_base_1aae681a54d9c9b10c7d42e7e32ff109d5">CBase::Extension_(TUint,TAny *&amp;,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_store_map.xml#class_c_base_1af4c4965092a763b0856ccbfa3cf99eaf">CBase::operator new(TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_store_map.xml#class_c_base_1ab9e5f557dea4db22886189926687ddc1">CBase::operator new(TUint,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_store_map.xml#class_c_base_1aa464dd21494443ac109084ed03b81f28">CBase::operator new(TUint,TLeave)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_store_map.xml#class_c_base_1af8429815362d4df6fecd47179e0c5dfe">CBase::operator new(TUint,TLeave,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_store_map.xml#class_c_base_1a80505bdf8b1b20a2ed102307a78eeeeb">CBase::operator new(TUint,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_store_map.xml#class_c_base_1a1390361b94424be22bb2b1020eb400ea">CBase::~CBase()</cxxClassFunctionInherited>
		</cxxClassInheritsDetail>
	</cxxClassInherits>
</cxxClass>