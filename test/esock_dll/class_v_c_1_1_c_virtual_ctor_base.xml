<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_v_c_1_1_c_virtual_ctor_base">
	<apiName>VC::CVirtualCtorBase</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassDerivations>
				<cxxClassDerivation>
					<cxxClassDerivationAccessSpecifier value="public"/>
					<cxxClassBaseClass href="class_c_base.xml#class_c_base">CBase</cxxClassBaseClass>
				</cxxClassDerivation>
			</cxxClassDerivations>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="50"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="49"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="82"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc/>
	</cxxClassDetail>
	<cxxClassNested>
		<cxxClassNestedDetail>
			<cxxClassNestedClass href="class_v_c_1_1_c_virtual_ctor_base_1_1_t_ctor_table.xml#class_v_c_1_1_c_virtual_ctor_base_1_1_t_ctor_table">VC::CVirtualCtorBase::TCtorTable</cxxClassNestedClass>
		</cxxClassNestedDetail>
	</cxxClassNested>
	<cxxFunction id="class_v_c_1_1_c_virtual_ctor_base_1af3fece9a4d71f5f59c4ba6451c0f9443">
		<apiName>CVirtualCtorBase</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>VC::CVirtualCtorBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C CVirtualCtorBase()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>VC::CVirtualCtorBase::CVirtualCtorBase()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="52"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_v_c_1_1_c_virtual_ctor_base_1a97a5543d37c3a7760a12a2c9301a15a2">
		<apiName>~CVirtualCtorBase</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDestructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>VC::CVirtualCtorBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C ~CVirtualCtorBase()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>VC::CVirtualCtorBase::~CVirtualCtorBase()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="53"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_v_c_1_1_c_virtual_ctor_base_1a494376c5da589ff85e949b3d86ec8c0d">
		<apiName>RegisterInterfaceL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>VC::CVirtualCtorBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void RegisterInterfaceL(TUid aInterfaceId, TInt aNumCtors, const TImplementationProxy *aCtorTable)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>VC::CVirtualCtorBase::RegisterInterfaceL(TUid,TInt,const TImplementationProxy *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_uid.xml#class_t_uid">TUid</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterfaceId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aNumCtors</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_t_implementation_proxy.xml#struct_t_implementation_proxy">TImplementationProxy</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aCtorTable</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="54"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_v_c_1_1_c_virtual_ctor_base_1a2caef31eebc7df12b6c0247ec9c52aec">
		<apiName>DeregisterInterface</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>VC::CVirtualCtorBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void DeregisterInterface(TUid aInterfaceId)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>VC::CVirtualCtorBase::DeregisterInterface(TUid)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_uid.xml#class_t_uid">TUid</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterfaceId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="55"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_v_c_1_1_c_virtual_ctor_base_1a09cf4e5ddd3d19bf9d664ee6ee893506">
		<apiName>IsInterfaceRegistered</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>VC::CVirtualCtorBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TBool IsInterfaceRegistered(TUid aInterfaceId) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>VC::CVirtualCtorBase::IsInterfaceRegistered(TUid)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_uid.xml#class_t_uid">TUid</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterfaceId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="56"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_v_c_1_1_c_virtual_ctor_base_1a3a05eaa2f308087c3a767a50891a28de">
		<apiName>FindRawCtor</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="implementationproxy_8h.xml#_1a710beb9ec081b69d77d17e2dd7c8c20c">TProxyNewLPtr</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>VC::CVirtualCtorBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TProxyNewLPtr FindRawCtor(const Meta::STypeId &amp;aType) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>VC::CVirtualCtorBase::FindRawCtor(const Meta::STypeId &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_meta_1_1_s_type_id.xml#struct_meta_1_1_s_type_id">Meta::STypeId</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aType</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="59"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxTypedef id="class_v_c_1_1_c_virtual_ctor_base_1a18567d211ba19403eca25c8cc25d570f">
		<apiName>TCtorTableList</apiName>
		<cxxTypedefDetail>
			<cxxTypedefDefinition>
				<cxxTypedefAccessSpecifier value="private"/>
				<cxxTypedefDeclaredType>
					<apiRelation href="class_r_array.xml#class_r_array">RArray</apiRelation>&lt; <apiRelation href="class_v_c_1_1_c_virtual_ctor_base_1_1_t_ctor_table.xml#class_v_c_1_1_c_virtual_ctor_base_1_1_t_ctor_table">TCtorTable</apiRelation> &gt;</cxxTypedefDeclaredType>
				<cxxTypedefScopedName>VC::CVirtualCtorBase</cxxTypedefScopedName>
				<cxxTypedefPrototype>RArray&lt; TCtorTable &gt; TCtorTableList</cxxTypedefPrototype>
				<cxxTypedefNameLookup>VC::CVirtualCtorBase::TCtorTableList</cxxTypedefNameLookup>
				<cxxTypedefAPIItemLocation>
					<cxxTypedefDeclarationFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
					<cxxTypedefDeclarationFileLine name="lineNumber" value="78"/>
				</cxxTypedefAPIItemLocation>
			</cxxTypedefDefinition>
			<apiDesc/>
		</cxxTypedefDetail>
	</cxxTypedef>
	<cxxVariable id="class_v_c_1_1_c_virtual_ctor_base_1a674abc1b405da47af4483c54702e5544">
		<apiName>iCtorTableList</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_r_array.xml#class_r_array">TCtorTableList</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>VC::CVirtualCtorBase</cxxVariableScopedName>
				<cxxVariablePrototype>TCtorTableList iCtorTableList</cxxVariablePrototype>
				<cxxVariableNameLookup>VC::CVirtualCtorBase::iCtorTableList</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="79"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxFunction id="class_v_c_1_1_c_virtual_ctor_base_1ac39ac6dceb3b6b0ab7483a385540584c">
		<apiName>FindCtorTable</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>const <apiRelation href="class_v_c_1_1_c_virtual_ctor_base_1_1_t_ctor_table.xml#class_v_c_1_1_c_virtual_ctor_base_1_1_t_ctor_table">TCtorTable</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>VC::CVirtualCtorBase</cxxFunctionScopedName>
				<cxxFunctionPrototype>const TCtorTable * FindCtorTable(TUid aInterfaceId, TInt &amp;aIndex) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>VC::CVirtualCtorBase::FindCtorTable(TUid,TInt &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_uid.xml#class_t_uid">TUid</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInterfaceId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/elements/vc.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="81"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxClassInherits>
		<cxxClassInheritsDetail>
			<cxxClassFunctionInherited href="class_v_c_1_1_c_virtual_ctor_base.xml#class_c_base_1a240de7932690a4e987d75690b0b6f82b">CBase::CBase()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_v_c_1_1_c_virtual_ctor_base.xml#class_c_base_1ac0a06aeab68b3e01be81f9dd79e011c6">CBase::Delete(CBase *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_v_c_1_1_c_virtual_ctor_base.xml#class_c_base_1aae681a54d9c9b10c7d42e7e32ff109d5">CBase::Extension_(TUint,TAny *&amp;,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_v_c_1_1_c_virtual_ctor_base.xml#class_c_base_1af4c4965092a763b0856ccbfa3cf99eaf">CBase::operator new(TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_v_c_1_1_c_virtual_ctor_base.xml#class_c_base_1ab9e5f557dea4db22886189926687ddc1">CBase::operator new(TUint,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_v_c_1_1_c_virtual_ctor_base.xml#class_c_base_1aa464dd21494443ac109084ed03b81f28">CBase::operator new(TUint,TLeave)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_v_c_1_1_c_virtual_ctor_base.xml#class_c_base_1af8429815362d4df6fecd47179e0c5dfe">CBase::operator new(TUint,TLeave,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_v_c_1_1_c_virtual_ctor_base.xml#class_c_base_1a80505bdf8b1b20a2ed102307a78eeeeb">CBase::operator new(TUint,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_v_c_1_1_c_virtual_ctor_base.xml#class_c_base_1a1390361b94424be22bb2b1020eb400ea">CBase::~CBase()</cxxClassFunctionInherited>
		</cxxClassInheritsDetail>
	</cxxClassInherits>
</cxxClass>