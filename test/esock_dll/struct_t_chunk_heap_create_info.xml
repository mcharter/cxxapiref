<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxStruct PUBLIC "-//NOKIA//DTD DITA C++ API Struct Reference Type v0.5.0//EN" "dtd/cxxStruct.dtd" >
<cxxStruct id="struct_t_chunk_heap_create_info">
	<apiName>TChunkHeapCreateInfo</apiName>
	<cxxStructDetail>
		<cxxStructDefinition>
			<cxxStructAccessSpecifier value="public"/>
			<cxxStructAPIItemLocation>
				<cxxStructDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxStructDeclarationFileLine name="lineNumber" value="3521"/>
				<cxxStructDefinitionFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxStructDefinitionFileLineStart name="lineNumber" value="3520"/>
				<cxxStructDefinitionFileLineEnd name="lineNumber" value="3602"/>
			</cxxStructAPIItemLocation>
		</cxxStructDefinition>
		<apiDesc>
			<p>This structure specifies the type and properties of the user heap to be created. It is passed as a parameter to the UserHeap::Create() method.</p>
		</apiDesc>
	</cxxStructDetail>
	<cxxEnumeration id="struct_t_chunk_heap_create_info_1a8da75050b73fc3a3af99c26ee3ec321c">
		<apiName>TChunkHeapCreateVersions</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="public"/>
				<cxxEnumerationScopedName>TChunkHeapCreateInfo</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>TChunkHeapCreateVersions</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>TChunkHeapCreateInfo:TChunkHeapCreateVersions</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="struct_t_chunk_heap_create_info_1a8da75050b73fc3a3af99c26ee3ec321caace9035cb227d29d0632b2385074957b">
						<apiName>EVersion0</apiName>
						<cxxEnumeratorScopedName>TChunkHeapCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EVersion0</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TChunkHeapCreateInfo::EVersion0</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3529"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc/>
					</cxxEnumerator>
					<cxxEnumerator id="struct_t_chunk_heap_create_info_1a8da75050b73fc3a3af99c26ee3ec321caf623a95ad4c6054d8ab3a99627813741">
						<apiName>ESupportedVersions</apiName>
						<cxxEnumeratorScopedName>TChunkHeapCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>ESupportedVersions</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TChunkHeapCreateInfo::ESupportedVersions</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3530"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc/>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="3528"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="3527"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="3531"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc>
				<p>Currently supported version numbers  </p>
			</apiDesc>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxEnumeration id="struct_t_chunk_heap_create_info_1a8d9b04d06cce7c9c7e867b01b0b08862">
		<apiName>TChunkHeapPagingAtt</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="public"/>
				<cxxEnumerationScopedName>TChunkHeapCreateInfo</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>TChunkHeapPagingAtt</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>TChunkHeapCreateInfo:TChunkHeapPagingAtt</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="struct_t_chunk_heap_create_info_1a8d9b04d06cce7c9c7e867b01b0b08862ae082b2d63ec781d8566f8d9751a4529d">
						<apiName>EUnspecified</apiName>
						<cxxEnumeratorScopedName>TChunkHeapCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EUnspecified</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TChunkHeapCreateInfo::EUnspecified</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3538"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>The chunk heap will use the creating process&apos;s paging attributes. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="struct_t_chunk_heap_create_info_1a8d9b04d06cce7c9c7e867b01b0b08862a838b7f7bb58f3569f0e2a7a0122b4342">
						<apiName>EPaged</apiName>
						<cxxEnumeratorScopedName>TChunkHeapCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EPaged</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TChunkHeapCreateInfo::EPaged</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3539"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>The chunk heap will be data paged. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="struct_t_chunk_heap_create_info_1a8d9b04d06cce7c9c7e867b01b0b08862ad2968e3faac275b51866f94f0f865162">
						<apiName>EUnpaged</apiName>
						<cxxEnumeratorScopedName>TChunkHeapCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EUnpaged</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TChunkHeapCreateInfo::EUnpaged</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3540"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>The chunk heap will not be data paged. </p>
						</apiDesc>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="3537"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="3536"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="3541"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc>
				<p>Attributes that specify whether the chunk heap to be created is data paged or not. </p>
			</apiDesc>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxFunction id="struct_t_chunk_heap_create_info_1add43e1c5c2e62ea64b27428d02d356f4">
		<apiName>TChunkHeapCreateInfo</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkHeapCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TChunkHeapCreateInfo(TInt aMinLength, TInt aMaxLength)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkHeapCreateInfo::TChunkHeapCreateInfo(TInt,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMinLength</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxLength</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3545"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_heap_create_info_1abbe62bc457970272f32b98135243b394">
		<apiName>SetCreateChunk</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkHeapCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetCreateChunk(const TDesC *aName)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkHeapCreateInfo::SetCreateChunk(const TDesC *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3546"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_heap_create_info_1a6d6bee16ff11509eeca9cc5321ec6b69">
		<apiName>SetUseChunk</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkHeapCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetUseChunk(const RChunk aChunk)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkHeapCreateInfo::SetUseChunk(const RChunk)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_r_chunk.xml#class_r_chunk">RChunk</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aChunk</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3547"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_heap_create_info_1afbd2156bb92b4ca3dcac789deb5e73d3">
		<apiName>SetSingleThread</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkHeapCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetSingleThread(TBool aSingleThread)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkHeapCreateInfo::SetSingleThread(TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSingleThread</cxxFunctionParameterDeclarationName>
						<apiDefNote>ETrue when the chunk heap is to be single threaded, EFalse otherwise. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3548"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="7277"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="7280"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets single thread property of the chunk heap.</p>
				<p>This overrides any previous call to <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info_1afbd2156bb92b4ca3dcac789deb5e73d3">TChunkHeapCreateInfo::SetSingleThread()</xref> for this <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info">TChunkHeapCreateInfo</xref> object.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_heap_create_info_1af7473c60fea42b8ab48101afc7a5f842">
		<apiName>SetAlignment</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkHeapCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetAlignment(TInt aAlign)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkHeapCreateInfo::SetAlignment(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAlign</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3549"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="7291"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="7294"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets alignment of the cells of the chunk heap to be created.</p>
				<p>This overrides any previous call to <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info_1af7473c60fea42b8ab48101afc7a5f842">TChunkHeapCreateInfo::SetAlignment()</xref> for this <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info">TChunkHeapCreateInfo</xref> object.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_heap_create_info_1a3ac47bbf4b2c41eccf89fca076865db0">
		<apiName>SetGrowBy</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkHeapCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetGrowBy(TInt aGrowBy)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkHeapCreateInfo::SetGrowBy(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aGrowBy</cxxFunctionParameterDeclarationName>
						<apiDefNote>The increment to the size of the host chunk. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3550"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="7307"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="7310"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the increments to the size of the host chunk. If the supplied value is less than KMinHeapGrowBy, it is discarded and the value KMinHeapGrowBy is used instead.</p>
				<p>This overrides any previous call to <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info_1a3ac47bbf4b2c41eccf89fca076865db0">TChunkHeapCreateInfo::SetGrowBy()</xref> for this <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info">TChunkHeapCreateInfo</xref> object.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_heap_create_info_1a6cdbeb2814df43a028695d80979e1d08">
		<apiName>SetOffset</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkHeapCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetOffset(TInt aOffset)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkHeapCreateInfo::SetOffset(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOffset</cxxFunctionParameterDeclarationName>
						<apiDefNote>The offset in bytes. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3551"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="7321"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="7324"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the offset from the base of the host chunk to the start of the heap.</p>
				<p>This overrides any previous call to <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info_1a6cdbeb2814df43a028695d80979e1d08">TChunkHeapCreateInfo::SetOffset()</xref> for this <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info">TChunkHeapCreateInfo</xref> object.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_heap_create_info_1ae899885228fe46cd27f49bf041d2902d">
		<apiName>SetMode</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkHeapCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetMode(TUint aMode)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkHeapCreateInfo::SetMode(TUint)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMode</cxxFunctionParameterDeclarationName>
						<apiDefNote>The mode flags for the chunk heap to be created, this should be one or more of the values from TChunkHeapCreateMode. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3552"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="7336"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="7339"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the mode flags of the chunk heap.</p>
				<p>This overrides any previous call to <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info_1ae899885228fe46cd27f49bf041d2902d">TChunkHeapCreateInfo::SetMode()</xref> for this <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info">TChunkHeapCreateInfo</xref> object.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_heap_create_info_1a018fb978e70eba4d12a2adea1762353f">
		<apiName>SetPaging</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkHeapCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetPaging(const TChunkHeapPagingAtt aPaging)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkHeapCreateInfo::SetPaging(const TChunkHeapPagingAtt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_t_chunk_heap_create_info.xml#_1a8d9b04d06cce7c9c7e867b01b0b08862">TChunkHeapPagingAtt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPaging</cxxFunctionParameterDeclarationName>
						<apiDefNote>The paging attribute for the chunk heap to be created. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3553"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="7350"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="7353"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the paging attribute of the chunk heap to be created.</p>
				<p>This overrides any previous call to <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info_1a018fb978e70eba4d12a2adea1762353f">TChunkHeapCreateInfo::SetPaging()</xref> for this <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info">TChunkHeapCreateInfo</xref> object.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="struct_t_chunk_heap_create_info_1a1d67edc95c1414c4104eb9a2fdb62fd4">
		<apiName>iVersionNumber</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iVersionNumber</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iVersionNumber</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3559"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The version number of this <xref href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info">TChunkHeapCreateInfo</xref>.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1af046ba6f2a8cc2f48e3d567ab66acd0c">
		<apiName>iMinLength</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iMinLength</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iMinLength</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3563"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The minimum size for the heap.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1a4083c2c3c2f1f8c89c20b3ff0ca93af7">
		<apiName>iMaxLength</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iMaxLength</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iMaxLength</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3567"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The maximum size for the heap.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1a279aa742e1674751e8a98092029194ca">
		<apiName>iAlign</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iAlign</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iAlign</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3571"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The alignment of the heap.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1af666bc5c8b5e0622fb55f86f3d640df2">
		<apiName>iGrowBy</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iGrowBy</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iGrowBy</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3575"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The grow by value of the heap.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1a01af84330129becc8305309c853a9e17">
		<apiName>iSingleThread</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TBool iSingleThread</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iSingleThread</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3579"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The single thread value of the heap.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1a1cbcd20ec639aef5976c021d2989c7fc">
		<apiName>iOffset</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iOffset</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iOffset</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3583"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The offset from the base of the chunk to the start of the heap.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1a2eb4aef191ad194b6ca77741ec619dc0">
		<apiName>iPaging</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="struct_t_chunk_heap_create_info.xml#_1a8d9b04d06cce7c9c7e867b01b0b08862">TChunkHeapPagingAtt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TChunkHeapPagingAtt iPaging</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iPaging</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3587"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The paging attributes of the chunk.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1abf07e433e22b9ebbee8fea3c9a39b03b">
		<apiName>iMode</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iMode</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iMode</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3591"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The mode flags for the heap.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1adf56ea4eac9f8decf39406358bbfc5a8">
		<apiName>iName</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> *</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TDesC * iName</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iName</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3595"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The name of the chunk to be created for the heap.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1acb6aa1cd39e11b20230ed975c3fb6e90">
		<apiName>iChunk</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_r_chunk.xml#class_r_chunk">RChunk</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>RChunk iChunk</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iChunk</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3599"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The chunk to use for the heap.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_heap_create_info_1a5f634cc5217cafb3b7bb888418006138">
		<apiName>iSpare</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkHeapCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iSpare[5]</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkHeapCreateInfo::iSpare</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3601"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
</cxxStruct>