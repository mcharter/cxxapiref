<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_t_locale">
	<apiName>TLocale</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="2172"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="2171"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="2334"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Sets and gets the system&apos;s locale settings.</p>
			<p>Symbian OS maintains the locale information internally. On construction, this object is initialized with the system information for all locale items. </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxEnumeration id="class_t_locale_1a833150c1cbdbf6474a1adf077afb2cdb">
		<apiName>TNegativeCurrencyFormat</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="public"/>
				<cxxEnumerationScopedName>TLocale</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>TNegativeCurrencyFormat</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>TLocale:TNegativeCurrencyFormat</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="class_t_locale_1a833150c1cbdbf6474a1adf077afb2cdbad8339587b9f05a2b3e5f9f8547c1537b">
						<apiName>ELeadingMinusSign</apiName>
						<cxxEnumeratorScopedName>TLocale</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>ELeadingMinusSign</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TLocale::ELeadingMinusSign</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="2183"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>A minus sign is inserted before the currency symbol and value. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="class_t_locale_1a833150c1cbdbf6474a1adf077afb2cdba993cc1a20a9103d60f04b2fff16430f4">
						<apiName>EInBrackets</apiName>
						<cxxEnumeratorScopedName>TLocale</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EInBrackets</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TLocale::EInBrackets</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="2189"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>The currency value and symbol are enclosed in brackets (no minus sign is used). </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="class_t_locale_1a833150c1cbdbf6474a1adf077afb2cdbaccc8841b30e6e64957a5bc703e3386d2">
						<apiName>ETrailingMinusSign</apiName>
						<cxxEnumeratorScopedName>TLocale</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>ETrailingMinusSign</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TLocale::ETrailingMinusSign</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="2194"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>A minus sign is inserted after the currency symbol and value. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="class_t_locale_1a833150c1cbdbf6474a1adf077afb2cdba451ac2173c9958ee05c6b91de4a3f384">
						<apiName>EInterveningMinusSign</apiName>
						<cxxEnumeratorScopedName>TLocale</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EInterveningMinusSign</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TLocale::EInterveningMinusSign</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="2200"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>A minus sign is inserted between the currency symbol and the value. </p>
						</apiDesc>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="2179"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="2178"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="2200"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc>
				<p>Indicates how negative currency values are formatted. </p>
			</apiDesc>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxEnumeration id="class_t_locale_1a80bbcf1a82a5eb2013066270f119ce06">
		<apiName>@19</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="public"/>
				<cxxEnumerationScopedName>TLocale</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>@19</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>TLocale:@19</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="class_t_locale_1a80bbcf1a82a5eb2013066270f119ce06a8224bfa384de5ee984701842301a5002">
						<apiName>EFlagNegativeLoseSpace</apiName>
						<cxxEnumeratorScopedName>TLocale</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EFlagNegativeLoseSpace = 0x00000001</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TLocale::EFlagNegativeLoseSpace</cxxEnumeratorNameLookup>
						<cxxEnumeratorInitialiser value="0x00000001"/>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="2212"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>If this flag is set and the currency value being formatted is negative, if there is a space between the currency symbol and the value, that space is lost. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="class_t_locale_1a80bbcf1a82a5eb2013066270f119ce06a0401d46a5e0f11bc521058355b0860d1">
						<apiName>EFlagNegativeCurrencySymbolOpposite</apiName>
						<cxxEnumeratorScopedName>TLocale</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EFlagNegativeCurrencySymbolOpposite = 0x00000002</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TLocale::EFlagNegativeCurrencySymbolOpposite</cxxEnumeratorNameLookup>
						<cxxEnumeratorInitialiser value="0x00000002"/>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="2220"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>If this flag is set and the currency value being formatted is negative, the position of the currency symbol is placed in the opposite direction from the position set for the positive currency value. </p>
						</apiDesc>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="2206"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="2205"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="2220"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc>
				<p>Flags for negative currency values formatting </p>
			</apiDesc>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxEnumeration id="class_t_locale_1a4f3eed560172549102a5e8707070168b">
		<apiName>TDeviceTimeState</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="public"/>
				<cxxEnumerationScopedName>TLocale</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>TDeviceTimeState</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>TLocale:TDeviceTimeState</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="class_t_locale_1a4f3eed560172549102a5e8707070168bad7c6b6701eecb32d604f167da24ac27f">
						<apiName>EDeviceUserTime</apiName>
						<cxxEnumeratorScopedName>TLocale</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EDeviceUserTime</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TLocale::EDeviceUserTime</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="2226"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>Universal time is maintained by the device RTC and the user selection of the locale of the device indicating offset from GMT and daylight saving </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="class_t_locale_1a4f3eed560172549102a5e8707070168ba7d4301bf95f88391555b572aa48cfeac">
						<apiName>ENITZNetworkTimeSync</apiName>
						<cxxEnumeratorScopedName>TLocale</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>ENITZNetworkTimeSync</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TLocale::ENITZNetworkTimeSync</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="2231"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>Universal time and offset from GMT is supplied by the mobile network and maintained by device RTC </p>
						</apiDesc>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="2223"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="2222"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="2231"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc>
				<p>Indicates how the device universal time is maintained </p>
			</apiDesc>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxFunction id="class_t_locale_1ab40132e957e018a65e4ae570747c7b3d">
		<apiName>TLocale</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TLocale()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::TLocale()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2233"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a322c04dd5991758306aeaa20a88fddda">
		<apiName>TLocale</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TLocale(TInt)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::TLocale(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2234"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2394"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2395"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a8681288de1a8e44ef22657166a5704bb">
		<apiName>Refresh</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Refresh()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::Refresh()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2235"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a3364a44bc760f2f818572d93fbf72d9a">
		<apiName>Set</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt Set() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::Set()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2236"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ae191f079914516104f0af48952d452d4">
		<apiName>FormatCurrency</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void FormatCurrency(TDes &amp;aText, TInt aAmount)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::FormatCurrency(TDes &amp;,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_des16.xml#class_t_des16">TDes</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aText</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAmount</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2237"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1aa6c0ff545476381f9c690990c0ab43b0">
		<apiName>FormatCurrency</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void FormatCurrency(TDes &amp;aText, TInt64 aAmount)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::FormatCurrency(TDes &amp;,TInt64)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_des16.xml#class_t_des16">TDes</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aText</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a05bf37b696038fef93385278ebf8ee16">TInt64</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAmount</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2238"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1abc3a58a23d3e7a6f44ce0f73fb495d9a">
		<apiName>FormatCurrency</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void FormatCurrency(TDes &amp;aText, TDesOverflow &amp;aOverflowHandler, TInt aAmount)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::FormatCurrency(TDes &amp;,TDesOverflow &amp;,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_des16.xml#class_t_des16">TDes</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aText</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_des16_overflow.xml#class_t_des16_overflow">TDesOverflow</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOverflowHandler</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAmount</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2239"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a2884ccbb287b07286c2f7d4356c561c7">
		<apiName>FormatCurrency</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void FormatCurrency(TDes &amp;aText, TDesOverflow &amp;aOverflowHandler, TInt64 aAmount)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::FormatCurrency(TDes &amp;,TDesOverflow &amp;,TInt64)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_des16.xml#class_t_des16">TDes</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aText</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_des16_overflow.xml#class_t_des16_overflow">TDesOverflow</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOverflowHandler</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a05bf37b696038fef93385278ebf8ee16">TInt64</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAmount</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2240"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1af4146336ff43c6c03e085f4c1bb43a6b">
		<apiName>CountryCode</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TInt CountryCode() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::CountryCode()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2242"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2399"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2408"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the code which is used to select country-specific locale data.</p>
				<p>The country code is the code used as the international dialling prefix. This code is also used to identify a country by the dialling software.</p>
				<p>The country code. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ab816ebbc99b92a447176adff9ec001d9">
		<apiName>SetCountryCode</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetCountryCode(TInt aCode)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetCountryCode(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aCode</cxxFunctionParameterDeclarationName>
						<apiDefNote>The country code.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2243"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2413"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2425"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the value which is used to select country-specific locale data.</p>
				<p>This value can be retrieved by using <xref href="class_t_locale.xml#class_t_locale_1af4146336ff43c6c03e085f4c1bb43a6b">TLocale::CountryCode()</xref>. The country code is the code used as the international dialling prefix. This code is also used to identify a country by the dialling software.</p>
				<p>
					<xref href="class_t_locale.xml#class_t_locale_1af4146336ff43c6c03e085f4c1bb43a6b">TLocale::CountryCode</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ab6084b9f2ac81b8489d4abf8fdd236d0">
		<apiName>UniversalTimeOffset</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_t_time_interval_seconds.xml#class_t_time_interval_seconds">TTimeIntervalSeconds</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TTimeIntervalSeconds UniversalTimeOffset() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::UniversalTimeOffset()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2244"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2430"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2441"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the locale&apos;s universal time offset.</p>
				<p>Offset in seconds from universal time. <xref href="class_time.xml#class_time">Time</xref> zones east of universal time have positive offsets. <xref href="class_time.xml#class_time">Time</xref> zones west of universal time have negative offsets.</p>
				<p>Use <xref href="class_user.xml#class_user_1afb4393deb310b86f6cdfe84ab229941f">User::UTCOffset</xref> to get the current offset inclusive of daylight savings time. This function returns the same value, for compatibility. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a47231d42aeba97d601cabad2d45061d9">
		<apiName>DateFormat</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1abf1cfb4eb55a8ccf9e674e4212e2425c">TDateFormat</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TDateFormat DateFormat() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::DateFormat()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2245"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2446"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2452"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the date format.</p>
				<p>The date format. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ac5438683d899d243bef14b4803c85688">
		<apiName>SetDateFormat</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetDateFormat(TDateFormat aFormat)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetDateFormat(TDateFormat)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1abf1cfb4eb55a8ccf9e674e4212e2425c">TDateFormat</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFormat</cxxFunctionParameterDeclarationName>
						<apiDefNote>The date format to be used. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2246"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2457"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2463"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the date format.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ac47deb2f5ffd6764714ca3d5d4686c51">
		<apiName>TimeFormat</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a64affaf748f3623f951665ca6164cc57">TTimeFormat</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TTimeFormat TimeFormat() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::TimeFormat()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2247"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2468"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2474"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the time format (12 or 24 hour).</p>
				<p>The time format. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a9f779f6372fd3d81b4e5c5521f907c2d">
		<apiName>SetTimeFormat</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetTimeFormat(TTimeFormat aFormat)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetTimeFormat(TTimeFormat)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a64affaf748f3623f951665ca6164cc57">TTimeFormat</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFormat</cxxFunctionParameterDeclarationName>
						<apiDefNote>The time format. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2248"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2479"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2485"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the time format (12 or 24 hour).</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a694a07e0b36b53d642947394fb6ed49a">
		<apiName>CurrencySymbolPosition</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1acd123494d6ce4424811e451fcdc6dd87">TLocalePos</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TLocalePos CurrencySymbolPosition() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::CurrencySymbolPosition()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2249"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2490"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2501"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the currency symbol position.</p>
				<p>For negative currency values, this position may be reversed using <xref href="class_t_locale.xml#class_t_locale_1a47472734deff3ae322f0bc6eaec7a4df">SetNegativeCurrencySymbolOpposite()</xref>.</p>
				<p>The currency symbol position.</p>
				<p>
					<xref href="class_t_locale.xml#class_t_locale_1a47472734deff3ae322f0bc6eaec7a4df">TLocale::SetNegativeCurrencySymbolOpposite</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a6f7eab14255d32ca558e6910026e0de2">
		<apiName>SetCurrencySymbolPosition</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetCurrencySymbolPosition(TLocalePos aPos)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetCurrencySymbolPosition(TLocalePos)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1acd123494d6ce4424811e451fcdc6dd87">TLocalePos</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPos</cxxFunctionParameterDeclarationName>
						<apiDefNote>The currency symbol position. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2250"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2506"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2512"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the currency symbol position.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1afd3ec1670fa08e3e46f15d0765155957">
		<apiName>CurrencySpaceBetween</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool CurrencySpaceBetween() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::CurrencySpaceBetween()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2251"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2517"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2528"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets whether or not a space is inserted between the currency symbol and the currency value.</p>
				<p>For negative currency values, the space can be removed using <xref href="class_t_locale.xml#class_t_locale_1aabf0d152684678bb355b43a285367bc7">SetNegativeLoseSpace()</xref>.</p>
				<p>True if a space is inserted; false if not.</p>
				<p>
					<xref href="class_t_locale.xml#class_t_locale_1aabf0d152684678bb355b43a285367bc7">TLocale::SetNegativeLoseSpace</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1abe6fe5f551a98ba513c3bfa67850dbee">
		<apiName>SetCurrencySpaceBetween</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetCurrencySpaceBetween(TBool aSpace)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetCurrencySpaceBetween(TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSpace</cxxFunctionParameterDeclarationName>
						<apiDefNote>ETrue if a space is inserted; EFalse if not. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2252"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2533"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2540"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets whether a space is inserted between the currency symbol and the currency amount.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a0cb03662ef0ac4cb55bd52c260e75919">
		<apiName>CurrencyDecimalPlaces</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TInt CurrencyDecimalPlaces() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::CurrencyDecimalPlaces()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2253"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2545"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2551"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the number of decimal places to which currency values are set.</p>
				<p>The number of decimal places. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a75fc6ec41d65972be3895a8a37c1eb80">
		<apiName>SetCurrencyDecimalPlaces</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetCurrencyDecimalPlaces(TInt aPlaces)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetCurrencyDecimalPlaces(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPlaces</cxxFunctionParameterDeclarationName>
						<apiDefNote>The number of decimal places. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2254"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2556"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2562"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the number of decimal places to which currency values should be set.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ae9d39363116532318598aa86d7b64774">
		<apiName>CurrencyNegativeInBrackets</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool CurrencyNegativeInBrackets() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::CurrencyNegativeInBrackets()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2255"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2567"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2582"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets whether negative currency values are enclosed in brackets rather than being preceded by a minus sign.</p>
				<p>This is deprecated, use <xref href="class_t_locale.xml#class_t_locale_1a2f06abb41faa196b015a80f84473cec6">NegativeCurrencyFormat()</xref> instead.</p>
				<p>True if negative currency is enclosed in brackets and has no minus sign; false if negative currency has a minus sign and is not enclosed in brackets.</p>
				<p>
					<xref href="class_t_locale.xml#class_t_locale_1a2f06abb41faa196b015a80f84473cec6">TLocale::NegativeCurrencyFormat</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a2ff867f6ec4461da10a16c13d53c6740">
		<apiName>SetCurrencyNegativeInBrackets</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetCurrencyNegativeInBrackets(TBool aBool)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetCurrencyNegativeInBrackets(TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aBool</cxxFunctionParameterDeclarationName>
						<apiDefNote>ETrue, if a negative currency value must be enclosed in brackets without a minus sign; EFalse, if a negative currency value is preceded by a minus sign without any enclosing brackets.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2256"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2587"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2602"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets whether negative currency values are enclosed in brackets rather than being preceded by a minus sign.</p>
				<p>This is deprecated, use <xref href="class_t_locale.xml#class_t_locale_1a92806b38f413d3d020594dba83973965">SetNegativeCurrencyFormat()</xref> instead.</p>
				<p>
					<xref href="class_t_locale.xml#class_t_locale_1a92806b38f413d3d020594dba83973965">TLocale::SetNegativeCurrencyFormat</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1abed9a742c97931a38416aa3770cfbbb2">
		<apiName>CurrencyTriadsAllowed</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool CurrencyTriadsAllowed() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::CurrencyTriadsAllowed()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2257"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2607"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2614"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets whether triads are allowed in currency values. Triads are groups of three digits separated by the thousands separator.</p>
				<p>True if triads are allowed; false if not. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a2b9bddbd4244bc9f1d339bef6b7d7712">
		<apiName>SetCurrencyTriadsAllowed</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetCurrencyTriadsAllowed(TBool aBool)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetCurrencyTriadsAllowed(TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aBool</cxxFunctionParameterDeclarationName>
						<apiDefNote>ETrue if triads are allowed; EFalse if triads not allowed. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2258"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2619"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2625"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets whether triads are allowed in currency values.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a88959d273e9a1a3f97f4a0655da3d9f0">
		<apiName>ThousandsSeparator</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TChar ThousandsSeparator() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::ThousandsSeparator()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2259"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2630"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2640"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the character used to separate groups of three digits to the left of the decimal separator.</p>
				<p>A thousands separator character is only displayed in currency values if currency triads are allowed.</p>
				<p>The character used as the thousands separator. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ab6808af9eca22825ec8f6b496b108f82">
		<apiName>SetThousandsSeparator</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetThousandsSeparator(const TChar &amp;aChar)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetThousandsSeparator(const TChar &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aChar</cxxFunctionParameterDeclarationName>
						<apiDefNote>The character to be used as the thousands separator. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2260"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2645"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2655"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the character to be used to separate groups of three digits to the left of the decimal separator.</p>
				<p>A thousands separator character is only displayed in currency values if currency triads are allowed.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a79c442a4a6b6dd63221749676d40ccab">
		<apiName>DecimalSeparator</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TChar DecimalSeparator() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::DecimalSeparator()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2261"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2660"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2666"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the character used to separate a whole number from its fractional part.</p>
				<p>The character used as the decimal separator. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ae724901acaaf0a8558a8874d7d2134b3">
		<apiName>SetDecimalSeparator</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetDecimalSeparator(const TChar &amp;aChar)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetDecimalSeparator(const TChar &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aChar</cxxFunctionParameterDeclarationName>
						<apiDefNote>The character to be used as the decimal separator. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2262"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2671"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2678"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the character to be used to separate a whole number from its fractional part.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a31112cfe3a43bc2f2eb6ee7b96f2e9f7">
		<apiName>DateSeparator</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TChar DateSeparator(TInt aIndex) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::DateSeparator(TInt)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote>An index indicating which of the four separators is being accessed. This must be a value between zero and three inclusive.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2263"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2683"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2697"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets one of the four characters used to separate the day, month and year components of the date.</p>
				<p>If the four separators are represented by S0, S1, S2 and S3 and the three date components are represented by XX, YY and ZZ, then the separators are located: S0 XX S1 YY S2 ZZ S3.</p>
				<p>A date separator character as determined by the value of aIndex. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a5e872a4816f0790c29581cc5e66195dc">
		<apiName>SetDateSeparator</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetDateSeparator(const TChar &amp;aChar, TInt aIndex)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetDateSeparator(const TChar &amp;,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aChar</cxxFunctionParameterDeclarationName>
						<apiDefNote>A date separator character to be used. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote>An index indicating which of the four separators is being accessed. This must be a value between zero and three inclusive. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2264"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2702"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2716"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets one of the four characters used to separate the day, month and year components of the date.</p>
				<p>If the four separators are represented by S0, S1, S2 and S3 and the three date components are represented by XX, YY and ZZ, then the separators are located: S0 XX S1 YY S2 ZZ S3.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a313a69396446450fa672650aa5c0304e">
		<apiName>TimeSeparator</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TChar TimeSeparator(TInt aIndex) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::TimeSeparator(TInt)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote>An index indicating which of the four separators is being accessed. This must be a value between zero and three inclusive.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2265"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2721"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2736"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets one of the four characters used to separate the hour, second and minute components of the time.</p>
				<p>If the four separators are represented by S0, S1, S2 and S3 and the three time components are represented by XX, YY and ZZ, then the separators are located: S0 XX S1 YY S2 ZZ S3.</p>
				<p>A time separator character as determined by the value of aIndex. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ad62f82e4a6bc7385e7148b382b46dfd6">
		<apiName>SetTimeSeparator</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetTimeSeparator(const TChar &amp;aChar, TInt aIndex)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetTimeSeparator(const TChar &amp;,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aChar</cxxFunctionParameterDeclarationName>
						<apiDefNote>A time separator character to be used. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote>An index indicating which of the four separators is being accessed. This must be a value between zero and three inclusive. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2266"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2741"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2755"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets one of the four characters used to separate the hour, minute and second components of the date.</p>
				<p>If the four separators are represented by S0, S1, S2 and S3 and the three time components are represented by XX, YY and ZZ, then the separators are located: S0 XX S1 YY S2 ZZ S3.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a02a952b24cde480f657505c19068a07c">
		<apiName>AmPmSpaceBetween</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool AmPmSpaceBetween() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::AmPmSpaceBetween()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2267"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2782"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2790"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Tests whether or not a space is inserted between the time and the preceding or trailing am/pm text.</p>
				<p>True if a space is inserted between the time and am/pm text; false if not. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a6e39b907b4278b70e8276acc0b77dbb0">
		<apiName>SetAmPmSpaceBetween</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetAmPmSpaceBetween(TBool aSpace)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetAmPmSpaceBetween(TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSpace</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2268"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2795"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2803"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets whether a space is inserted between the time and the preceding or trailing am/pm text.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a4b55e7110ac25ddcb70b0da11a94c3aa">
		<apiName>AmPmSymbolPosition</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1acd123494d6ce4424811e451fcdc6dd87">TLocalePos</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TLocalePos AmPmSymbolPosition() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::AmPmSymbolPosition()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2269"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2760"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2766"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the am/pm text position (before or after the time value).</p>
				<p>The am/pm text position (0 before, 1 after). </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a834362165df0890e292a8b74ca3ce0ee">
		<apiName>SetAmPmSymbolPosition</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetAmPmSymbolPosition(TLocalePos aPos)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetAmPmSymbolPosition(TLocalePos)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1acd123494d6ce4424811e451fcdc6dd87">TLocalePos</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPos</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2270"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2771"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2777"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the am/pm text position (before or after the time value).</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a1e7ae2e398a81d22ad798c1ca08efd9f">
		<apiName>DaylightSaving</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TUint DaylightSaving() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::DaylightSaving()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2271"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2808"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2832"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the zones in which daylight saving is in effect.</p>
				<p>If daylight saving is in effect, one hour is added to the time.</p>
				<p>Use <xref href="class_t_locale.xml#class_t_locale_1af40bf33a5f2fb212471b77fe4befa3ca">TLocale::QueryHomeHasDaylightSavingOn()</xref> to find out whether daylight saving is in effect for the home city. This is because the daylight saving setting for the home city may differ from that of the zone in which home is located.</p>
				<p>A bit mask in which the three least significant bits are defined, indicating which of the three daylight saving zones are adjusted for daylight saving. These bits represent: Northern (non-European countries in the northern hemisphere), Southern (southern hemisphere), and European.</p>
				<p>
					<xref href="class_t_locale.xml#class_t_locale_1af40bf33a5f2fb212471b77fe4befa3ca">TLocale::QueryHomeHasDaylightSavingOn</xref> </p>
				<p>
					<xref href="_c_s___c_l_i_8_c_p_p.xml#_c_s___c_l_i_8_c_p_p_1aa5951ed7e98f801a4b5c313f162dbf68">TDaylightSavingZone</xref>
				</p>
				<p>Use the timezone server to retrieve information on timezones and DST. This method will always indicate that DST is inactive, in order to preserve compatibility. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1af40bf33a5f2fb212471b77fe4befa3ca">
		<apiName>QueryHomeHasDaylightSavingOn</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool QueryHomeHasDaylightSavingOn() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::QueryHomeHasDaylightSavingOn()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2272"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2837"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2847"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Tests whether or not daylight saving is set for the home city.</p>
				<p>True if home daylight saving is set; false if not.</p>
				<p>Use the timezone server to retrieve information on timezones and DST. This method will always indicate that DST is inactive, in order to preserve compatibility. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a8abe4e9c4cde8a8603daff1ca25b7309">
		<apiName>HomeDaylightSavingZone</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1aa5951ed7e98f801a4b5c313f162dbf68">TDaylightSavingZone</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TDaylightSavingZone HomeDaylightSavingZone() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::HomeDaylightSavingZone()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2273"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2852"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2860"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the daylight saving zone in which the home city is located.</p>
				<p>The daylight saving zone in which the home city is located.</p>
				<p>Use the timezone server to retrieve information on timezones and DST. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1af91a6f23bdbd40cbb9c78505bc8833ee">
		<apiName>WorkDays</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TUint WorkDays() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::WorkDays()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2274"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2865"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2874"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets a bit mask representing the days of the week which are considered as working days.</p>
				<p>A bit mask of seven bits indicating (by being set) which days are workdays. The least significant bit corresponds to Monday, the next bit to Tuesday and so on. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ac68649df740bcba8626f0767c32fb075">
		<apiName>SetWorkDays</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetWorkDays(TUint aMask)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetWorkDays(TUint)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMask</cxxFunctionParameterDeclarationName>
						<apiDefNote>A bit mask of seven bits indicating (by being set) which days are workdays. The least significant bit corresponds to Monday, the next bit is Tuesday and so on. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2275"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2879"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2887"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the days of the week which are considered as working days.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a5f435a0562b042e2a13b35419a88ad01">
		<apiName>StartOfWeek</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1c37187a417bb13dee025c0b9b3a1a08">TDay</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TDay StartOfWeek() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::StartOfWeek()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2276"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2892"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2898"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the day which is considered the first day of the week.</p>
				<p>The first day of the week. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a0e53207437da87f2dde37ad611a663df">
		<apiName>SetStartOfWeek</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetStartOfWeek(TDay aDay)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetStartOfWeek(TDay)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1c37187a417bb13dee025c0b9b3a1a08">TDay</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aDay</cxxFunctionParameterDeclarationName>
						<apiDefNote>The first day of the week. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2277"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2903"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2909"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the day which is considered to be the first day of the week.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ac32884950f0a96a23bb2791eab7bb19b">
		<apiName>ClockFormat</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a2e27f625533922464b37147e1869e0bb">TClockFormat</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TClockFormat ClockFormat() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::ClockFormat()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2278"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2914"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2920"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the clock display format.</p>
				<p>The clock display format. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ae500bc7788ddfd80caf7ae160b995d0c">
		<apiName>SetClockFormat</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetClockFormat(TClockFormat aFormat)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetClockFormat(TClockFormat)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a2e27f625533922464b37147e1869e0bb">TClockFormat</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFormat</cxxFunctionParameterDeclarationName>
						<apiDefNote>The clock display format. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2279"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2925"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2931"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the clock display format.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1aa5b96e5e3e3f90fdce48c7c750e9eb00">
		<apiName>UnitsGeneral</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1b932067bd7089994854e897081e6c89">TUnitsFormat</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TUnitsFormat UnitsGeneral() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::UnitsGeneral()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2280"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2936"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2945"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the general units of measurement.</p>
				<p>This function should be used when both short and long distances use the same units of measurement.</p>
				<p>General units of measurement. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a2d3f9d5b0e875b7c179b47234ea8c4d6">
		<apiName>SetUnitsGeneral</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetUnitsGeneral(TUnitsFormat aFormat)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetUnitsGeneral(TUnitsFormat)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1b932067bd7089994854e897081e6c89">TUnitsFormat</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFormat</cxxFunctionParameterDeclarationName>
						<apiDefNote>General units of measurement. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2281"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2950"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2958"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the general units of measurement. This function should be used when both short and long distances use the same units of measurement.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1acc4e8eb6a08d089d2674f87811273bc6">
		<apiName>UnitsDistanceShort</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1b932067bd7089994854e897081e6c89">TUnitsFormat</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TUnitsFormat UnitsDistanceShort() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::UnitsDistanceShort()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2282"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2963"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2972"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the units of measurement for short distances.</p>
				<p>Short distances are those which would normally be represented by either metres and centimetres or feet and inches.</p>
				<p>Units of measurement for short distances. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a3f54363402e665db79c7ed4c225b9d3b">
		<apiName>SetUnitsDistanceShort</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetUnitsDistanceShort(TUnitsFormat aFormat)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetUnitsDistanceShort(TUnitsFormat)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1b932067bd7089994854e897081e6c89">TUnitsFormat</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFormat</cxxFunctionParameterDeclarationName>
						<apiDefNote>Units of measurement for short distances. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2283"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2977"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2986"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the units of measurement for short distances.</p>
				<p>Short distances are those which would normally be represented by either metres and centimetres or feet and inches.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a6eb204ca170c508549cb475c2ff54543">
		<apiName>UnitsDistanceLong</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1b932067bd7089994854e897081e6c89">TUnitsFormat</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TUnitsFormat UnitsDistanceLong() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::UnitsDistanceLong()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2284"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2991"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3000"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the units of measurement for long distances.</p>
				<p>Long distances are those which would normally be represented by either miles or kilometres.</p>
				<p>Units of measurement for long distances. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a03362eeddf56ae6e7831ec8ea549ca97">
		<apiName>SetUnitsDistanceLong</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetUnitsDistanceLong(TUnitsFormat aFormat)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetUnitsDistanceLong(TUnitsFormat)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1b932067bd7089994854e897081e6c89">TUnitsFormat</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aFormat</cxxFunctionParameterDeclarationName>
						<apiDefNote>Units of measurement for long distances. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2285"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3005"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3014"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the units of measurement for long distances.</p>
				<p>Long distances are those which would normally be represented by either miles or kilometres.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a2f06abb41faa196b015a80f84473cec6">
		<apiName>NegativeCurrencyFormat</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_t_locale.xml#_1a833150c1cbdbf6474a1adf077afb2cdb">TNegativeCurrencyFormat</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TNegativeCurrencyFormat NegativeCurrencyFormat() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::NegativeCurrencyFormat()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2286"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3030"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3036"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the negative currency format.</p>
				<p>How negative currency values are formatted. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a92806b38f413d3d020594dba83973965">
		<apiName>SetNegativeCurrencyFormat</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetNegativeCurrencyFormat(TNegativeCurrencyFormat aNegativeCurrencyFormat)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetNegativeCurrencyFormat(TNegativeCurrencyFormat)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_locale.xml#_1a833150c1cbdbf6474a1adf077afb2cdb">TNegativeCurrencyFormat</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aNegativeCurrencyFormat</cxxFunctionParameterDeclarationName>
						<apiDefNote>How negative currency values are formatted. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2287"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3019"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3025"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the negative currency format.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a65761589f87bfbdb2f8107a70a4e48bb">
		<apiName>NegativeLoseSpace</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool NegativeLoseSpace() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::NegativeLoseSpace()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2288"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3041"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3054"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets whether negative currency values lose the space between the currency symbol and the value.</p>
				<p>True, if negative currency values lose the space between the value and the symbol; false, if not. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1aabf0d152684678bb355b43a285367bc7">
		<apiName>SetNegativeLoseSpace</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetNegativeLoseSpace(TBool aBool)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetNegativeLoseSpace(TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aBool</cxxFunctionParameterDeclarationName>
						<apiDefNote>ETrue to set a flag which indicates that negative currency values should lose the space between the value and the symbol. EFalse to unset it. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2289"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3059"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3072"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets whether negative currency values lose the space between the currency symbol and the value.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a4dd942b2ace1d5ce3b81c76e813ad4f1">
		<apiName>NegativeCurrencySymbolOpposite</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool NegativeCurrencySymbolOpposite() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::NegativeCurrencySymbolOpposite()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2290"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3077"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3094"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets whether in negative currency values, the position of the currency symbol is set to be the opposite of the position used for non-negative values (before or after the value, as set by <xref href="class_t_locale.xml#class_t_locale_1a6f7eab14255d32ca558e6910026e0de2">SetCurrencySymbolPosition()</xref>).</p>
				<p>True, if the currency symbol position for negative currency values is the opposite of the position set by <xref href="class_t_locale.xml#class_t_locale_1a6f7eab14255d32ca558e6910026e0de2">SetCurrencySymbolPosition()</xref>; false, otherwise.</p>
				<p>
					<xref href="class_t_locale.xml#class_t_locale_1a6f7eab14255d32ca558e6910026e0de2">TLocale::SetCurrencySymbolPosition</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a47472734deff3ae322f0bc6eaec7a4df">
		<apiName>SetNegativeCurrencySymbolOpposite</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetNegativeCurrencySymbolOpposite(TBool aBool)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetNegativeCurrencySymbolOpposite(TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aBool</cxxFunctionParameterDeclarationName>
						<apiDefNote>ETrue to set the position of the currency symbol in negative currency values to be the opposite of the position as set using SetCurrencySymbolPosition(). EFalse to leave the position unchanged.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2291"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3099"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3117"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets whether the position of the currency symbol for negative currency values should be the opposite of the position used for non-negative values (before or after the value, as set by <xref href="class_t_locale.xml#class_t_locale_1a6f7eab14255d32ca558e6910026e0de2">SetCurrencySymbolPosition()</xref>).</p>
				<p>
					<xref href="class_t_locale.xml#class_t_locale_1a6f7eab14255d32ca558e6910026e0de2">TLocale::SetCurrencySymbolPosition</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a41bff4c2f9a173add37a413ca684709c">
		<apiName>LanguageDowngrade</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1adabeb11ef4ed9a331e663f1f94bd3d18">TLanguage</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TLanguage LanguageDowngrade(TInt aIndex) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::LanguageDowngrade(TInt)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote>An index into the customisable part of the language downgrade path. Between zero and two inclusive.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2292"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3122"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3148"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the language that is stored at the specified index into the customisable part of the language downgrade path.</p>
				<p>The second, third and fourth languages in the language downgrade path can be customised. These can be enquired using this function. The first language in the path is always the language of the current locale, as returned by <xref href="class_user.xml#class_user_1aae9edf8c17c8052059815d42375944a0">User::Language()</xref>.</p>
				<p>The languages in the downgrade path are used in turn by the BaflUtils::NearestLanguageFile() function to find the best matching language-specific version of a language-neutral filename.</p>
				<p>The full language downgrade path can be retrieved using BaflUtils::GetDowngradePath().</p>
				<p>The language at the specified index.</p>
				<p>BaflUtils::NearestLanguageFile </p>
				<p>BaflUtils::GetDowngradePath </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a3dd429ced741a50920ad843e0552f320">
		<apiName>SetLanguageDowngrade</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetLanguageDowngrade(TInt aIndex, TLanguage aLanguage)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetLanguageDowngrade(TInt,TLanguage)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote>An index into the customisable part of the path at which to add the language, a value between zero and two. </apiDefNote>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1adabeb11ef4ed9a331e663f1f94bd3d18">TLanguage</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aLanguage</cxxFunctionParameterDeclarationName>
						<apiDefNote>The language to add. ELangNone is considered to be the last language in the path, no more will be searched, so can be used to specify that no language downgrade is required.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2293"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3153"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3169"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets a language in the customisable part of the language downgrade path.</p>
				<p>BaflUtils::NearestLanguageFile </p>
				<p>BaflUtils::GetDowngradePath </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a8d2d98fd97e0cea2228c7aee45e5fbf8">
		<apiName>DigitType</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a4ab56e1edb259ad1ae03c4e438e1cd3d">TDigitType</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TDigitType DigitType() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::DigitType()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2294"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3179"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3180"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the number mode stored in the locale.</p>
				<p>The number mode for the locale. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ae3b80e531f6f4f26322a7081c4b11429">
		<apiName>SetDigitType</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetDigitType(TDigitType aDigitType)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetDigitType(TDigitType)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a4ab56e1edb259ad1ae03c4e438e1cd3d">TDigitType</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aDigitType</cxxFunctionParameterDeclarationName>
						<apiDefNote>The number mode to be set. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2295"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3190"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3191"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the number mode for the locale.</p>
				<p/>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1ac239af7dfaa644796074109ef9633d20">
		<apiName>DeviceTime</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_t_locale.xml#_1a4f3eed560172549102a5e8707070168b">TDeviceTimeState</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TDeviceTimeState DeviceTime() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::DeviceTime()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2296"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3225"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3228"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the device time state.</p>
				<p>The device time state.</p>
				<p>Use the timezone server to coordinate automatic time adjustment. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a2cca8e010f17a0056092fe89dad63213">
		<apiName>SetDeviceTime</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetDeviceTime(TDeviceTimeState aState)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetDeviceTime(TDeviceTimeState)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_locale.xml#_1a4f3eed560172549102a5e8707070168b">TDeviceTimeState</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aState</cxxFunctionParameterDeclarationName>
						<apiDefNote>The device time state.</apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2297"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="3203"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="3206"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the device time state.</p>
				<p>Use the timezone server to coordinate automatic time adjustment. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a285faedb0c959e5920cfacb71992f8b2">
		<apiName>RegionCode</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TInt RegionCode() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::RegionCode()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2298"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2397"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2398"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_locale_1a37d307d4bcbd91662be4897371f690ea">
		<apiName>SetDefaults</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TLocale</cxxFunctionScopedName>
				<cxxFunctionPrototype>void SetDefaults()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TLocale::SetDefaults()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2300"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_t_locale_1a91de846deb9fe2883de8aa29b4d5f01f">
		<apiName>iCountryCode</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iCountryCode</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iCountryCode</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2305"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a666e24db43fa79604860a59af81963be">
		<apiName>iUniversalTimeOffset</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_time_interval_seconds.xml#class_t_time_interval_seconds">TTimeIntervalSeconds</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TTimeIntervalSeconds iUniversalTimeOffset</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iUniversalTimeOffset</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2306"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a2a4bd0c10c53be0150c2c9a5d5ff7034">
		<apiName>iDateFormat</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1abf1cfb4eb55a8ccf9e674e4212e2425c">TDateFormat</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TDateFormat iDateFormat</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iDateFormat</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2307"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1aad2b89fb24b5a2fb01b92e465aa2f725">
		<apiName>iTimeFormat</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a64affaf748f3623f951665ca6164cc57">TTimeFormat</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TTimeFormat iTimeFormat</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iTimeFormat</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2308"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a4662e1c0f5bda367dfbc4689040b3d87">
		<apiName>iCurrencySymbolPosition</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1acd123494d6ce4424811e451fcdc6dd87">TLocalePos</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TLocalePos iCurrencySymbolPosition</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iCurrencySymbolPosition</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2309"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a7d3a4faed6ee31f04571c7526c12b4d9">
		<apiName>iCurrencySpaceBetween</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TBool iCurrencySpaceBetween</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iCurrencySpaceBetween</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2310"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a33e39aa07c03c3204251b7c6ce70af11">
		<apiName>iCurrencyDecimalPlaces</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iCurrencyDecimalPlaces</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iCurrencyDecimalPlaces</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2311"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1ad6ef4d760f46f55993c272f0d5d32aa3">
		<apiName>iNegativeCurrencyFormat</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_locale.xml#_1a833150c1cbdbf6474a1adf077afb2cdb">TNegativeCurrencyFormat</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TNegativeCurrencyFormat iNegativeCurrencyFormat</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iNegativeCurrencyFormat</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2312"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1aaaa96ba2c3414f7a8afeb5b5109e735d">
		<apiName>iCurrencyTriadsAllowed</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TBool iCurrencyTriadsAllowed</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iCurrencyTriadsAllowed</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2313"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a726a284e92efca3f9dcf21d247bd1eeb">
		<apiName>iThousandsSeparator</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TChar iThousandsSeparator</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iThousandsSeparator</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2314"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a4193b301ab27115150bd837e6497a28c">
		<apiName>iDecimalSeparator</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TChar iDecimalSeparator</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iDecimalSeparator</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2315"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1ade61d3c3b03b774c028297f207789cb7">
		<apiName>iDateSeparator</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TChar iDateSeparator[KMaxDateSeparators]</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iDateSeparator</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2316"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1aec5cea46b6d027f648c0ffbcf8f42eda">
		<apiName>iTimeSeparator</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_char.xml#class_t_char">TChar</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TChar iTimeSeparator[KMaxTimeSeparators]</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iTimeSeparator</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2317"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a8b668c984b4d28f460a975efe6745d21">
		<apiName>iAmPmSymbolPosition</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1acd123494d6ce4424811e451fcdc6dd87">TLocalePos</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TLocalePos iAmPmSymbolPosition</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iAmPmSymbolPosition</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2318"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a53ffd33454c96afc36954b13b8c7a69c">
		<apiName>iAmPmSpaceBetween</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TBool iAmPmSpaceBetween</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iAmPmSpaceBetween</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2319"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a51ab895241d31d7aa6787ce6ee0c3d19">
		<apiName>iDaylightSaving</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iDaylightSaving</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iDaylightSaving</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2320"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a7cbb6bfd8d8b60867eaa97e5283649e7">
		<apiName>iHomeDaylightSavingZone</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1aa5951ed7e98f801a4b5c313f162dbf68">TDaylightSavingZone</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TDaylightSavingZone iHomeDaylightSavingZone</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iHomeDaylightSavingZone</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2321"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1ac951948c3d1f3e795072ad59e31ebeac">
		<apiName>iWorkDays</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iWorkDays</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iWorkDays</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2322"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a65cb29800b3d74b9e57047c94e6ce7b2">
		<apiName>iStartOfWeek</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1c37187a417bb13dee025c0b9b3a1a08">TDay</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TDay iStartOfWeek</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iStartOfWeek</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2323"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1ae3825a094b35e2cd029d2452b9fc0cfb">
		<apiName>iClockFormat</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a2e27f625533922464b37147e1869e0bb">TClockFormat</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TClockFormat iClockFormat</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iClockFormat</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2324"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a02bb03ce3aaf7ac09e1f95d08d8d8a0b">
		<apiName>iUnitsGeneral</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1b932067bd7089994854e897081e6c89">TUnitsFormat</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TUnitsFormat iUnitsGeneral</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iUnitsGeneral</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2325"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a59eb87dabcd60ece1800849bb4743959">
		<apiName>iUnitsDistanceShort</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1b932067bd7089994854e897081e6c89">TUnitsFormat</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TUnitsFormat iUnitsDistanceShort</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iUnitsDistanceShort</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2326"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a90b05deba38f2684d25155631b744d2f">
		<apiName>iUnitsDistanceLong</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a1b932067bd7089994854e897081e6c89">TUnitsFormat</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TUnitsFormat iUnitsDistanceLong</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iUnitsDistanceLong</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2327"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1aacf79206a91fee2d751aeae920464d32">
		<apiName>iExtraNegativeCurrencyFormatFlags</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iExtraNegativeCurrencyFormatFlags</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iExtraNegativeCurrencyFormatFlags</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2328"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a00cca565f4159a8f11ed22235981ec95">
		<apiName>iLanguageDowngrade</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a7c545c7b28f2e5d128d132d2ea1cdb2b">TUint16</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TUint16 iLanguageDowngrade[3]</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iLanguageDowngrade</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2329"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a7d9782f6b5d86b7d5efcf856b5e26cee">
		<apiName>iRegionCode</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a7c545c7b28f2e5d128d132d2ea1cdb2b">TUint16</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TUint16 iRegionCode</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iRegionCode</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2330"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a03a9294caf0a93a517446d8ae10344dc">
		<apiName>iDigitType</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a4ab56e1edb259ad1ae03c4e438e1cd3d">TDigitType</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TDigitType iDigitType</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iDigitType</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2331"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1a8e6ca646e4c894fa5b027b9ad25d2638">
		<apiName>iDeviceTimeState</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_locale.xml#_1a4f3eed560172549102a5e8707070168b">TDeviceTimeState</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TDeviceTimeState iDeviceTimeState</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iDeviceTimeState</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2332"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_locale_1aa7d3933ed050fe36bafc366c040422ea">
		<apiName>iSpare</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TLocale</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iSpare[0x1E]</cxxVariablePrototype>
				<cxxVariableNameLookup>TLocale::iSpare</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2333"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
</cxxClass>