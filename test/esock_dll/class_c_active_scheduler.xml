<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_c_active_scheduler">
	<apiName>CActiveScheduler</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassDerivations>
				<cxxClassDerivation>
					<cxxClassDerivationAccessSpecifier value="public"/>
					<cxxClassBaseClass href="class_c_base.xml#class_c_base">CBase</cxxClassBaseClass>
				</cxxClassDerivation>
			</cxxClassDerivations>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="2811"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/e32base.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="2783"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="2853"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Controls the handling of asynchronous requests as represented by active objects.</p>
			<p>An active scheduler is used to schedule the sequence in which active object request completion events are handled by a single event-handling thread.</p>
			<p>An active scheduler can be instantiated and used directly if either:</p>
			<p>
				<ul>
					<li>
						<p>the RunL() function of all of its active objects is guaranteed not to leave, or</p>
					</li>
				</ul>
			</p>
			<p>
				<ul>
					<li>
						<p>each of its active objects implements a suitable RunError() function to provide suitable cleanup</p>
					</li>
				</ul>
			</p>
			<p>If any of the active scheduler&apos;s active objects does not provide a RunError() function, then a <xref href="class_c_active_scheduler.xml#class_c_active_scheduler">CActiveScheduler</xref> derived class must be defined and an implementation of the <xref href="class_c_active_scheduler.xml#class_c_active_scheduler_1a6d3f55a0772c98d0cd2845a7c074b941">Error()</xref> function provided to perform the cleanup required.</p>
			<p>There is one active scheduler per thread and the static functions provided by the class always refer to the current active scheduler.</p>
			<p>
				<xref href="class_c_active_scheduler.xml#class_c_active_scheduler_1a6d3f55a0772c98d0cd2845a7c074b941">CActiveScheduler::Error</xref> </p>
			<p>
				<xref href="class_c_active.xml#class_c_active">CActive</xref> </p>
			<p>
				<xref href="class_c_active_scheduler_wait.xml#class_c_active_scheduler_wait">CActiveSchedulerWait</xref> </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxClassNested>
		<cxxClassNestedDetail>
			<cxxClassNestedClass href="class_c_active_scheduler_1_1_t_cleanup_bundle.xml#class_c_active_scheduler_1_1_t_cleanup_bundle">CActiveScheduler::TCleanupBundle</cxxClassNestedClass>
		</cxxClassNestedDetail>
	</cxxClassNested>
	<cxxTypedef id="class_c_active_scheduler_1ae8f60665c0785385bcd5e76ad744678a">
		<apiName>TLoopOwner</apiName>
		<cxxTypedefDetail>
			<cxxTypedefDefinition>
				<cxxTypedefAccessSpecifier value="public"/>
				<cxxTypedefDeclaredType>TLoop *</cxxTypedefDeclaredType>
				<cxxTypedefScopedName>CActiveScheduler</cxxTypedefScopedName>
				<cxxTypedefPrototype>TLoop * TLoopOwner</cxxTypedefPrototype>
				<cxxTypedefNameLookup>CActiveScheduler::TLoopOwner</cxxTypedefNameLookup>
				<cxxTypedefAPIItemLocation>
					<cxxTypedefDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxTypedefDeclarationFileLine name="lineNumber" value="2815"/>
				</cxxTypedefAPIItemLocation>
			</cxxTypedefDefinition>
			<apiDesc/>
		</cxxTypedefDetail>
	</cxxTypedef>
	<cxxFunction id="class_c_active_scheduler_1a3ffd8f570f68dc13c407e0a0efa0fc03">
		<apiName>CActiveScheduler</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C CActiveScheduler()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::CActiveScheduler()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2817"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1a4289327362215a920cd40f280d367b2d">
		<apiName>~CActiveScheduler</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDestructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C ~CActiveScheduler()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::~CActiveScheduler()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2818"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1a1b5d4b2552a7b550037200684acdae58">
		<apiName>Install</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C void Install(CActiveScheduler *aScheduler)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Install(CActiveScheduler *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_active_scheduler.xml#class_c_active_scheduler">CActiveScheduler</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aScheduler</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2819"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1af52c8ce6e00067860acff04a9afe7599">
		<apiName>Current</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_c_active_scheduler.xml#class_c_active_scheduler">CActiveScheduler</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C CActiveScheduler * Current()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Current()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2820"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1abd8c8b82a82311c38731445ce8d4ed20">
		<apiName>Add</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C void Add(CActive *aActive)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Add(CActive *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_active.xml#class_c_active">CActive</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aActive</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2821"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1a71f4452eae5e178915987c6d1a428972">
		<apiName>Start</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C void Start()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Start()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2822"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1aa8f8b2f11a406a8cf4543803096253fa">
		<apiName>Stop</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C void Stop()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Stop()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2823"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1a3e1d23f5f79324c242364294c7c5c956">
		<apiName>RunIfReady</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C TBool RunIfReady(TInt &amp;aError, TInt aMinimumPriority)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::RunIfReady(TInt &amp;,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aError</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMinimumPriority</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2824"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1acb60d083d67196d6bdba93b8f691b8fd">
		<apiName>Replace</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_c_active_scheduler.xml#class_c_active_scheduler">CActiveScheduler</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C CActiveScheduler * Replace(CActiveScheduler *aNewActiveScheduler)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Replace(CActiveScheduler *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_active_scheduler.xml#class_c_active_scheduler">CActiveScheduler</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aNewActiveScheduler</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2825"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1af43f6899a3a1a6b6cb040a4f2bbb40f9">
		<apiName>WaitForAnyRequest</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C void WaitForAnyRequest()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::WaitForAnyRequest()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2826"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1a6d3f55a0772c98d0cd2845a7c074b941">
		<apiName>Error</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C void Error(TInt aError) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Error(TInt)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aError</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2827"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1ae926ad8146995aa66ff63d063c578ecb">
		<apiName>Halt</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Halt(TInt aExitCode) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Halt(TInt)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aExitCode</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2828"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1acf6c864c980a140db0d5f19c64efc418">
		<apiName>StackDepth</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt StackDepth() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::StackDepth()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2829"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1ae42f81c77aa93508bf6eb3e6440b99b4">
		<apiName>Start</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>static void Start(TLoopOwner *aOwner)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Start(TLoopOwner *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_active_scheduler.xml#_1ae8f60665c0785385bcd5e76ad744678a">TLoopOwner</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOwner</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2838"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1acff9247d764ab25c6e398df3a9572529">
		<apiName>OnStarting</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C void OnStarting()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::OnStarting()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2839"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1a73f2fb47aed8c115ce044627938397b6">
		<apiName>OnStopping</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C void OnStopping()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::OnStopping()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2840"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1aebc4d808f46584753f914ad83acd8012">
		<apiName>Reserved_1</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C void Reserved_1()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Reserved_1()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2841"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1a350c11d4a84263f5019588131f02d6bd">
		<apiName>Reserved_2</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C void Reserved_2()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Reserved_2()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2842"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1a01209733327f1aeaa924009f66adaed9">
		<apiName>Run</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>void Run(TLoopOwner *const volatile &amp;aLoop)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Run(TLoopOwner *const volatile &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_active_scheduler.xml#_1ae8f60665c0785385bcd5e76ad744678a">TLoopOwner</apiRelation> *const volatile &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aLoop</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2843"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1ace2570ba4fc69df2c2f0c35b10ab7433">
		<apiName>DoRunL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>void DoRunL(TLoopOwner *const volatile &amp;aLoop, CActive *volatile &amp;aCurrentObj, TCleanupBundle *aCleanupBundle)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::DoRunL(TLoopOwner *const volatile &amp;,CActive *volatile &amp;,TCleanupBundle *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_active_scheduler.xml#_1ae8f60665c0785385bcd5e76ad744678a">TLoopOwner</apiRelation> *const volatile &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aLoop</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_active.xml#class_c_active">CActive</apiRelation> *volatile &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aCurrentObj</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_c_active_scheduler_1_1_t_cleanup_bundle.xml#class_c_active_scheduler_1_1_t_cleanup_bundle">TCleanupBundle</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aCleanupBundle</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2844"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1a54a3136142b18e5e8a7ff5bd6e084db3">
		<apiName>Extension_</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionVirtual/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>virtual IMPORT_C TInt Extension_(TUint aExtensionId, TAny *&amp;a0, TAny *a1)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Extension_(TUint,TAny *&amp;,TAny *)</cxxFunctionNameLookup>
				<cxxFunctionReimplemented href="class_c_base.xml#class_c_base_1aae681a54d9c9b10c7d42e7e32ff109d5">CBase::Extension_(TUint,TAny *&amp;,TAny *)</cxxFunctionReimplemented>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aExtensionId</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *&amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>a0</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>a1</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2846"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_c_active_scheduler_1a125575265b5cfa9a52eb0b7486becbb5">
		<apiName>Level</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>CActiveScheduler</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TInt Level() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>CActiveScheduler::Level()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2848"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="2727"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="2737"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Use the <xref href="class_c_active_scheduler.xml#class_c_active_scheduler_1acf6c864c980a140db0d5f19c64efc418">StackDepth()</xref> function instead.</p>
				<p>Gets the scheduler&apos;s level of nestedness.</p>
				<p>The level of nestedness.</p>
				<p>
					<xref href="class_c_active_scheduler.xml#class_c_active_scheduler_1acf6c864c980a140db0d5f19c64efc418">StackDepth()</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_c_active_scheduler_1a65f9a37c823f77cc74029ba35d56633d">
		<apiName>iStack</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>TLoop *</cxxVariableDeclaredType>
				<cxxVariableScopedName>CActiveScheduler</cxxVariableScopedName>
				<cxxVariablePrototype>TLoop * iStack</cxxVariablePrototype>
				<cxxVariableNameLookup>CActiveScheduler::iStack</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2850"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_c_active_scheduler_1a12a8fc28ed414fc081cd9c1791a03be9">
		<apiName>iActiveQ</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="class_t_pri_que.xml#class_t_pri_que">TPriQue</apiRelation>&lt; <apiRelation href="class_c_active.xml#class_c_active">CActive</apiRelation> &gt;</cxxVariableDeclaredType>
				<cxxVariableScopedName>CActiveScheduler</cxxVariableScopedName>
				<cxxVariablePrototype>TPriQue&lt; CActive &gt; iActiveQ</cxxVariablePrototype>
				<cxxVariableNameLookup>CActiveScheduler::iActiveQ</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2851"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_c_active_scheduler_1a6e56550ccf57847cc50ca13ee4194695">
		<apiName>iSpare</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxVariableDeclaredType>
				<cxxVariableScopedName>CActiveScheduler</cxxVariableScopedName>
				<cxxVariablePrototype>TAny * iSpare</cxxVariablePrototype>
				<cxxVariableNameLookup>CActiveScheduler::iSpare</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32base.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2852"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxClassInherits>
		<cxxClassInheritsDetail>
			<cxxClassFunctionInherited href="class_c_active_scheduler.xml#class_c_base_1a240de7932690a4e987d75690b0b6f82b">CBase::CBase()</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_active_scheduler.xml#class_c_base_1ac0a06aeab68b3e01be81f9dd79e011c6">CBase::Delete(CBase *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_active_scheduler.xml#class_c_base_1af4c4965092a763b0856ccbfa3cf99eaf">CBase::operator new(TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_active_scheduler.xml#class_c_base_1ab9e5f557dea4db22886189926687ddc1">CBase::operator new(TUint,TAny *)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_active_scheduler.xml#class_c_base_1aa464dd21494443ac109084ed03b81f28">CBase::operator new(TUint,TLeave)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_active_scheduler.xml#class_c_base_1af8429815362d4df6fecd47179e0c5dfe">CBase::operator new(TUint,TLeave,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_active_scheduler.xml#class_c_base_1a80505bdf8b1b20a2ed102307a78eeeeb">CBase::operator new(TUint,TUint)</cxxClassFunctionInherited>
			<cxxClassFunctionInherited href="class_c_active_scheduler.xml#class_c_base_1a1390361b94424be22bb2b1020eb400ea">CBase::~CBase()</cxxClassFunctionInherited>
		</cxxClassInheritsDetail>
	</cxxClassInherits>
</cxxClass>