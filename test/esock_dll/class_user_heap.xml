<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_user_heap">
	<apiName>UserHeap</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="3616"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="3615"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="3642"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>A set of static functions for constructing fixed length heaps and local or global heaps.</p>
			<p>
				<xref href="class_r_heap.xml#class_r_heap">RHeap</xref> </p>
			<p>
				<xref href="class_r_chunk.xml#class_r_chunk">RChunk</xref> </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxEnumeration id="class_user_heap_1ad1c5a11d391d29107d8e46c1335727ce">
		<apiName>TChunkHeapCreateMode</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="public"/>
				<cxxEnumerationScopedName>UserHeap</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>TChunkHeapCreateMode</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>UserHeap:TChunkHeapCreateMode</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="class_user_heap_1ad1c5a11d391d29107d8e46c1335727ceae41dd582a47cd2e16d20fbd8115c2dbe">
						<apiName>EChunkHeapSwitchTo</apiName>
						<cxxEnumeratorScopedName>UserHeap</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EChunkHeapSwitchTo = 0x1</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>UserHeap::EChunkHeapSwitchTo</cxxEnumeratorNameLookup>
						<cxxEnumeratorInitialiser value="0x1"/>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3626"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>On successful creation of the heap this switches the calling thread to use the new heap. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="class_user_heap_1ad1c5a11d391d29107d8e46c1335727ceaf3c9235eaf17bb826085ea00d9a8b66f">
						<apiName>EChunkHeapDuplicate</apiName>
						<cxxEnumeratorScopedName>UserHeap</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EChunkHeapDuplicate = 0x2</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>UserHeap::EChunkHeapDuplicate</cxxEnumeratorNameLookup>
						<cxxEnumeratorInitialiser value="0x2"/>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3630"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>On successful creation of the heap this causes the handle to the heap to be duplicated. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="class_user_heap_1ad1c5a11d391d29107d8e46c1335727cea28a5cb2d50f058f3b0023fdf7a2f0327">
						<apiName>EChunkHeapMask</apiName>
						<cxxEnumeratorScopedName>UserHeap</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EChunkHeapMask = EChunkHeapSwitchTo | EChunkHeapDuplicate</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>UserHeap::EChunkHeapMask</cxxEnumeratorNameLookup>
						<cxxEnumeratorInitialiser value="EChunkHeapSwitchTo | EChunkHeapDuplicate"/>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3633"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc/>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="3622"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="3621"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="3634"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc>
				<p>Flags to control the heap creation. </p>
			</apiDesc>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxFunction id="class_user_heap_1a618cd45caa53dff47dffe655d418f23e">
		<apiName>FixedHeap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_r_heap.xml#class_r_heap">RHeap</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>UserHeap</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C RHeap * FixedHeap(TAny *aBase, TInt aMaxLength, TInt aAlign=0, TBool aSingleThread=ETrue)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>UserHeap::FixedHeap(TAny *,TInt,TInt,TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aBase</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxLength</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAlign</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>0</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSingleThread</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>ETrue</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3635"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_user_heap_1a5172b3dca9c281080f48e4bdce7ec621">
		<apiName>ChunkHeap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_r_heap.xml#class_r_heap">RHeap</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>UserHeap</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C RHeap * ChunkHeap(const TDesC *aName, TInt aMinLength, TInt aMaxLength, TInt aGrowBy=1, TInt aAlign=0, TBool aSingleThread=EFalse)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>UserHeap::ChunkHeap(const TDesC *,TInt,TInt,TInt,TInt,TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMinLength</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxLength</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aGrowBy</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>1</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAlign</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>0</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSingleThread</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>EFalse</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3636"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_user_heap_1acdd16cd76b99757a20f0d67ed91ec6b4">
		<apiName>ChunkHeap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_r_heap.xml#class_r_heap">RHeap</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>UserHeap</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C RHeap * ChunkHeap(RChunk aChunk, TInt aMinLength, TInt aGrowBy=1, TInt aMaxLength=0, TInt aAlign=0, TBool aSingleThread=EFalse, TUint32 aMode=0)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>UserHeap::ChunkHeap(RChunk,TInt,TInt,TInt,TInt,TBool,TUint32)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_r_chunk.xml#class_r_chunk">RChunk</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aChunk</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMinLength</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aGrowBy</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>1</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxLength</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>0</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAlign</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>0</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSingleThread</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>EFalse</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a8240e11f17c80b6b222fc2af50234da4">TUint32</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMode</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>0</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3637"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_user_heap_1a1cc801b9102fd819b50b306ee5e7528f">
		<apiName>OffsetChunkHeap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_r_heap.xml#class_r_heap">RHeap</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>UserHeap</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C RHeap * OffsetChunkHeap(RChunk aChunk, TInt aMinLength, TInt aOffset, TInt aGrowBy=1, TInt aMaxLength=0, TInt aAlign=0, TBool aSingleThread=EFalse, TUint32 aMode=0)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>UserHeap::OffsetChunkHeap(RChunk,TInt,TInt,TInt,TInt,TInt,TBool,TUint32)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_r_chunk.xml#class_r_chunk">RChunk</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aChunk</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMinLength</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOffset</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aGrowBy</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>1</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxLength</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>0</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAlign</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>0</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSingleThread</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>EFalse</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a8240e11f17c80b6b222fc2af50234da4">TUint32</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMode</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>0</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3638"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_user_heap_1ad4d276bff505fec0d232912c56bf1562">
		<apiName>ChunkHeap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_r_heap.xml#class_r_heap">RHeap</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>UserHeap</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C RHeap * ChunkHeap(const TChunkHeapCreateInfo &amp;aCreateInfo)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>UserHeap::ChunkHeap(const TChunkHeapCreateInfo &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_t_chunk_heap_create_info.xml#struct_t_chunk_heap_create_info">TChunkHeapCreateInfo</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aCreateInfo</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3639"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_user_heap_1aee465a1ede4329c6aa4b7fe94c11a814">
		<apiName>SetupThreadHeap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>UserHeap</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C TInt SetupThreadHeap(TBool aNotFirst, SStdEpocThreadCreateInfo &amp;aInfo)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>UserHeap::SetupThreadHeap(TBool,SStdEpocThreadCreateInfo &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aNotFirst</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>SStdEpocThreadCreateInfo &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInfo</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3640"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_user_heap_1ac63450ba4c10d783c91153232095e1b9">
		<apiName>CreateThreadHeap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>UserHeap</cxxFunctionScopedName>
				<cxxFunctionPrototype>static IMPORT_C TInt CreateThreadHeap(SStdEpocThreadCreateInfo &amp;aInfo, RHeap *&amp;aHeap, TInt aAlign=0, TBool aSingleThread=EFalse)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>UserHeap::CreateThreadHeap(SStdEpocThreadCreateInfo &amp;,RHeap *&amp;,TInt,TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>SStdEpocThreadCreateInfo &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInfo</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_r_heap.xml#class_r_heap">RHeap</apiRelation> *&amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aHeap</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAlign</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>0</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSingleThread</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>EFalse</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3641"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
</cxxClass>