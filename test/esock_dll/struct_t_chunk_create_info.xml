<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxStruct PUBLIC "-//NOKIA//DTD DITA C++ API Struct Reference Type v0.5.0//EN" "dtd/cxxStruct.dtd" >
<cxxStruct id="struct_t_chunk_create_info">
	<apiName>TChunkCreateInfo</apiName>
	<cxxStructDetail>
		<cxxStructDefinition>
			<cxxStructAccessSpecifier value="public"/>
			<cxxStructAPIItemLocation>
				<cxxStructDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxStructDeclarationFileLine name="lineNumber" value="3417"/>
				<cxxStructDefinitionFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxStructDefinitionFileLineStart name="lineNumber" value="3416"/>
				<cxxStructDefinitionFileLineEnd name="lineNumber" value="3511"/>
			</cxxStructAPIItemLocation>
		</cxxStructDefinition>
		<apiDesc>
			<p>This structure specifies the type and properties of the chunk to be created. It is passed as a parameter to the <xref href="class_r_chunk.xml#class_r_chunk_1acef08f74f113aeda4d05c32e060d9e7d">RChunk::Create()</xref> method.</p>
		</apiDesc>
	</cxxStructDetail>
	<cxxEnumeration id="struct_t_chunk_create_info_1afaf2c3ab46059d0ee96cc50d0d18bfab">
		<apiName>TChunkCreateVersions</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="public"/>
				<cxxEnumerationScopedName>TChunkCreateInfo</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>TChunkCreateVersions</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>TChunkCreateInfo:TChunkCreateVersions</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="struct_t_chunk_create_info_1afaf2c3ab46059d0ee96cc50d0d18bfabaf76cb63893d6b7919c2003d7fd10b3ad">
						<apiName>EVersion0</apiName>
						<cxxEnumeratorScopedName>TChunkCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EVersion0</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TChunkCreateInfo::EVersion0</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3425"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc/>
					</cxxEnumerator>
					<cxxEnumerator id="struct_t_chunk_create_info_1afaf2c3ab46059d0ee96cc50d0d18bfaba73e963751a9f748847a93bc63fbaa3d9">
						<apiName>ESupportedVersions</apiName>
						<cxxEnumeratorScopedName>TChunkCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>ESupportedVersions</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TChunkCreateInfo::ESupportedVersions</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3426"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc/>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="3424"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="3423"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="3427"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc>
				<p>Currently supported version numbers  </p>
			</apiDesc>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxEnumeration id="struct_t_chunk_create_info_1a21e8f1d1071f6cb92203f897b632e5c4">
		<apiName>TChunkPagingAtt</apiName>
		<cxxEnumerationDetail>
			<cxxEnumerationDefinition>
				<cxxEnumerationAccessSpecifier value="public"/>
				<cxxEnumerationScopedName>TChunkCreateInfo</cxxEnumerationScopedName>
				<cxxEnumerationPrototype>TChunkPagingAtt</cxxEnumerationPrototype>
				<cxxEnumerationNameLookup>TChunkCreateInfo:TChunkPagingAtt</cxxEnumerationNameLookup>
				<cxxEnumerators>
					<cxxEnumerator id="struct_t_chunk_create_info_1a21e8f1d1071f6cb92203f897b632e5c4a54758115e610133a2a286fff7289f25c">
						<apiName>EUnspecified</apiName>
						<cxxEnumeratorScopedName>TChunkCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EUnspecified</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TChunkCreateInfo::EUnspecified</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3436"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>The chunk will use the creating process&apos;s paging attributes. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="struct_t_chunk_create_info_1a21e8f1d1071f6cb92203f897b632e5c4ae115daadad32bec1758826903e63182a">
						<apiName>EPaged</apiName>
						<cxxEnumeratorScopedName>TChunkCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EPaged</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TChunkCreateInfo::EPaged</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3437"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>The chunk will be data paged. </p>
						</apiDesc>
					</cxxEnumerator>
					<cxxEnumerator id="struct_t_chunk_create_info_1a21e8f1d1071f6cb92203f897b632e5c4a22dae27dd9d9afaca85e4c585fc3a9ab">
						<apiName>EUnpaged</apiName>
						<cxxEnumeratorScopedName>TChunkCreateInfo</cxxEnumeratorScopedName>
						<cxxEnumeratorPrototype>EUnpaged</cxxEnumeratorPrototype>
						<cxxEnumeratorNameLookup>TChunkCreateInfo::EUnpaged</cxxEnumeratorNameLookup>
						<cxxEnumeratorAPIItemLocation>
							<cxxEnumeratorDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
							<cxxEnumeratorDeclarationFileLine name="lineNumber" value="3438"/>
						</cxxEnumeratorAPIItemLocation>
						<apiDesc>
							<p>The chunk will not be data paged. </p>
						</apiDesc>
					</cxxEnumerator>
				</cxxEnumerators>
				<cxxEnumerationAPIItemLocation>
					<cxxEnumerationDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxEnumerationDeclarationFileLine name="lineNumber" value="3435"/>
					<cxxEnumerationDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxEnumerationDefinitionFileLineStart name="lineNumber" value="3434"/>
					<cxxEnumerationDefinitionFileLineEnd name="lineNumber" value="3439"/>
				</cxxEnumerationAPIItemLocation>
			</cxxEnumerationDefinition>
			<apiDesc>
				<p>Attributes that specify whether the chunk to be created is data paged or not. </p>
			</apiDesc>
		</cxxEnumerationDetail>
	</cxxEnumeration>
	<cxxFunction id="struct_t_chunk_create_info_1aebe2027cd86a4aa6d387fcca14e64634">
		<apiName>TChunkCreateInfo</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TChunkCreateInfo()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::TChunkCreateInfo()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3441"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1a99f8ea265a14a96e29e1b893eade695c">
		<apiName>SetNormal</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetNormal(TInt aInitialSize, TInt aMaxSize)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetNormal(TInt,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInitialSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3442"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1a8d744a2f4c344ff452be1b1aebb5e3a6">
		<apiName>SetCode</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetCode(TInt aInitialSize, TInt aMaxSize)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetCode(TInt,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInitialSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3443"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1ad03b80b22867310e2f7500c6c83a164e">
		<apiName>SetDoubleEnded</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetDoubleEnded(TInt aInitialBottom, TInt aInitialTop, TInt aMaxSize)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetDoubleEnded(TInt,TInt,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInitialBottom</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInitialTop</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3444"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1af7b24e943bab888d1760ddf49bbcff35">
		<apiName>SetDisconnected</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetDisconnected(TInt aInitialBottom, TInt aInitialTop, TInt aMaxSize)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetDisconnected(TInt,TInt,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInitialBottom</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInitialTop</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3445"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1a708727ba9c695046c8baa2436affe1fc">
		<apiName>SetOwner</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetOwner(TOwnerType aType)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetOwner(TOwnerType)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a68a23fa0195efd67397df339a83a5a86">TOwnerType</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aType</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3446"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1a1c6b56d70ecfcac0eb2b4e88e349c7ab">
		<apiName>SetGlobal</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetGlobal(const TDesC &amp;aName)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetGlobal(const TDesC &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3447"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1ab149c683cc50ecedf349a15aa16f00d4">
		<apiName>SetClearByte</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetClearByte(TUint8 aClearByte)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetClearByte(TUint8)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1aae4399ce3f10d6c2b5ec96a13bbb5881">TUint8</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aClearByte</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3448"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1a772d495dcb14348a272b539f6c03f381">
		<apiName>SetPaging</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetPaging(const TChunkPagingAtt aPaging)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetPaging(const TChunkPagingAtt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_t_chunk_create_info.xml#_1a21e8f1d1071f6cb92203f897b632e5c4">TChunkPagingAtt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPaging</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3449"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1a47f1fae2c395567bd6d7929f086f90df">
		<apiName>SetReadOnly</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetReadOnly()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetReadOnly()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3450"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1ab0ea38dd59c07a7e7d25061f725d9cc0">
		<apiName>SetThreadHeap</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>void SetThreadHeap(TInt aInitialSize, TInt aMaxSize, const TDesC &amp;aName)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetThreadHeap(TInt,TInt,const TDesC &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aInitialSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aName</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3451"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="struct_t_chunk_create_info_1a68e546b05e7c7e6e218a360fd222f3ab">
		<apiName>SetCache</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TChunkCreateInfo</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SetCache(TInt aMaxSize)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TChunkCreateInfo::SetCache(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aMaxSize</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="3457"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>For use by file server only.  </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="struct_t_chunk_create_info_1a201e3c06a40e65cb2ae8b5a1e584fcea">
		<apiName>iVersionNumber</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iVersionNumber</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iVersionNumber</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3462"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The version number of this <xref href="struct_t_chunk_create_info.xml#struct_t_chunk_create_info">TChunkCreateInfo</xref>.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1a8ba8772178531e50214bec424ff2e3ca">
		<apiName>iType</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iType</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iType</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3466"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The type of the chunk to be created.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1a3634de93d7c26889ea1c03865e8607af">
		<apiName>iGlobal</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TBool iGlobal</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iGlobal</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3470"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>Specify if chunk is global or not.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1ab84e6077f99e581d5aad4aa8e5ef41af">
		<apiName>iMaxSize</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iMaxSize</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iMaxSize</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3474"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The maximum size in bytes of the chunk to be created.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1ade9f1fb414bb8f13c6bd90b39a528dab">
		<apiName>iOwnerType</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="_c_s___c_l_i_8_c_p_p.xml#_1a68a23fa0195efd67397df339a83a5a86">TOwnerType</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TOwnerType iOwnerType</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iOwnerType</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3479"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>An enumeration whose enumerators define the ownership of this chunk handle. If not explicitly specified, EOwnerProcess is taken as default.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1abbfe06d9ed07bc8484724b804fd3c2df">
		<apiName>iName</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>const <apiRelation href="class_t_des_c16.xml#class_t_des_c16">TDesC</apiRelation> *</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>const TDesC * iName</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iName</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3485"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>A pointer to a descriptor containing the name to be assigned to global chunks. The length of the descriptor must be no greater than that allowed for a TKName type. Must be NULL for local chunks.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1a5f676369fe3fe279c80768556bee0ce3">
		<apiName>iInitialBottom</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iInitialBottom</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iInitialBottom</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3491"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The offset of the bottom of the region to commit to the chunk on creation from the base of the chunk&apos;s reserved region. This is only used for double ended and disconnected chunks.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1ab9bd657e41e71ea8a011900fe06257b3">
		<apiName>iInitialTop</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iInitialTop</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iInitialTop</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3497"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The offset of the top of the region to commit to the chunk on creation from the base of the chunk&apos;s reserved region. This is only used for double ended and disconnected chunks.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1a78af0b24fb3296db52da878f67cd01b0">
		<apiName>iAttributes</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iAttributes</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iAttributes</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3502"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>Attributes to the chunk to be created should have. Should be set from one or more the values in TChunkCreate::TChunkCreateAtt.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1a4e9ee810b4c85f4134a3057c8678eb99">
		<apiName>iClearByte</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1aae4399ce3f10d6c2b5ec96a13bbb5881">TUint8</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint8 iClearByte</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iClearByte</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3506"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc>
				<p>The byte to clear all the memory committed to the chunk to.  </p>
			</apiDesc>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1aa426d7482198c3b5aa8786331480f3c6">
		<apiName>iSpare1</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1aae4399ce3f10d6c2b5ec96a13bbb5881">TUint8</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint8 iSpare1[3]</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iSpare1</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3508"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="struct_t_chunk_create_info_1abb5a6176c47f721a6f80fd1041f62784">
		<apiName>iSpare2</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1acdfcd7c66db8ed1b8dfefd71c9542d42">TUint</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TChunkCreateInfo</cxxVariableScopedName>
				<cxxVariablePrototype>TUint iSpare2</cxxVariablePrototype>
				<cxxVariableNameLookup>TChunkCreateInfo::iSpare2</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="3510"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
</cxxStruct>