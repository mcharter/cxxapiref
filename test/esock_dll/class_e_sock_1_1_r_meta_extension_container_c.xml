<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_e_sock_1_1_r_meta_extension_container_c">
	<apiName>ESock::RMetaExtensionContainerC</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="60"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="59"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="124"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Represents a read only meta extension container.</p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_c_1ae853b2c4414a0288034fdf0181d091e0">
		<apiName>RMetaExtensionContainerC</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainerC</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C RMetaExtensionContainerC()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainerC::RMetaExtensionContainerC()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="70"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Default c&apos;tor. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_c_1ab27ffad4550a56c4f6725042eb25e800">
		<apiName>~RMetaExtensionContainerC</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDestructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainerC</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C ~RMetaExtensionContainerC()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainerC::~RMetaExtensionContainerC()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="75"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>D&apos;tor </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_c_1a84414441e1d001dc185616e060f0d1ee">
		<apiName>Open</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainerC</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Open(const RMetaExtensionContainerC &amp;aSource)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainerC::Open(const RMetaExtensionContainerC &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_e_sock_1_1_r_meta_extension_container_c.xml#class_e_sock_1_1_r_meta_extension_container_c">RMetaExtensionContainerC</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSource</cxxFunctionParameterDeclarationName>
						<apiDefNote>Container to open this instance against. A reference will be automatically added to the source container. </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="81"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Opens a reference against a specific container. This <xref href="class_e_sock_1_1_r_meta_extension_container_c.xml#class_e_sock_1_1_r_meta_extension_container_c">RMetaExtensionContainerC</xref> must not be open already. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_c_1af522a8f2c3ed2ccaa7161f433a09401f">
		<apiName>Close</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainerC</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Close()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainerC::Close()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="86"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Releases a reference to the underlying container implementation </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_c_1a38cb30754c807ebdd87b54763acf8aa2">
		<apiName>FindExtension</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C const <apiRelation href="struct_meta_1_1_s_meta_data.xml#struct_meta_1_1_s_meta_data">Meta::SMetaData</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainerC</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C const Meta::SMetaData * FindExtension(const Meta::STypeId &amp;aTypeId) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainerC::FindExtension(const Meta::STypeId &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_meta_1_1_s_type_id.xml#struct_meta_1_1_s_type_id">Meta::STypeId</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aTypeId</cxxFunctionParameterDeclarationName>
						<apiDefNote>The STypeId of the meta extension to find </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="93"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Finds the extension specified within the container A pointer to the meta extension or NULL if it wasn&apos;t found </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_c_1a0ce8a7859cc40943f01e499b2bdba92b">
		<apiName>FindExtensionL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C const <apiRelation href="struct_meta_1_1_s_meta_data.xml#struct_meta_1_1_s_meta_data">Meta::SMetaData</apiRelation> &amp;</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainerC</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C const Meta::SMetaData &amp; FindExtensionL(const Meta::STypeId &amp;aTypeId) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainerC::FindExtensionL(const Meta::STypeId &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="struct_meta_1_1_s_type_id.xml#struct_meta_1_1_s_type_id">Meta::STypeId</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aTypeId</cxxFunctionParameterDeclarationName>
						<apiDefNote>The STypeId of the meta extension to find </apiDefNote>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="101"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Finds the extension specified within the container A reference to the meta extension </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_c_1a2c09079c06452c924a9cacea96ecc1d1">
		<apiName>Open</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainerC</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Open()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainerC::Open()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="107"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Opens an additional reference to the underlying container implementation. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_c_1a3f069da8431e278ecc3770de357be01f">
		<apiName>Container</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>CMetaExtensionContainerImplBase *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainerC</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline CMetaExtensionContainerImplBase * Container() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainerC::Container()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="113"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_connectionserv.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="240"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="243"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Returns a pointer to the container implementation being represented by this interface </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_e_sock_1_1_r_meta_extension_container_c_1a5adb5a6ed9295d9fed17fcfd3bd0a521">
		<apiName>SetContainer</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>ESock::RMetaExtensionContainerC</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void SetContainer(CMetaExtensionContainerImplBase *aContainer)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>ESock::RMetaExtensionContainerC::SetContainer(CMetaExtensionContainerImplBase *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>CMetaExtensionContainerImplBase *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aContainer</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="119"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_connectionserv.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="249"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="253"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Sets the initial container implementation to be represented by this interface </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_e_sock_1_1_r_meta_extension_container_c_1a5f273f8afe4d9e6fc0ae627c6190eff8">
		<apiName>iContainerImpl</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="private"/>
				<cxxVariableStorageClassSpecifierMutable/>
				<cxxVariableDeclaredType>CMetaExtensionContainerImplBase *</cxxVariableDeclaredType>
				<cxxVariableScopedName>ESock::RMetaExtensionContainerC</cxxVariableScopedName>
				<cxxVariablePrototype>CMetaExtensionContainerImplBase * iContainerImpl</cxxVariablePrototype>
				<cxxVariableNameLookup>ESock::RMetaExtensionContainerC::iContainerImpl</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/comms-infras/ss_rmetaextensioncontainer.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="123"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
</cxxClass>