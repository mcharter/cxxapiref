<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_t_internalizer">
	<apiName>TInternalizer</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/s32strm.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="228"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/s32strm.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="227"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="234"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>A family of classes whose instances can be used to perform internalisation on behalf of other objects. </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_t_internalizer_1a22d0f4b806874588ab881033b48f7ec0">
		<apiName>operator()</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TInternalizer</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline void operator()(T &amp;anObject, RReadStream &amp;aStream) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TInternalizer::operator()(T &amp;,RReadStream &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>T &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>anObject</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_r_read_stream.xml#class_r_read_stream">RReadStream</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStream</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32strm.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="230"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_subconn.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="184"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="185"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_internalizer_1ae181592a4f83231a98dbc944dda01a49">
		<apiName>Function</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="s32strm_8h.xml#_1abe5bf5c5b969380cb97319079541c155">TInternalizeFunction</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TInternalizer</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline static TInternalizeFunction Function()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TInternalizer::Function()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32strm.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="231"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_subconn.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="187"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="193"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets a pointer to the function to be used to perform internalisation.</p>
				<p>The implementation is the private, static member of this class, <xref href="class_t_internalizer.xml#class_t_internalizer_1a8faa25c5244cf5c5b72330bcac74770d">InternalizeAsL()</xref>.</p>
				<p>The internalisation function. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_internalizer_1a8faa25c5244cf5c5b72330bcac74770d">
		<apiName>InternalizeAsL</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="private"/>
				<cxxFunctionStorageClassSpecifierStatic/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TInternalizer</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline static void InternalizeAsL(TAny *aPtr, RReadStream &amp;aStream)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TInternalizer::InternalizeAsL(TAny *,RReadStream &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1af7aafba448a6eaa6ce8801f88dcb5b90">TAny</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPtr</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_r_read_stream.xml#class_r_read_stream">RReadStream</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aStream</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/s32strm.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="233"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/cs_subconn.cpp"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="195"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="196"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
</cxxClass>