<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<!DOCTYPE cxxClass PUBLIC "-//NOKIA//DTD DITA C++ API Class Reference Type v0.5.0//EN" "dtd/cxxClass.dtd" >
<cxxClass id="class_t_region">
	<apiName>TRegion</apiName>
	<cxxClassDetail>
		<cxxClassDefinition>
			<cxxClassAccessSpecifier value="public"/>
			<cxxClassAPIItemLocation>
				<cxxClassDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDeclarationFileLine name="lineNumber" value="2631"/>
				<cxxClassDefinitionFile name="filePath" value="K:/epoc32/include/e32std.h"/>
				<cxxClassDefinitionFileLineStart name="lineNumber" value="2630"/>
				<cxxClassDefinitionFileLineEnd name="lineNumber" value="2675"/>
			</cxxClassAPIItemLocation>
		</cxxClassDefinition>
		<apiDesc>
			<p>Clipping region - abstract base class.</p>
			<p>This abstract base class represents a 2-dimensional area which is used by Graphics, the graphics window server, and the text window server to define regions of the display which need to be updated, or regions within which all operations must occur.</p>
			<p>A <xref href="class_t_region.xml#class_t_region">TRegion</xref> is defined in terms of an array of TRects and the more complex the region, the more TRects are required to represent it.</p>
			<p>A clipping region initially has space allocated for five rectangles. If manipulations result in a region which requires more than this, an attempt is made to allocate more rectangles. If this cannot be done, an error flag is set, and all subsequent operations involving the region have no effect (except possibly to propagate the error flag to other regions). The <xref href="class_t_region.xml#class_t_region_1afb08b70d21c26e0510e6a45a1fabb999">CheckError()</xref> member function allows the error flag to be tested; <xref href="class_t_region.xml#class_t_region_1ae3e71b264e2d3098ee93a48752e6826e">Clear()</xref> can be used to clear it.</p>
			<p>The redraw logic of application programs may use the <xref href="class_t_region.xml#class_t_region">TRegion</xref> in various ways:</p>
			<p>1. minimally, they pass it to the graphics context as the clipping region; when a graphics context is activated to a window, the clipping region is set up automatically</p>
			<p>2. if they wish to avoid redrawing objects which are outside the general area of the region, they may use <xref href="class_t_region.xml#class_t_region_1af55a8f238dbe9b7fdfbffa76188e4195">TRegion::BoundingRect()</xref> to return the rectangle which bounds the clipping region, and draw only primitives that lie within that rectangle</p>
			<p>3. if they wish to exercise finer control, they may extract the individual rectangles that comprise the clipping region using Operator[]().</p>
			<p>Application programs may also manipulate clipping regions in order to constrain parts of their redrawing to narrower areas of the screen than the clipping region offered by the window server. To do this, functions that allow clipping region manipulation may be used; for example, adding or removing rectangles or finding the intersection or union of two regions. </p>
		</apiDesc>
	</cxxClassDetail>
	<cxxFunction id="class_t_region_1a63cca5fb35bd64b48de5f450707415f6">
		<apiName>Count</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TInt Count() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Count()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2633"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="4497"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="4503"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets the number of rectangles in this region.</p>
				<p>The number of rectangles. </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a7c90deee7860510568e8f710cf4a7484">
		<apiName>RectangleList</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>const <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline const TRect * RectangleList() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::RectangleList()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2634"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="4508"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="4518"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Gets a pointer to the array of rectangles defining this region.</p>
				<p>Pointer to the array of rectangles. Note that array is a standard C++ array, i.e. a concatenated set of <xref href="class_t_rect.xml#class_t_rect">TRect</xref> objects. Use <xref href="class_t_region.xml#class_t_region_1a63cca5fb35bd64b48de5f450707415f6">Count()</xref> to get the number of rectangles.</p>
				<p>
					<xref href="class_t_region.xml#class_t_region_1a63cca5fb35bd64b48de5f450707415f6">TRegion::Count</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1afb08b70d21c26e0510e6a45a1fabb999">
		<apiName>CheckError</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionInline/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TBool CheckError() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::CheckError()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2635"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="4471"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="4492"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc>
				<p>Tests whether the region&apos;s error flag is set.</p>
				<p>The error flag may be set:</p>
				<p>1. when an attempt to allocate more memory for the region fails</p>
				<p>2. if an attempt is made to expand a fixed size region beyond its allocated size</p>
				<p>3. if <xref href="class_t_region.xml#class_t_region_1acbee4e3d8d6873f2e470a2a97d0a2a63">ForceError()</xref> has been called.</p>
				<p>Use <xref href="class_t_region.xml#class_t_region_1ae3e71b264e2d3098ee93a48752e6826e">Clear()</xref> to unset the error flag, clear the region and free all allocated memory.</p>
				<p>True, if the error flag is set; false, otherwise.</p>
				<p>
					<xref href="class_t_region.xml#class_t_region_1acbee4e3d8d6873f2e470a2a97d0a2a63">TRegion::ForceError</xref> </p>
				<p>
					<xref href="class_t_region.xml#class_t_region_1ae3e71b264e2d3098ee93a48752e6826e">TRegion::Clear</xref> </p>
			</apiDesc>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1aa75bdd5d962f63fb0bbfcf30b811e78b">
		<apiName>IsEmpty</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TBool IsEmpty() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::IsEmpty()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2636"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1af55a8f238dbe9b7fdfbffa76188e4195">
		<apiName>BoundingRect</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TRect BoundingRect() const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::BoundingRect()const</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2637"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1af7795ae7f8e6b367a148f833bd018c17">
		<apiName>operator[]</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C const <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> &amp;</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C const TRect &amp; operator[](TInt aIndex) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::operator[](TInt)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aIndex</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2638"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a2968bdf7f72331e67e8229db4927dec2">
		<apiName>Copy</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Copy(const TRegion &amp;aRegion)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Copy(const TRegion &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRegion</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2639"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1ae54e9549e1f407ef2dda98431b8f5f17">
		<apiName>AddRect</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void AddRect(const TRect &amp;aRect)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::AddRect(const TRect &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRect</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2640"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a0eab3ae6a45447c31b6330a58fe8e91d">
		<apiName>SubRect</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SubRect(const TRect &amp;aRect, TRegion *aSubtractedRegion=NULL)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::SubRect(const TRect &amp;,TRegion *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRect</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSubtractedRegion</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>NULL</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2641"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a0612006396e388ccf667ef01387a4c19">
		<apiName>Offset</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Offset(TInt aXoffset, TInt aYoffset)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Offset(TInt,TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aXoffset</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aYoffset</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2642"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a43fcc8a97e2613dfb911c2f64725ae89">
		<apiName>Offset</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Offset(const TPoint &amp;aOffset)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Offset(const TPoint &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_point.xml#class_t_point">TPoint</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOffset</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2643"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a1dabc53dee94a5f588c923208b6d96db">
		<apiName>Union</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Union(const TRegion &amp;aRegion)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Union(const TRegion &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRegion</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2644"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1afb1b449b666fdb9b6f1682cbd4f6802a">
		<apiName>Intersection</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Intersection(const TRegion &amp;aRegion, const TRegion &amp;aRegion2)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Intersection(const TRegion &amp;,const TRegion &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRegion</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRegion2</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2645"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a8ba87bcf5fa0fd4328e5fd47df704136">
		<apiName>Intersect</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Intersect(const TRegion &amp;aRegion)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Intersect(const TRegion &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRegion</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2646"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1ab0b9f4ff239e8f687ff4005bd501aafa">
		<apiName>SubRegion</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void SubRegion(const TRegion &amp;aRegion, TRegion *aSubtractedRegion=NULL)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::SubRegion(const TRegion &amp;,TRegion *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRegion</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSubtractedRegion</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>NULL</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2647"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a224db9b608a071482e2346331486d7fc">
		<apiName>ClipRect</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void ClipRect(const TRect &amp;aRect)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::ClipRect(const TRect &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRect</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2648"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1ae3e71b264e2d3098ee93a48752e6826e">
		<apiName>Clear</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Clear()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Clear()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2649"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a0e45182d1f7faa79d7af7a3254de916c">
		<apiName>Tidy</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void Tidy()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Tidy()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2650"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a4c4856b03658b260f3f7b1f168a7d8a8">
		<apiName>Sort</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt Sort()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Sort()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2651"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a2981b02c59c36c2843ab425b3b9a857a">
		<apiName>Sort</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TInt Sort(const TPoint &amp;aOffset)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Sort(const TPoint &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_point.xml#class_t_point">TPoint</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aOffset</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2652"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1acbee4e3d8d6873f2e470a2a97d0a2a63">
		<apiName>ForceError</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionDeclaredType>IMPORT_C void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C void ForceError()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::ForceError()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2653"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1af8da23f371546059e2ec31d9315d60df">
		<apiName>IsContainedBy</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TBool IsContainedBy(const TRect &amp;aRect) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::IsContainedBy(const TRect &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRect</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2654"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1ad0e323e52111a4e645e91922b33a4e93">
		<apiName>Contains</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TBool Contains(const TPoint &amp;aPoint) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Contains(const TPoint &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_point.xml#class_t_point">TPoint</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aPoint</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2655"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a4538091cd8b1b68324e27beb0a1d8e59">
		<apiName>Intersects</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="public"/>
				<cxxFunctionConst/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TBool Intersects(const TRect &amp;aRect) const </cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::Intersects(const TRect &amp;)const</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRect</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2656"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1af1ba41af93527b7841f78816f8b755ca">
		<apiName>RectangleListW</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>IMPORT_C <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TRect * RectangleListW()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::RectangleListW()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2658"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a44d9b651f8ae90aace62680f38df40e6">
		<apiName>TRegion</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType>IMPORT_C</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>IMPORT_C TRegion(TInt aAllocedRects)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::TRegion(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aAllocedRects</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2659"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a6bb8a2b244b295663fa50ada47159e1d">
		<apiName>TRegion</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionInline/>
				<cxxFunctionConstructor/>
				<cxxFunctionDeclaredType/>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>inline TRegion()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::TRegion()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2660"/>
					<cxxFunctionDefinitionFile name="filePath" value="K:/sf/os/commsfw/datacommsserver/esockserver/csock/CS_CLI.CPP"/>
					<cxxFunctionDefinitionFileLineStart name="lineNumber" value="4523"/>
					<cxxFunctionDefinitionFileLineEnd name="lineNumber" value="4524"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1abd8f7a9da8f7e45b4de78fba78f5ecec">
		<apiName>SetListSize</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>TBool SetListSize(TInt aCount)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::SetListSize(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aCount</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2661"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a594db65485a19bad0466da2dd86fbd31">
		<apiName>AppendRect</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>void AppendRect(const TRect &amp;aRect)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::AppendRect(const TRect &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRect</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2662"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1af4eda151030a88cba73606ac101b3d0f">
		<apiName>DeleteRect</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>void DeleteRect(TRect *aRect)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::DeleteRect(TRect *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRect</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2663"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a1cf4baaed735135bec6ce6e418fd8de0">
		<apiName>AppendRegion</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>void AppendRegion(TRegion &amp;aRegion)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::AppendRegion(TRegion &amp;)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRegion</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2664"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a26b2f6f577d5cc3753a8c42e13b5f681">
		<apiName>MergeRect</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>void MergeRect(const TRect &amp;aRect, TBool aEnclosed)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::MergeRect(const TRect &amp;,TBool)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRect</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aEnclosed</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2665"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1adfaca0afcb7efa90f0994bcc54f3ec1c">
		<apiName>SubtractRegion</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>void SubtractRegion(const TRegion &amp;aRegion, TRegion *aSubtractedRegion=NULL)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::SubtractRegion(const TRegion &amp;,TRegion *)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>const <apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> &amp;</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aRegion</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="class_t_region.xml#class_t_region">TRegion</apiRelation> *</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aSubtractedRegion</cxxFunctionParameterDeclarationName>
						<cxxFunctionParameterDefaultValue>NULL</cxxFunctionParameterDefaultValue>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2666"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1a99da260e6d9e6e750f602f360abf2f8c">
		<apiName>ShrinkRegion</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>void</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>void ShrinkRegion()</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::ShrinkRegion()</cxxFunctionNameLookup>
				<cxxFunctionParameters/>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2667"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxFunction id="class_t_region_1ad3334ba6a0e8259063fa5f025da9c610">
		<apiName>ExpandRegion</apiName>
		<cxxFunctionDetail>
			<cxxFunctionDefinition>
				<cxxFunctionAccessSpecifier value="protected"/>
				<cxxFunctionDeclaredType>
					<apiRelation href="class_t_rect.xml#class_t_rect">TRect</apiRelation> *</cxxFunctionDeclaredType>
				<cxxFunctionScopedName>TRegion</cxxFunctionScopedName>
				<cxxFunctionPrototype>TRect * ExpandRegion(TInt aCount)</cxxFunctionPrototype>
				<cxxFunctionNameLookup>TRegion::ExpandRegion(TInt)</cxxFunctionNameLookup>
				<cxxFunctionParameters>
					<cxxFunctionParameter>
						<cxxFunctionParameterDeclaredType>
							<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
						</cxxFunctionParameterDeclaredType>
						<cxxFunctionParameterDeclarationName>aCount</cxxFunctionParameterDeclarationName>
						<apiDefNote/>
					</cxxFunctionParameter>
				</cxxFunctionParameters>
				<cxxFunctionAPIItemLocation>
					<cxxFunctionDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxFunctionDeclarationFileLine name="lineNumber" value="2668"/>
				</cxxFunctionAPIItemLocation>
			</cxxFunctionDefinition>
			<apiDesc/>
		</cxxFunctionDetail>
	</cxxFunction>
	<cxxVariable id="class_t_region_1a12ed75d7dcc4c1b2416d6dbd21e5bb85">
		<apiName>iCount</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TRegion</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iCount</cxxVariablePrototype>
				<cxxVariableNameLookup>TRegion::iCount</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2670"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_region_1a1195a35061114c9d350aa952783135d7">
		<apiName>iError</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1a20c972998428c427c873ed496231115c">TBool</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TRegion</cxxVariableScopedName>
				<cxxVariablePrototype>TBool iError</cxxVariablePrototype>
				<cxxVariableNameLookup>TRegion::iError</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2671"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
	<cxxVariable id="class_t_region_1a3499dd44125d2f942845680181f45d58">
		<apiName>iAllocedRects</apiName>
		<cxxVariableDetail>
			<cxxVariableDefinition>
				<cxxVariableAccessSpecifier value="protected"/>
				<cxxVariableDeclaredType>
					<apiRelation href="e32def_8h.xml#_1abb88f5378e8305d934297176fe5fa298">TInt</apiRelation>
				</cxxVariableDeclaredType>
				<cxxVariableScopedName>TRegion</cxxVariableScopedName>
				<cxxVariablePrototype>TInt iAllocedRects</cxxVariablePrototype>
				<cxxVariableNameLookup>TRegion::iAllocedRects</cxxVariableNameLookup>
				<cxxVariableAPIItemLocation>
					<cxxVariableDeclarationFile name="filePath" value="K:/epoc32/include/e32std.h"/>
					<cxxVariableDeclarationFileLine name="lineNumber" value="2672"/>
				</cxxVariableAPIItemLocation>
			</cxxVariableDefinition>
			<apiDesc/>
		</cxxVariableDetail>
	</cxxVariable>
</cxxClass>